{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/App.js\",\n    _s = $RefreshSig$();\n\n//import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Credentials } from \"./Credentials\";\nimport Auth from \"./Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpotifyWebApi = require(\"spotify-web-api-node\");\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [useEffect(() => {\n          const spotify = Credentials();\n          var spotifyApi = new SpotifyWebApi(spotify);\n          console.log(\"Spotify ClientID\", spotify.clientId);\n          const scopes = [\"user-read-private\", \"user-read-email\"];\n          const state = \"123\"; // Setting credentials can be done in the wrapper's constructor, or using the API object's setters.\n          // Create the authorization URL\n\n          var authorizeURL = spotifyApi.createAuthorizeURL(scopes, \"123\");\n          window.location.replace(authorizeURL);\n        }, []), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Testing this!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/callback/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Not Found!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","axios","Credentials","Auth","SpotifyWebApi","require","App","token","setToken","spotify","spotifyApi","console","log","clientId","scopes","state","authorizeURL","createAuthorizeURL","window","location","replace"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,sBAAD,CAA7B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,mBACGC,SAAS,CAAC,MAAM;AACf,gBAAMc,OAAO,GAAGP,WAAW,EAA3B;AACA,cAAIQ,UAAU,GAAG,IAAIN,aAAJ,CAAkBK,OAAlB,CAAjB;AAEAE,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,OAAO,CAACI,QAAxC;AACA,gBAAMC,MAAM,GAAG,CAAC,mBAAD,EAAsB,iBAAtB,CAAf;AACA,gBAAMC,KAAK,GAAG,KAAd,CANe,CAOf;AAEA;;AACA,cAAIC,YAAY,GAAGN,UAAU,CAACO,kBAAX,CAA8BH,MAA9B,EAAsC,KAAtC,CAAnB;AACAI,UAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBJ,YAAxB;AACD,SAZS,EAYP,EAZO,CADZ,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,KAAK,EAAE,IAAhC;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF,eAoBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA/BQV,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["//import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport { Credentials } from \"./Credentials\";\nimport Auth from \"./Auth\";\nconst SpotifyWebApi = require(\"spotify-web-api-node\");\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          {useEffect(() => {\n            const spotify = Credentials();\n            var spotifyApi = new SpotifyWebApi(spotify);\n\n            console.log(\"Spotify ClientID\", spotify.clientId);\n            const scopes = [\"user-read-private\", \"user-read-email\"];\n            const state = \"123\";\n            // Setting credentials can be done in the wrapper's constructor, or using the API object's setters.\n\n            // Create the authorization URL\n            var authorizeURL = spotifyApi.createAuthorizeURL(scopes, \"123\");\n            window.location.replace(authorizeURL);\n          }, [])}\n          <h1>Testing this!</h1>\n        </Route>\n        <Route path=\"/callback/\" exact={true}>\n          <Auth />\n        </Route>\n        <Route path=\"*\">\n          <h1>Not Found!</h1>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}