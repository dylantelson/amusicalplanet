{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Play.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = props => {\n  if (props.spotifyApi.access_token === null) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 54\n  }, this);\n  let currArtist;\n  console.log(\"My curr API token is \", props.spotifyApi.access_token);\n  props.spotifyApi.getPlaylist(\"0s2RYa25RwXR5rDAMcpB3P\").then(function (data) {\n    //console.log('Track: ' + JSON.stringify(data.body));\n    let track = \"\";\n    let artist = \"\";\n\n    while (track === \"\") {\n      const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n      const possibleTrack = data.body.tracks.items[chosenIndex].track.preview_url;\n\n      if (possibleTrack != null) {\n        track = possibleTrack;\n        artist = data.body.tracks.items[chosenIndex].track.artists[0].name;\n      }\n    } //const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n    //console.log('URL: ' + data.body.tracks.items[0].preview_url);\n    //track = data.body.tracks.items[chosenIndex].track.preview_url;\n    //console.log(track);\n\n\n    currArtist = artist;\n  }, function (err) {\n    console.log(\"Something went wrong!\", err);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: currArtist\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Play.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","Play","props","spotifyApi","access_token","currArtist","console","log","getPlaylist","then","data","track","artist","chosenIndex","Math","floor","random","body","tracks","items","length","possibleTrack","preview_url","artists","name","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;;;AAQA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,MAAIA,KAAK,CAACC,UAAN,CAAiBC,YAAjB,KAAkC,IAAtC,EAA4C,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AAE5C,MAAIC,UAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,KAAK,CAACC,UAAN,CAAiBC,YAAtD;AACAF,EAAAA,KAAK,CAACC,UAAN,CAAiBK,WAAjB,CAA6B,wBAA7B,EAAuDC,IAAvD,CACE,UAAUC,IAAV,EAAgB;AACd;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,WAAOD,KAAK,KAAK,EAAjB,EAAqB;AACnB,YAAME,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,KAAgBN,IAAI,CAACO,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,CAAuBC,MADrB,CAApB;AAGA,YAAMC,aAAa,GACjBX,IAAI,CAACO,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,CAAuBN,WAAvB,EAAoCF,KAApC,CAA0CW,WAD5C;;AAEA,UAAID,aAAa,IAAI,IAArB,EAA2B;AACzBV,QAAAA,KAAK,GAAGU,aAAR;AACAT,QAAAA,MAAM,GAAGF,IAAI,CAACO,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,CAAuBN,WAAvB,EAAoCF,KAApC,CAA0CY,OAA1C,CAAkD,CAAlD,EAAqDC,IAA9D;AACD;AACF,KAda,CAed;AACA;AACA;AACA;;;AACAnB,IAAAA,UAAU,GAAGO,MAAb;AACD,GArBH,EAsBE,UAAUa,GAAV,EAAe;AACbnB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCkB,GAArC;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAzBH;AA4BA,sBAAO;AAAA,cAAKpB;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlCD;;KAAMJ,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Play = (props) => {\n  if (props.spotifyApi.access_token === null) return <Redirect to=\"/\" />;\n\n  let currArtist;\n  console.log(\"My curr API token is \", props.spotifyApi.access_token);\n  props.spotifyApi.getPlaylist(\"0s2RYa25RwXR5rDAMcpB3P\").then(\n    function (data) {\n      //console.log('Track: ' + JSON.stringify(data.body));\n      let track = \"\";\n      let artist = \"\";\n      while (track === \"\") {\n        const chosenIndex = Math.floor(\n          Math.random() * data.body.tracks.items.length\n        );\n        const possibleTrack =\n          data.body.tracks.items[chosenIndex].track.preview_url;\n        if (possibleTrack != null) {\n          track = possibleTrack;\n          artist = data.body.tracks.items[chosenIndex].track.artists[0].name;\n        }\n      }\n      //const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n      //console.log('URL: ' + data.body.tracks.items[0].preview_url);\n      //track = data.body.tracks.items[chosenIndex].track.preview_url;\n      //console.log(track);\n      currArtist = artist;\n    },\n    function (err) {\n      console.log(\"Something went wrong!\", err);\n      return <Redirect to=\"/error\" />;\n    }\n  );\n\n  return <h1>{currArtist}</h1>;\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}