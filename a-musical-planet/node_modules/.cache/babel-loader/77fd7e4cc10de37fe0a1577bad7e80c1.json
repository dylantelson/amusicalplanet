{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/App.js\",\n    _s = $RefreshSig$();\n\n//import \"./App.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Play from \"./Play\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport ChooseMap from \"./ChooseMap\";\nimport getCookie from \"./GetCookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext(null);\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    userName: \"\",\n    maxScores: {},\n    currGameScore: 0\n  }); //default world as map\n\n  const [currMap, setCurrMap] = useState(\"World\");\n\n  const setTokenFromCookie = () => {\n    const accessTokenCookie = getCookie(\"accessToken\");\n    console.log(\"myCookie\", accessTokenCookie);\n\n    if (accessTokenCookie !== \"\") {\n      console.log(\"GOT COOKIE!\", accessTokenCookie);\n      setAccessToken(accessTokenCookie);\n      return true;\n    } else {\n      console.log(\"Could not find cookie\");\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    console.log(accessToken);\n\n    if (accessToken !== \"\" && accessToken !== null) {\n      console.log(\"UseEffect setting user with accesstoken\", accessToken);\n      setUser();\n    } else {\n      console.log(\"No access token with which to set user\");\n    }\n  }, [accessToken]);\n\n  const setUser = async () => {\n    console.log(\"SETTING USER\");\n    return axios(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Accept: \"application/json\",\n        // \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken\n      },\n      method: \"GET\"\n    }).then(spotifyData => {\n      console.log(\"SPOTIFY DATA\");\n      console.log(spotifyData);\n      axios(`http://localhost:8888/userData/${spotifyData.data.id}`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"GET\"\n      }).then(dbUserData => {\n        console.log(\"DATABASE DATA\");\n        console.log(dbUserData);\n        setUserData({\n          displayName: dbUserData.data.displayName,\n          userName: dbUserData.data.userName,\n          maxScores: dbUserData.data.maxScores,\n          currGameScore: 0\n        });\n      }); // setUserData({\n      //   username: userData.data.display_name,\n      //   totalScore: 0,\n      // });\n    }).catch(err => {\n      console.log(\"ERROR GETTING SPOTIFY USER DATA\", err);\n\n      if (err.response.status >= 400) {\n        console.log(\"ERROR 400+, REFRESHING TOKEN\");\n        window.location.replace(\"http://localhost:8888/getNewToken\");\n      }\n    });\n  };\n\n  const handleMapChosen = mapName => {\n    if (accessToken === null || accessToken === \"\") {\n      if (!setTokenFromCookie()) return setRedirect(\"login\");\n    }\n\n    console.log(\"HANDLING MAP CHOSEN\");\n    setCurrMap(mapName.replace(\" \", \"\")); // setRedirect(\"play\");\n  };\n\n  const checkToken = () => {\n    if (!setTokenFromCookie()) {\n      setRedirect(\"login\");\n    }\n  };\n\n  const handleLogin = () => {\n    window.location.replace(\"http://localhost:8888/login\");\n  };\n\n  const handleAuth = () => {\n    // console.log(accessToken === \"\");\n    // if (accessToken !== \"\" && accessToken !== null) {\n    //   console.log(\"have access token\", accessToken);\n    //   return setRedirect(\"maps\");\n    // }\n    // if (setTokenFromCookie()) {\n    //   console.log(\"gettin from cookie\");\n    //   return setRedirect(\"maps\");\n    // }\n    console.count(\"Handling AUTH\");\n    const URLAccessToken = new URLSearchParams(window.location.search).get(\"access_token\");\n    const URLRefreshToken = new URLSearchParams(window.location.search).get(\"refresh_token\");\n    setAccessToken(URLAccessToken);\n    let accessTokenExpireDate = new Date();\n    accessTokenExpireDate.setTime(accessTokenExpireDate.getTime() + 3600 * 1000);\n    let refreshTokenExpireDate = new Date();\n    refreshTokenExpireDate.setTime(refreshTokenExpireDate.getTime() + 3600 * 1000 * 24 * 365);\n    document.cookie = \"accessToken=\" + URLAccessToken + \";expires=\" + accessTokenExpireDate.toUTCString() + \";path=/\";\n    document.cookie = \"refreshToken=\" + URLRefreshToken + \";expires=\" + refreshTokenExpireDate.toUTCString() + \";path=/\"; // return <Redirect to=\"/maps\" />;\n\n    setRedirect(\"maps\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [redirect === \"play\" && window.location.pathname === \"/maps\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"play\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : null, redirect === \"maps\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/maps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 32\n      }, this) : null, redirect === \"login\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: userData,\n        children: [/*#__PURE__*/_jsxDEV(Header // userData={userData}\n        , {\n          checkToken: checkToken,\n          setRedirect: setRedirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            render: () => handleAuth()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: () => setTokenFromCookie() ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 40\n            }, this) : handleLogin()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: document.cookie === \"\" ? /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/maps\",\n            children: /*#__PURE__*/_jsxDEV(ChooseMap, {\n              handleMapChosen: handleMapChosen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/play\",\n            children: /*#__PURE__*/_jsxDEV(Play, {\n              accessToken: accessToken,\n              token: accessToken,\n              currMap: currMap,\n              setAccessToken: setAccessToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/error\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Error! Check console\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Not Found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j81BP3FOZdaTClCeN9GaZAN0Occ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/App.js"],"names":["React","useState","useEffect","useContext","BrowserRouter","Router","Switch","Route","Redirect","axios","Play","Header","Login","ChooseMap","getCookie","UserContext","createContext","App","accessToken","setAccessToken","redirect","setRedirect","userData","setUserData","displayName","userName","maxScores","currGameScore","currMap","setCurrMap","setTokenFromCookie","accessTokenCookie","console","log","setUser","headers","Accept","Authorization","method","then","spotifyData","data","id","dbUserData","catch","err","response","status","window","location","replace","handleMapChosen","mapName","checkToken","handleLogin","handleAuth","count","URLAccessToken","URLSearchParams","search","get","URLRefreshToken","accessTokenExpireDate","Date","setTime","getTime","refreshTokenExpireDate","document","cookie","toUTCString","pathname"],"mappings":"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","sourcesContent":["//import \"./App.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Play from \"./Play\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport ChooseMap from \"./ChooseMap\";\n\nimport getCookie from \"./GetCookie\";\n\nexport const UserContext = React.createContext(null);\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    userName: \"\",\n    maxScores: {},\n    currGameScore: 0,\n  });\n\n  //default world as map\n  const [currMap, setCurrMap] = useState(\"World\");\n\n  const setTokenFromCookie = () => {\n    const accessTokenCookie = getCookie(\"accessToken\");\n    console.log(\"myCookie\", accessTokenCookie);\n    if (accessTokenCookie !== \"\") {\n      console.log(\"GOT COOKIE!\", accessTokenCookie);\n      setAccessToken(accessTokenCookie);\n      return true;\n    } else {\n      console.log(\"Could not find cookie\");\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    console.log(accessToken);\n    if (accessToken !== \"\" && accessToken !== null) {\n      console.log(\"UseEffect setting user with accesstoken\", accessToken);\n      setUser();\n    } else {\n      console.log(\"No access token with which to set user\");\n    }\n  }, [accessToken]);\n\n  const setUser = async () => {\n    console.log(\"SETTING USER\");\n    return axios(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Accept: \"application/json\",\n        // \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n      method: \"GET\",\n    })\n      .then((spotifyData) => {\n        console.log(\"SPOTIFY DATA\");\n        console.log(spotifyData);\n        axios(`http://localhost:8888/userData/${spotifyData.data.id}`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          method: \"GET\",\n        }).then((dbUserData) => {\n          console.log(\"DATABASE DATA\");\n          console.log(dbUserData);\n          setUserData({\n            displayName: dbUserData.data.displayName,\n            userName: dbUserData.data.userName,\n            maxScores: dbUserData.data.maxScores,\n            currGameScore: 0,\n          });\n        });\n        // setUserData({\n        //   username: userData.data.display_name,\n        //   totalScore: 0,\n        // });\n      })\n      .catch((err) => {\n        console.log(\"ERROR GETTING SPOTIFY USER DATA\", err);\n        if (err.response.status >= 400) {\n          console.log(\"ERROR 400+, REFRESHING TOKEN\");\n          window.location.replace(\"http://localhost:8888/getNewToken\");\n        }\n      });\n  };\n\n  const handleMapChosen = (mapName) => {\n    if (accessToken === null || accessToken === \"\") {\n      if (!setTokenFromCookie()) return setRedirect(\"login\");\n    }\n    console.log(\"HANDLING MAP CHOSEN\");\n    setCurrMap(mapName.replace(\" \", \"\"));\n    // setRedirect(\"play\");\n  };\n\n  const checkToken = () => {\n    if (!setTokenFromCookie()) {\n      setRedirect(\"login\");\n    }\n  };\n\n  const handleLogin = () => {\n    window.location.replace(\"http://localhost:8888/login\");\n  };\n\n  const handleAuth = () => {\n    // console.log(accessToken === \"\");\n    // if (accessToken !== \"\" && accessToken !== null) {\n    //   console.log(\"have access token\", accessToken);\n    //   return setRedirect(\"maps\");\n    // }\n    // if (setTokenFromCookie()) {\n    //   console.log(\"gettin from cookie\");\n    //   return setRedirect(\"maps\");\n    // }\n    console.count(\"Handling AUTH\");\n    const URLAccessToken = new URLSearchParams(window.location.search).get(\n      \"access_token\"\n    );\n    const URLRefreshToken = new URLSearchParams(window.location.search).get(\n      \"refresh_token\"\n    );\n    setAccessToken(URLAccessToken);\n\n    let accessTokenExpireDate = new Date();\n    accessTokenExpireDate.setTime(\n      accessTokenExpireDate.getTime() + 3600 * 1000\n    );\n\n    let refreshTokenExpireDate = new Date();\n    refreshTokenExpireDate.setTime(\n      refreshTokenExpireDate.getTime() + 3600 * 1000 * 24 * 365\n    );\n\n    document.cookie =\n      \"accessToken=\" +\n      URLAccessToken +\n      \";expires=\" +\n      accessTokenExpireDate.toUTCString() +\n      \";path=/\";\n    document.cookie =\n      \"refreshToken=\" +\n      URLRefreshToken +\n      \";expires=\" +\n      refreshTokenExpireDate.toUTCString() +\n      \";path=/\";\n    // return <Redirect to=\"/maps\" />;\n    setRedirect(\"maps\");\n  };\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {redirect === \"play\" && window.location.pathname === \"/maps\" ? (\n          <Redirect to=\"play\" replace />\n        ) : null}\n        {redirect === \"maps\" ? <Redirect to=\"/maps\" /> : null}\n        {redirect === \"login\" ? <Redirect to=\"/login\" /> : null}\n        <UserContext.Provider value={userData}>\n          <Header\n            // userData={userData}\n            checkToken={checkToken}\n            setRedirect={setRedirect}\n          />\n          <Switch>\n            <Route path=\"/auth\" render={() => handleAuth()} />\n            <Route\n              path=\"/login\"\n              render={() =>\n                setTokenFromCookie() ? <Redirect to=\"/maps\" /> : handleLogin()\n              }\n            />\n            <Route exact path=\"/\">\n              {document.cookie === \"\" ? (\n                <Login handleLogin={handleLogin} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )}\n            </Route>\n            <Route path=\"/maps\">\n              <ChooseMap handleMapChosen={handleMapChosen} />\n            </Route>\n            <Route path=\"/play\">\n              <Play\n                accessToken={accessToken}\n                token={accessToken}\n                currMap={currMap}\n                setAccessToken={setAccessToken}\n              />\n            </Route>\n            <Route path=\"/error\">\n              <h1>Error! Check console</h1>\n            </Route>\n            <Route path=\"*\">\n              <h1>Not Found!</h1>\n            </Route>\n          </Switch>\n        </UserContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}