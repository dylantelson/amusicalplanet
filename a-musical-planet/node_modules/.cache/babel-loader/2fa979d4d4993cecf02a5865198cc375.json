{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AudioPlayer = ({\n  audioRef,\n  trackURL,\n  useEffect\n}) => {\n  _s();\n\n  useEffect(() => {\n    audioRef.addEventListener(\"click\", e => {\n      e.target.classList.toggle(\"pause\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        volume: \"2\",\n        allow: \"autoplay\",\n        src: trackURL,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customAudio\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => audioRef.current.paused ? audioRef.current.play() : audioRef.current.pause(),\n        children: !audioRef.current || audioRef.current.paused ? \"Play\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AudioPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js"],"names":["React","AudioPlayer","audioRef","trackURL","useEffect","addEventListener","e","target","classList","toggle","current","paused","play","pause"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AAAA;;AACzDA,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAoCC,CAAD,IAAO;AACxCA,MAAAA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,MAAnB,CAA0B,OAA1B;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,QAAQ,MAAhC;AAAiC,MAAA,GAAG,EAAEP,QAAtC;AAAA,6BACE;AACE,QAAA,MAAM,EAAC,GADT;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,GAAG,EAAEC,QAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MACPD,QAAQ,CAACQ,OAAT,CAAiBC,MAAjB,GACIT,QAAQ,CAACQ,OAAT,CAAiBE,IAAjB,EADJ,GAEIV,QAAQ,CAACQ,OAAT,CAAiBG,KAAjB,EAJR;AAAA,kBAOG,CAACX,QAAQ,CAACQ,OAAV,IAAqBR,QAAQ,CAACQ,OAAT,CAAiBC,MAAtC,GAA+C,MAA/C,GAAwD;AAP3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAuBD,CA9BD;;GAAMV,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst AudioPlayer = ({ audioRef, trackURL, useEffect }) => {\n  useEffect(() => {\n    audioRef.addEventListener(\"click\", (e) => {\n      e.target.classList.toggle(\"pause\");\n    });\n  }, []);\n\n  return (\n    <>\n      <audio id=\"audioPlayer\" controls ref={audioRef}>\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={trackURL}\n          type=\"audio/mpeg\"\n        ></source>\n      </audio>\n      <div className=\"customAudio\">\n        <button\n          onClick={() =>\n            audioRef.current.paused\n              ? audioRef.current.play()\n              : audioRef.current.pause()\n          }\n        >\n          {!audioRef.current || audioRef.current.paused ? \"Play\" : \"Pause\"}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}