{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/MapItem.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { UserContext } from \"./App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapItem = ({\n  map,\n  handleMapChosen\n}) => {\n  _s();\n\n  const userData = useContext(UserContext);\n  const formattedMapName = map.name.toLowerCase().replace(\" \", \"\");\n  const maxScore = userData.maxScores[formattedMapName] ? userData.maxScores[formattedMapName] : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MapItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/mapimages/\" + map.image,\n      alt: map.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: map.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: map.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Max Score: ${maxScore}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/play\",\n      onClick: () => handleMapChosen(map.name),\n      replace: true,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapItem, \"Lum89giJ0h+kxpVxJs0Gki5rbsM=\");\n\n_c = MapItem;\nexport default MapItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapItem\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/MapItem.js"],"names":["React","BrowserRouter","Router","Link","UserContext","MapItem","map","handleMapChosen","userData","useContext","formattedMapName","name","toLowerCase","replace","maxScore","maxScores","image","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,UAA5B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAA8B;AAAA;;AAC5C,QAAMC,QAAQ,GAAGC,UAAU,CAACL,WAAD,CAA3B;AAEA,QAAMM,gBAAgB,GAAGJ,GAAG,CAACK,IAAJ,CAASC,WAAT,GAAuBC,OAAvB,CAA+B,GAA/B,EAAoC,EAApC,CAAzB;AACA,QAAMC,QAAQ,GAAGN,QAAQ,CAACO,SAAT,CAAmBL,gBAAnB,IACbF,QAAQ,CAACO,SAAT,CAAmBL,gBAAnB,CADa,GAEb,CAFJ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAE,gBAAgBJ,GAAG,CAACU,KAA9B;AAAqC,MAAA,GAAG,EAAEV,GAAG,CAACK;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKL,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIL,GAAG,CAACW;AAAR;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAK,cAAaH,QAAS;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,OAAO,EAAE,MAAMP,eAAe,CAACD,GAAG,CAACK,IAAL,CAA/C;AAA2D,MAAA,OAAO,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlBD;;GAAMN,O;;KAAAA,O;AAoBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { UserContext } from \"./App.js\";\n\nconst MapItem = ({ map, handleMapChosen }) => {\n  const userData = useContext(UserContext);\n\n  const formattedMapName = map.name.toLowerCase().replace(\" \", \"\");\n  const maxScore = userData.maxScores[formattedMapName]\n    ? userData.maxScores[formattedMapName]\n    : 0;\n  return (\n    <div className=\"MapItem\">\n      <img src={\"/mapimages/\" + map.image} alt={map.name} />\n      <h1>{map.name}</h1>\n      <p>{map.description}</p>\n      <p>{`Max Score: ${maxScore}`}</p>\n      <Link to=\"/play\" onClick={() => handleMapChosen(map.name)} replace>\n        Play\n      </Link>\n    </div>\n  );\n};\n\nexport default MapItem;\n"]},"metadata":{},"sourceType":"module"}