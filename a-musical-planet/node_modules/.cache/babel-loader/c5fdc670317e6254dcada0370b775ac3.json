{"ast":null,"code":"/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\n\nexport function defaults(opt_options) {\n  var options = opt_options ? opt_options : {};\n  var interactions = new Collection();\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ? options.altShiftDragRotate : true;\n\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n\n  if (dragPan) {\n    interactions.push(new DragPan({\n      onFocusOnly: options.onFocusOnly,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      onFocusOnly: options.onFocusOnly,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n}","map":{"version":3,"sources":["src/interaction.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map"]},"metadata":{},"sourceType":"module"}