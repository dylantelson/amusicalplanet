{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = props => {\n  _s();\n\n  console.log(\"acctok: \", props.accessToken);\n  const [currArtist, setCurrArtist] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    //props.spotifyApi.setAccessToken(props.token);\n    console.log(\"tok: \", props.accessToken);\n\n    if (props.accessToken === null) {\n      console.log(\"REDIRECTING\");\n      setRedirect(true);\n    }\n\n    fetch(\"https://api.spotify.com/v1/playlists/0s2RYa25RwXR5rDAMcpB3P\", {\n      headers: {\n        Authorization: \"Bearer \" + props.accessToken\n      }\n    }).then(function (data) {\n      console.log(\"Track: \" + JSON.stringify(data.tracks));\n      let track = \"\";\n      let artist = \"\";\n\n      while (track === \"\") {\n        const chosenIndex = Math.floor(Math.random() * data.tracks.items.length);\n        const possibleTrack = data.tracks.items[chosenIndex].track.preview_url;\n\n        if (possibleTrack != null) {\n          track = possibleTrack;\n          artist = data.tracks.items[chosenIndex].track.artists[0].name;\n        }\n      } //const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n      //console.log('URL: ' + data.body.tracks.items[0].preview_url);\n      //track = data.body.tracks.items[chosenIndex].track.preview_url;\n      //console.log(track);\n\n\n      setCurrArtist(artist);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this);\n    });\n  }, []);\n  if (redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Current Artist: \", currArtist]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Play, \"eQij4foS8si/iTzsKbBJIfoho9M=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Play.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Redirect","Play","props","console","log","accessToken","currArtist","setCurrArtist","redirect","setRedirect","fetch","headers","Authorization","then","data","JSON","stringify","tracks","track","artist","chosenIndex","Math","floor","random","items","length","possibleTrack","preview_url","artists","name","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;;;AAQA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAK,CAACG,WAA9B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,WAA3B;;AACA,QAAIH,KAAK,CAACG,WAAN,KAAsB,IAA1B,EAAgC;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAK,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDC,IAAAA,KAAK,CAAC,6DAAD,EAAgE;AACnEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYV,KAAK,CAACG;AAAnC;AAD0D,KAAhE,CAAL,CAEGQ,IAFH,CAGE,UAAUC,IAAV,EAAgB;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYW,IAAI,CAACC,SAAL,CAAeF,IAAI,CAACG,MAApB,CAAxB;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,aAAOD,KAAK,KAAK,EAAjB,EAAqB;AACnB,cAAME,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,KAAgBT,IAAI,CAACG,MAAL,CAAYO,KAAZ,CAAkBC,MADhB,CAApB;AAGA,cAAMC,aAAa,GACjBZ,IAAI,CAACG,MAAL,CAAYO,KAAZ,CAAkBJ,WAAlB,EAA+BF,KAA/B,CAAqCS,WADvC;;AAEA,YAAID,aAAa,IAAI,IAArB,EAA2B;AACzBR,UAAAA,KAAK,GAAGQ,aAAR;AACAP,UAAAA,MAAM,GAAGL,IAAI,CAACG,MAAL,CAAYO,KAAZ,CAAkBJ,WAAlB,EAA+BF,KAA/B,CAAqCU,OAArC,CAA6C,CAA7C,EAAgDC,IAAzD;AACD;AACF,OAda,CAed;AACA;AACA;AACA;;;AACAtB,MAAAA,aAAa,CAACY,MAAD,CAAb;AACD,KAvBH,EAwBE,UAAUW,GAAV,EAAe;AACb3B,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC0B,GAArC;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KA3BH;AA6BD,GApCQ,EAoCN,EApCM,CAAT;AAsCA,MAAItB,QAAJ,EAAc,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,sBAAO;AAAA,mCAAqBF,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5CD;;GAAML,I;;KAAAA,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Play = (props) => {\n  console.log(\"acctok: \", props.accessToken);\n  const [currArtist, setCurrArtist] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    //props.spotifyApi.setAccessToken(props.token);\n    console.log(\"tok: \", props.accessToken);\n    if (props.accessToken === null) {\n      console.log(\"REDIRECTING\");\n      setRedirect(true);\n    }\n    fetch(\"https://api.spotify.com/v1/playlists/0s2RYa25RwXR5rDAMcpB3P\", {\n      headers: { Authorization: \"Bearer \" + props.accessToken },\n    }).then(\n      function (data) {\n        console.log(\"Track: \" + JSON.stringify(data.tracks));\n        let track = \"\";\n        let artist = \"\";\n        while (track === \"\") {\n          const chosenIndex = Math.floor(\n            Math.random() * data.tracks.items.length\n          );\n          const possibleTrack =\n            data.tracks.items[chosenIndex].track.preview_url;\n          if (possibleTrack != null) {\n            track = possibleTrack;\n            artist = data.tracks.items[chosenIndex].track.artists[0].name;\n          }\n        }\n        //const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n        //console.log('URL: ' + data.body.tracks.items[0].preview_url);\n        //track = data.body.tracks.items[chosenIndex].track.preview_url;\n        //console.log(track);\n        setCurrArtist(artist);\n      },\n      function (err) {\n        console.log(\"Something went wrong!\", err);\n        return <Redirect to=\"/error\" />;\n      }\n    );\n  }, []);\n\n  if (redirect) return <Redirect to=\"/\" />;\n  return <h1>Current Artist: {currArtist}</h1>;\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}