{"ast":null,"code":"import bisect from \"./bisect.js\";\nexport default function (objects) {\n  var indexesByArc = {},\n      // arc index -> array of object indexes\n  neighbors = objects.map(function () {\n    return [];\n  });\n\n  function line(arcs, i) {\n    arcs.forEach(function (a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function (arc) {\n      line(arc, i);\n    });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function (o) {\n      geometry(o, i);\n    });else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function MultiPolygon(arcs, i) {\n      arcs.forEach(function (arc) {\n        polygon(arc, i);\n      });\n    }\n  };\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j],\n            ik = indexes[k],\n            n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/node_modules/topojson-client/src/neighbors.js"],"names":["bisect","objects","indexesByArc","neighbors","map","line","arcs","i","forEach","a","o","push","polygon","arc","geometry","type","geometries","geometryType","LineString","MultiLineString","Polygon","MultiPolygon","indexes","m","length","j","k","ij","ik","n","splice"],"mappings":"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","sourcesContent":["import bisect from \"./bisect.js\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n"]},"metadata":{},"sourceType":"module"}