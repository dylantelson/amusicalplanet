{"ast":null,"code":"/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\n\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\n\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\n\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\n\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\n\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\n\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\n\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\n\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\n\nexport var labelCache = new EventTarget();\n\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\n\n\nvar measureContext = null;\n/**\n * @type {string}\n */\n\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\n\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\n\nexport var registerFont = function () {\n  var retries = 100;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    var available = true;\n\n    for (var i = 0; i < len; ++i) {\n      var referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n\n      if (fontFamily != referenceFont) {\n        var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text); // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n\n        available = available && width != referenceWidth;\n      }\n    }\n\n    if (available) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    var fonts = checkedFonts.getKeys();\n\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights); // Make sure that loaded fonts are picked up by Safari\n\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    var font = getFontParameters(fontSpec);\n\n    if (!font) {\n      return;\n    }\n\n    var families = font.families;\n\n    for (var i = 0, ii = families.length; i < ii; ++i) {\n      var family = families[i];\n      var key = font.style + '\\n' + font.weight + '\\n' + family;\n\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n}();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\n\nexport var measureTextHeight = function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  var measureElement;\n  return function (fontSpec) {\n    var height = textHeights[fontSpec];\n\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        var font = getFontParameters(fontSpec);\n        var metrics = measureText(fontSpec, 'Å½g');\n        var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n        height = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n\n      textHeights[fontSpec] = height;\n    }\n\n    return height;\n  };\n}();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\n\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n\n  return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\n\n\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\n\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n\n  var width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\n\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n\n  return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\n\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\n\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (\n  /** @type {*} */\n  labelOrImage.contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(labelOrImage, context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(labelOrImage, originX, originY, w, h, 0, 0, w, h);\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(labelOrImage, originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n  }\n\n  context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\n\nfunction executeLabelInstructions(label, context) {\n  var contextInstructions = label.contextInstructions;\n\n  for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}","map":{"version":3,"sources":["../src/render/canvas.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Å½g');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map"]},"metadata":{},"sourceType":"module"}