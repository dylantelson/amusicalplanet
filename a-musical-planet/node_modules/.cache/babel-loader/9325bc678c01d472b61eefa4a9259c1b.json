{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/PersonalPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./PersonalPage.css\";\nimport MapData from \"./MapData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonalPage = () => {\n  _s();\n\n  const {\n    userName\n  } = useParams();\n  const [userData, setUserData] = useState(null);\n  const [chosenMap, setChosenMap] = useState(\"overall\");\n  useEffect(() => {\n    axios(`http://localhost:8888/userData/${userName}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"GET\"\n    }).then(({\n      data\n    }) => setUserData(data));\n  }, [userName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPageContainer\",\n    children: userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHead\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.profilePicture,\n          alt: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userName\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userData.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statsHead\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"maplist\",\n            onChange: e => {\n              console.log(\"Changing value to\", e.target.value.toLowerCase().replace(\" \", \"\"));\n              setChosenMap(e.target.value.toLowerCase().replace(\" \", \"\"));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"overall\",\n              children: \"Overall\"\n            }, \"overall\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), MapData.map(map => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: map.name,\n              children: map.name\n            }, map.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statsBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userData.stats.completedGames[chosenMap] ? userData.stats.completedGames[chosenMap] : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Completed Games\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: chosenMap === \"overall\" ? userData.stats.maxScores[chosenMap] ? `${userData.stats.maxScores[chosenMap].score} (${userData.stats.maxScores[chosenMap].map})` : 0 : userData.stats.maxScores[chosenMap] ? userData.stats.maxScores[chosenMap] : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Best Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userData.stats.averageScores[chosenMap] ? userData.stats.averageScores[chosenMap] : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Average Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonalPage, \"Rh1a5KyNNkOdvK01swHrtNhm/0o=\", false, function () {\n  return [useParams];\n});\n\n_c = PersonalPage;\nexport default PersonalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalPage\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/PersonalPage.js"],"names":["React","useContext","useEffect","useState","useParams","axios","MapData","PersonalPage","userName","userData","setUserData","chosenMap","setChosenMap","headers","Accept","method","then","data","profilePicture","displayName","e","console","log","target","value","toLowerCase","replace","map","name","stats","completedGames","maxScores","score","averageScores"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./PersonalPage.css\";\n\nimport MapData from \"./MapData.json\";\n\nconst PersonalPage = () => {\n  const { userName } = useParams();\n\n  const [userData, setUserData] = useState(null);\n\n  const [chosenMap, setChosenMap] = useState(\"overall\");\n\n  useEffect(() => {\n    axios(`http://localhost:8888/userData/${userName}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"GET\",\n    }).then(({ data }) => setUserData(data));\n  }, [userName]);\n\n  return (\n    <div className=\"userPageContainer\">\n      {userData ? (\n        <div className=\"userPage\">\n          <div className=\"userHead\">\n            <img src={userData.profilePicture} alt=\"User\" />\n            <div className=\"userName\">\n              <h1>{userData.displayName}</h1>\n            </div>\n          </div>\n          <div className=\"stats\">\n            <div className=\"statsHead\">\n              <h2>Game Statistics</h2>\n              <select\n                id=\"maplist\"\n                onChange={(e) => {\n                  console.log(\n                    \"Changing value to\",\n                    e.target.value.toLowerCase().replace(\" \", \"\")\n                  );\n                  setChosenMap(e.target.value.toLowerCase().replace(\" \", \"\"));\n                }}\n              >\n                <option key=\"overall\" value=\"overall\">\n                  Overall\n                </option>\n                {MapData.map((map) => (\n                  <option key={map.name} value={map.name}>\n                    {map.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"statsBody\">\n              <div>\n                <h3>\n                  {userData.stats.completedGames[chosenMap]\n                    ? userData.stats.completedGames[chosenMap]\n                    : 0}\n                </h3>\n                <p>Completed Games</p>\n              </div>\n              <div>\n                <h3>\n                  {chosenMap === \"overall\"\n                    ? userData.stats.maxScores[chosenMap]\n                      ? `${userData.stats.maxScores[chosenMap].score} (${userData.stats.maxScores[chosenMap].map})`\n                      : 0\n                    : userData.stats.maxScores[chosenMap]\n                    ? userData.stats.maxScores[chosenMap]\n                    : 0}\n                </h3>\n                <p>Best Game</p>\n              </div>\n              <div>\n                <h3>\n                  {userData.stats.averageScores[chosenMap]\n                    ? userData.stats.averageScores[chosenMap]\n                    : 0}\n                </h3>\n                <p>Average Game</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h3>LOADING...</h3>\n      )}\n    </div>\n  );\n};\n\nexport default PersonalPage;\n"]},"metadata":{},"sourceType":"module"}