{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/PinchZoom\n */\n\n\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\n\nvar PinchZoom = function (_super) {\n  __extends(PinchZoom, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function PinchZoom(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var pointerOptions = options;\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    _this = _super.call(this, pointerOptions) || this;\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n\n    _this.anchor_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 400;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    _this.lastDistance_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.lastScaleDelta_ = 1;\n    return _this;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY; // distance between touches\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n\n    this.lastDistance_ = distance;\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    } // scale anchor point.\n\n\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid); // scale, bypass the resolution constraint\n\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction);\n\nexport default PinchZoom;","map":{"version":3,"sources":["../src/interaction/PinchZoom.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map"]},"metadata":{},"sourceType":"module"}