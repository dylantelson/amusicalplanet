{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = props => {\n  _s();\n\n  console.log(\"acctok: \", props.accessToken);\n  const [currArtist, setCurrArtist] = useState(\"\");\n  const [redirect, setRedirect] = useState(false); //props.spotifyApi.setAccessToken(props.token);\n\n  console.log(\"tok: \", props.accessToken);\n\n  if (props.accessToken === null) {\n    console.log(\"REDIRECTING\");\n    setRedirect(true);\n  }\n\n  fetch(\"https://api.spotify.com/v1/playlists/0s2RYa25RwXR5rDAMcpB3P\", {\n    headers: {\n      Authorization: \"Bearer \" + props.accessToken\n    }\n  }).then(response => response.json()).then(() => {\n    let track = \"\";\n    let artist = \"\";\n\n    while (track === \"\") {\n      const chosenIndex = Math.floor(Math.random() * data.tracks.items.length);\n      const possibleTrack = data.tracks.items[chosenIndex].track.preview_url;\n\n      if (possibleTrack != null) {\n        track = possibleTrack;\n        artist = data.tracks.items[chosenIndex].track.artists[0].name;\n      }\n    }\n\n    const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n    console.log(\"URL: \" + data.body.tracks.items[0].preview_url);\n    track = data.body.tracks.items[chosenIndex].track.preview_url;\n    console.log(track);\n    setCurrArtist(artist);\n  }); // .then(\n  //   function (res => data) {\n  //     console.log(\"Track: \" + JSON.stringify(data));\n  //     let track = \"\";\n  //     let artist = \"\";\n  //     while (track === \"\") {\n  //       const chosenIndex = Math.floor(\n  //         Math.random() * data.tracks.items.length\n  //       );\n  //       const possibleTrack =\n  //         data.tracks.items[chosenIndex].track.preview_url;\n  //       if (possibleTrack != null) {\n  //         track = possibleTrack;\n  //         artist = data.tracks.items[chosenIndex].track.artists[0].name;\n  //       }\n  //     }\n  //     //const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n  //     //console.log('URL: ' + data.body.tracks.items[0].preview_url);\n  //     //track = data.body.tracks.items[chosenIndex].track.preview_url;\n  //     //console.log(track);\n  //     setCurrArtist(artist);\n  //   },\n  //   function (err) {\n  //     console.log(\"Something went wrong!\", err);\n  //     return <Redirect to=\"/error\" />;\n  //   }\n  // );\n\n  if (redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Current Artist: \", currArtist]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Play, \"IsuiVZT4iv7PR88NemD9rsX80vQ=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Play.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Redirect","Play","props","console","log","accessToken","currArtist","setCurrArtist","redirect","setRedirect","fetch","headers","Authorization","then","response","json","track","artist","chosenIndex","Math","floor","random","data","tracks","items","length","possibleTrack","preview_url","artists","name","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;;;AAQA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAK,CAACG,WAA9B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC,CAHsB,CAItB;;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,WAA3B;;AACA,MAAIH,KAAK,CAACG,WAAN,KAAsB,IAA1B,EAAgC;AAC9BF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAK,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDC,EAAAA,KAAK,CAAC,6DAAD,EAAgE;AACnEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE,YAAYV,KAAK,CAACG;AAAnC;AAD0D,GAAhE,CAAL,CAGGQ,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAIQ,MAAM;AACV,QAAIG,KAAK,GAAG,EAAZ;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,WAAOD,KAAK,KAAK,EAAjB,EAAqB;AACnB,YAAME,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,KAAgBC,IAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkBC,MADhB,CAApB;AAGA,YAAMC,aAAa,GAAGJ,IAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkBN,WAAlB,EAA+BF,KAA/B,CAAqCW,WAA3D;;AACA,UAAID,aAAa,IAAI,IAArB,EAA2B;AACzBV,QAAAA,KAAK,GAAGU,aAAR;AACAT,QAAAA,MAAM,GAAGK,IAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkBN,WAAlB,EAA+BF,KAA/B,CAAqCY,OAArC,CAA6C,CAA7C,EAAgDC,IAAzD;AACD;AACF;;AACD,UAAMX,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,KAAgBC,IAAI,CAACQ,IAAL,CAAUP,MAAV,CAAiBC,KAAjB,CAAuBC,MADrB,CAApB;AAGAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUkB,IAAI,CAACQ,IAAL,CAAUP,MAAV,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0BG,WAAhD;AACAX,IAAAA,KAAK,GAAGM,IAAI,CAACQ,IAAL,CAAUP,MAAV,CAAiBC,KAAjB,CAAuBN,WAAvB,EAAoCF,KAApC,CAA0CW,WAAlD;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACAT,IAAAA,aAAa,CAACU,MAAD,CAAb;AACD,GAxBH,EAVsB,CAmCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIT,QAAJ,EAAc,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,sBAAO;AAAA,mCAAqBF,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjED;;GAAML,I;;KAAAA,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Play = (props) => {\n  console.log(\"acctok: \", props.accessToken);\n  const [currArtist, setCurrArtist] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  //props.spotifyApi.setAccessToken(props.token);\n  console.log(\"tok: \", props.accessToken);\n  if (props.accessToken === null) {\n    console.log(\"REDIRECTING\");\n    setRedirect(true);\n  }\n  fetch(\"https://api.spotify.com/v1/playlists/0s2RYa25RwXR5rDAMcpB3P\", {\n    headers: { Authorization: \"Bearer \" + props.accessToken },\n  })\n    .then((response) => response.json())\n    .then(() => {\n      let track = \"\";\n      let artist = \"\";\n      while (track === \"\") {\n        const chosenIndex = Math.floor(\n          Math.random() * data.tracks.items.length\n        );\n        const possibleTrack = data.tracks.items[chosenIndex].track.preview_url;\n        if (possibleTrack != null) {\n          track = possibleTrack;\n          artist = data.tracks.items[chosenIndex].track.artists[0].name;\n        }\n      }\n      const chosenIndex = Math.floor(\n        Math.random() * data.body.tracks.items.length\n      );\n      console.log(\"URL: \" + data.body.tracks.items[0].preview_url);\n      track = data.body.tracks.items[chosenIndex].track.preview_url;\n      console.log(track);\n      setCurrArtist(artist);\n    });\n  // .then(\n  //   function (res => data) {\n  //     console.log(\"Track: \" + JSON.stringify(data));\n  //     let track = \"\";\n  //     let artist = \"\";\n  //     while (track === \"\") {\n  //       const chosenIndex = Math.floor(\n  //         Math.random() * data.tracks.items.length\n  //       );\n  //       const possibleTrack =\n  //         data.tracks.items[chosenIndex].track.preview_url;\n  //       if (possibleTrack != null) {\n  //         track = possibleTrack;\n  //         artist = data.tracks.items[chosenIndex].track.artists[0].name;\n  //       }\n  //     }\n  //     //const chosenIndex = Math.floor(Math.random() * data.body.tracks.items.length);\n  //     //console.log('URL: ' + data.body.tracks.items[0].preview_url);\n  //     //track = data.body.tracks.items[chosenIndex].track.preview_url;\n  //     //console.log(track);\n  //     setCurrArtist(artist);\n  //   },\n  //   function (err) {\n  //     console.log(\"Something went wrong!\", err);\n  //     return <Redirect to=\"/error\" />;\n  //   }\n  // );\n\n  if (redirect) return <Redirect to=\"/\" />;\n  return <h1>Current Artist: {currArtist}</h1>;\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}