{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Play = props => {\n  _s();\n\n  console.log(\"acctok: \", props.accessToken);\n  const [currArtist, setCurrArtist] = useState(\"\");\n  const [currTrack, setCurrTrack] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const audioRef = useRef(null); //props.spotifyApi.setAccessToken(props.token);\n\n  console.log(\"tok: \", props.accessToken);\n\n  const getNewArtist = () => {\n    if (props.accessToken === null) {\n      console.log(\"REDIRECTING\");\n      setRedirect(true);\n    }\n\n    fetch(\"https://api.spotify.com/v1/playlists/0s2RYa25RwXR5rDAMcpB3P\", {\n      headers: {\n        Authorization: \"Bearer \" + props.accessToken\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      let track = \"\";\n      let artist = \"\";\n\n      while (track === \"\") {\n        const chosenIndex = Math.floor(Math.random() * data.tracks.items.length);\n        const possibleTrack = data.tracks.items[chosenIndex].track.preview_url;\n\n        if (possibleTrack != null) {\n          track = possibleTrack;\n          artist = data.tracks.items[chosenIndex].track.artists[0].name;\n        }\n      }\n\n      const chosenIndex = Math.floor(Math.random() * data.tracks.items.length);\n      console.log(\"track: \" + JSON.stringify(data.tracks.items[chosenIndex]));\n      console.log(\"URL: \" + data.tracks.items[chosenIndex].track.preview_url);\n      track = data.tracks.items[chosenIndex].track.preview_url;\n      console.log(track);\n      setCurrArtist(artist);\n      setCurrTrack(track);\n      audioRef.current.load();\n    });\n  };\n\n  useEffect(() => {\n    getNewArtist();\n  }, []);\n  if (redirect) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Artist: \", currArtist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      id: \"music\",\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        volume: \"2\",\n        allow: \"autoplay\",\n        src: currTrack,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Play, \"PAsPgBp5L7Wqc3ymq8tyl91ZPr0=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Play.js"],"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Switch","Route","Link","Redirect","Play","props","console","log","accessToken","currArtist","setCurrArtist","currTrack","setCurrTrack","redirect","setRedirect","audioRef","getNewArtist","fetch","headers","Authorization","then","response","json","data","track","artist","chosenIndex","Math","floor","random","tracks","items","length","possibleTrack","preview_url","artists","name","JSON","stringify","current","load"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,kBANP;;;AAQA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAK,CAACG,WAA9B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMoB,QAAQ,GAAGlB,MAAM,CAAC,IAAD,CAAvB,CANsB,CAOtB;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,WAA3B;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzB,QAAIX,KAAK,CAACG,WAAN,KAAsB,IAA1B,EAAgC;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAO,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDG,IAAAA,KAAK,CAAC,6DAAD,EAAgE;AACnEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYd,KAAK,CAACG;AAAnC;AAD0D,KAAhE,CAAL,CAGGY,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,aAAOD,KAAK,KAAK,EAAjB,EAAqB;AACnB,cAAME,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,KAAgBN,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,MADhB,CAApB;AAGA,cAAMC,aAAa,GACjBV,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBL,WAAlB,EAA+BF,KAA/B,CAAqCU,WADvC;;AAEA,YAAID,aAAa,IAAI,IAArB,EAA2B;AACzBT,UAAAA,KAAK,GAAGS,aAAR;AACAR,UAAAA,MAAM,GAAGF,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBL,WAAlB,EAA+BF,KAA/B,CAAqCW,OAArC,CAA6C,CAA7C,EAAgDC,IAAzD;AACD;AACF;;AACD,YAAMV,WAAW,GAAGC,IAAI,CAACC,KAAL,CAClBD,IAAI,CAACE,MAAL,KAAgBN,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,MADhB,CAApB;AAGA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAY8B,IAAI,CAACC,SAAL,CAAef,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBL,WAAlB,CAAf,CAAxB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUgB,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBL,WAAlB,EAA+BF,KAA/B,CAAqCU,WAA3D;AACAV,MAAAA,KAAK,GAAGD,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBL,WAAlB,EAA+BF,KAA/B,CAAqCU,WAA7C;AACA5B,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACAd,MAAAA,aAAa,CAACe,MAAD,CAAb;AACAb,MAAAA,YAAY,CAACY,KAAD,CAAZ;AACAT,MAAAA,QAAQ,CAACwB,OAAT,CAAiBC,IAAjB;AACD,KA7BH;AA8BD,GAnCD;;AAqCA5C,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIH,QAAJ,EAAc,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,sBACE;AAAA,4BACE;AAAA,6BAAaJ,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,EAAE,EAAC,OAAnB;AAA2B,MAAA,GAAG,EAAEM,QAAhC;AAAA,6BACE;AACE,QAAA,MAAM,EAAC,GADT;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,GAAG,EAAEJ,SAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlED;;GAAMP,I;;KAAAA,I;AAoEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Play = (props) => {\n  console.log(\"acctok: \", props.accessToken);\n  const [currArtist, setCurrArtist] = useState(\"\");\n  const [currTrack, setCurrTrack] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n\n  const audioRef = useRef(null);\n  //props.spotifyApi.setAccessToken(props.token);\n  console.log(\"tok: \", props.accessToken);\n\n  const getNewArtist = () => {\n    if (props.accessToken === null) {\n      console.log(\"REDIRECTING\");\n      setRedirect(true);\n    }\n    fetch(\"https://api.spotify.com/v1/playlists/0s2RYa25RwXR5rDAMcpB3P\", {\n      headers: { Authorization: \"Bearer \" + props.accessToken },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let track = \"\";\n        let artist = \"\";\n        while (track === \"\") {\n          const chosenIndex = Math.floor(\n            Math.random() * data.tracks.items.length\n          );\n          const possibleTrack =\n            data.tracks.items[chosenIndex].track.preview_url;\n          if (possibleTrack != null) {\n            track = possibleTrack;\n            artist = data.tracks.items[chosenIndex].track.artists[0].name;\n          }\n        }\n        const chosenIndex = Math.floor(\n          Math.random() * data.tracks.items.length\n        );\n        console.log(\"track: \" + JSON.stringify(data.tracks.items[chosenIndex]));\n        console.log(\"URL: \" + data.tracks.items[chosenIndex].track.preview_url);\n        track = data.tracks.items[chosenIndex].track.preview_url;\n        console.log(track);\n        setCurrArtist(artist);\n        setCurrTrack(track);\n        audioRef.current.load();\n      });\n  };\n\n  useEffect(() => {\n    getNewArtist();\n  }, []);\n\n  if (redirect) return <Redirect to=\"/\" />;\n  return (\n    <div>\n      <h1>Artist: {currArtist}</h1>\n      <audio controls id=\"music\" ref={audioRef}>\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={currTrack}\n          type=\"audio/mpeg\"\n        ></source>\n        {/* Your browser does not support the audio element. */}\n      </audio>\n    </div>\n  );\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}