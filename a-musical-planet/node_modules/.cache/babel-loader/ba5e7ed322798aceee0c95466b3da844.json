{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Root reference for iframes.\n */\n\n\nvar root;\n\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn('Using browser-only version of superagent in non-browser environment');\n  root = void 0;\n} else {\n  // Web Worker\n  root = self;\n}\n\nvar Emitter = require('component-emitter');\n\nvar safeStringify = require('fast-safe-stringify');\n\nvar qs = require('qs');\n\nvar RequestBase = require('./request-base');\n\nvar isObject = require('./is-object');\n\nvar ResponseBase = require('./response-base');\n\nvar Agent = require('./agent-base');\n/**\n * Noop.\n */\n\n\nfunction noop() {}\n/**\n * Expose `request`.\n */\n\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  } // url first\n\n\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\nvar request = exports;\nexports.Request = Request;\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest && (!root.location || root.location.protocol !== 'file:' || !root.ActiveXObject)) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch (_unused) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch (_unused2) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch (_unused3) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch (_unused4) {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\n\nvar trim = ''.trim ? function (s) {\n  return s.trim();\n} : function (s) {\n  return s.replace(/(^\\s*|\\s*$)/g, '');\n};\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n\n  if (val === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach(function (v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (var subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey)) pushEncodedKeyValuePair(pairs, \"\".concat(key, \"[\").concat(subkey, \"]\"), val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(val));\n  }\n}\n/**\n * Expose serialization method.\n */\n\n\nrequest.serializeObject = serialize;\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n/**\n * Expose parser.\n */\n\n\nrequest.parseString = parseString;\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr; // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\n  this.text = this.req.method !== 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status; // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers; // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method === 'HEAD' ? null : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n} // eslint-disable-next-line new-cap\n\n\nResponseBase(Response.prototype);\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  var parse = request.parse[this.type];\n\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object) ? parse(str) : null;\n};\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\n\nResponse.prototype.toError = function () {\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n  var msg = \"cannot \".concat(method, \" \").concat(url, \" (\").concat(this.status, \")\");\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n  return err;\n};\n/**\n * Expose `Response`.\n */\n\n\nrequest.Response = Response;\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n\n  this._header = {}; // coerces header names to lowercase\n\n  this.on('end', function () {\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err_; // issue #675: return the raw response if the response parsing fails\n\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType === 'undefined' ? self.xhr.responseText : self.xhr.response; // issue #876: return the http status code if the response parsing fails\n\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n    var new_err;\n\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || res.text || 'Unsuccessful HTTP response');\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    } // #1000 don't catch errors from the callback to avoid double calling it\n\n\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n// eslint-disable-next-line new-cap\n\n\nEmitter(Request.prototype); // eslint-disable-next-line new-cap\n\nRequestBase(Request.prototype);\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n\n  if (_typeof(pass) === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  var encoder = function encoder(string) {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\n\nRequest.prototype.crossDomainError = function () {\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n  this.callback(err);\n}; // This only warns, because the request is still likely to work\n\n\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca; // This throws, because it can't send/receive data as expected\n\nRequest.prototype.write = function () {\n  throw new Error('Streaming is not supported in browser version of superagent');\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\n\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && _typeof(obj) === 'object' && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n};\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn('Warning: .end() was called twice. This is not supported in superagent');\n  }\n\n  this._endCalled = true; // store callback\n\n  this._callback = fn || noop; // querystring\n\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  var self = this; // upload timeout it's wokrs only if deadline timeout is off\n\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(function () {\n      self._timeoutError('Upload timeout of ', self._uploadTimeout, 'ETIMEDOUT');\n    }, this._uploadTimeout);\n  }\n}; // eslint-disable-next-line complexity\n\n\nRequest.prototype._end = function () {\n  if (this._aborted) return this.callback(new Error('The request has been aborted even before .end() was called'));\n  var self = this;\n  this.xhr = request.getXHR();\n  var xhr = this.xhr;\n  var data = this._formData || this._data;\n\n  this._setTimeouts(); // state change\n\n\n  xhr.onreadystatechange = function () {\n    var readyState = xhr.readyState;\n\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    } // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n\n\n    var status;\n\n    try {\n      status = xhr.status;\n    } catch (_unused5) {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  }; // progress\n\n\n  var handleProgress = function handleProgress(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', handleProgress.bind(null, 'upload'));\n      }\n    } catch (_unused6) {// Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  } // initiate request\n\n\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  } // CORS\n\n\n  if (this._withCredentials) xhr.withCredentials = true; // body\n\n  if (!this._formData && this.method !== 'GET' && this.method !== 'HEAD' && typeof data !== 'string' && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n\n    var _serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\n    if (!_serialize && isJSON(contentType)) {\n      _serialize = request.serialize['application/json'];\n    }\n\n    if (_serialize) data = _serialize(data);\n  } // set header fields\n\n\n  for (var field in this.header) {\n    if (this.header[field] === null) continue;\n    if (Object.prototype.hasOwnProperty.call(this.header, field)) xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  } // send stuff\n\n\n  this.emit('request', this); // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = function () {\n  return new Agent();\n};\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach(function (method) {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    var req = new request.Request(method, url);\n\n    this._setDefaults(req);\n\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\nAgent.prototype.del = Agent.prototype.delete;\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function (url, data, fn) {\n  var req = request('GET', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.head = function (url, data, fn) {\n  var req = request('HEAD', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.options = function (url, data, fn) {\n  var req = request('OPTIONS', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function (url, data, fn) {\n  var req = request('PATCH', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.post = function (url, data, fn) {\n  var req = request('POST', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.put = function (url, data, fn) {\n  var req = request('PUT', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};","map":{"version":3,"sources":["../src/client.js"],"names":["root","console","Emitter","require","safeStringify","qs","RequestBase","isObject","ResponseBase","Agent","module","exports","arguments","request","trim","s","pairs","Object","pushEncodedKeyValuePair","obj","val","encodeURI","Array","encodeURIComponent","str","i","len","pair","pos","decodeURIComponent","html","json","xml","urlencoded","form","JSON","parse","lines","fields","line","index","field","status","parseHeader","req","Response","isJSON","method","url","msg","err","self","res","new_err","Request","pass","options","type","encoder","btoa","serialize","file","fn","setTimeout","xhr","data","readyState","clearTimeout","handleProgress","e","contentType"],"mappings":"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","sourcesContent":["/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn(\n    'Using browser-only version of superagent in non-browser environment'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst qs = require('qs');\nconst RequestBase = require('./request-base');\nconst isObject = require('./is-object');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (\n    root.XMLHttpRequest &&\n    (!root.location ||\n      root.location.protocol !== 'file:' ||\n      !root.ActiveXObject)\n  ) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? (s) => s.trim() : (s) => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n  if (val === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach((v) => {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (const subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(val));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text =\n    (this.req.method !== 'HEAD' &&\n      (this.xhr.responseType === '' || this.xhr.responseType === 'text')) ||\n    typeof this.xhr.responseType === 'undefined'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === 'HEAD'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\n// eslint-disable-next-line new-cap\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err_;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse =\n          typeof self.xhr.responseType === 'undefined'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    let new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(\n          res.statusText || res.text || 'Unsuccessful HTTP response'\n        );\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n// eslint-disable-next-line new-cap\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = (string) => {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const err = new Error(\n    'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.'\n  );\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    'Streaming is not supported in browser version of superagent'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    obj &&\n    typeof obj === 'object' &&\n    !Array.isArray(obj) &&\n    Object.prototype.toString.call(obj) !== '[object Object]'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\n      'Warning: .end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Upload timeout of ',\n        self._uploadTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  };\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          'progress',\n          handleProgress.bind(null, 'upload')\n        );\n      }\n    } catch {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== 'GET' &&\n    this.method !== 'HEAD' &&\n    typeof data !== 'string' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (Object.prototype.hasOwnProperty.call(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach((method) => {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const req = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const req = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const req = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const req = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const req = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n"]},"metadata":{},"sourceType":"script"}