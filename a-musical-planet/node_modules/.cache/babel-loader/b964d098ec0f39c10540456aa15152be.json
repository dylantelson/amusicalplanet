{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Summary.js\";\nimport React, { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Summary = ({\n  sessionInfo\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"indexText\",\n        children: [currTrack.round, \"/5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popupText\",\n        children: [correct ? correctText : incorrectText, /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"score\",\n          children: [\"Score: \", sessionScore, \" (+\", roundScore, \" \", gameFinished, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://open.spotify.com/embed/track/${currTrack.id}`,\n          width: \"90%\",\n          height: \"380\",\n          frameborder: \"0\",\n          allowtransparency: \"true\",\n          allow: \"encrypted-media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-buttons\" + (!correct ? \" incorrect-text\" : \"\"),\n        children: currTrack.round < 5 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextTrack,\n          children: \"NEXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSummary(true),\n          children: \"SUMMARY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Summary;\nexport default GuessPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Summary.js"],"names":["React","useState","useContext","Summary","sessionInfo","currTrack","round","correct","correctText","incorrectText","sessionScore","roundScore","gameFinished","id","nextTrack","setShowSummary","GuessPopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACnC,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,mBAA2BC,SAAS,CAACC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACGC,OAAO,GAAGC,WAAH,GAAiBC,aAD3B,eAEE;AAAI,UAAA,EAAE,EAAC,OAAP;AAAA,gCACUC,YADV,SAC2BC,UAD3B,OACwCC,YADxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AACE,UAAA,GAAG,EAAG,wCAAuCP,SAAS,CAACQ,EAAG,EAD5D;AAEE,UAAA,KAAK,EAAC,KAFR;AAGE,UAAA,MAAM,EAAC,KAHT;AAIE,UAAA,WAAW,EAAC,GAJd;AAKE,UAAA,iBAAiB,EAAC,MALpB;AAME,UAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eA6BE;AAAK,QAAA,SAAS,EAAE,mBAAmB,CAACN,OAAD,GAAW,iBAAX,GAA+B,EAAlD,CAAhB;AAAA,kBAGGF,SAAS,CAACC,KAAV,GAAkB,CAAlB,gBACC;AAAQ,UAAA,OAAO,EAAEQ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAQ,UAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA5CD;;KAAMZ,O;AA8CN,eAAea,UAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst Summary = ({ sessionInfo }) => {\n  return (\n    <div className=\"popup-container\">\n      <div className={\"summary\"}>\n        <h3 className=\"indexText\">{currTrack.round}/5</h3>\n        <div className=\"popupText\">\n          {correct ? correctText : incorrectText}\n          <h3 id=\"score\">\n            Score: {sessionScore} (+{roundScore} {gameFinished})\n          </h3>\n        </div>\n        <div className=\"song-info\">\n          <iframe\n            src={`https://open.spotify.com/embed/track/${currTrack.id}`}\n            width=\"90%\"\n            height=\"380\"\n            frameborder=\"0\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n          ></iframe>\n          {/* <img\n            src={currTrack.image}\n            alt=\"Song Album\"\n            width=\"300\"\n            height=\"300\"\n          ></img>\n          <div className=\"text-div\">\n            <h3>{currTrack.name}</h3>\n            <h4>{currTrack.artist}</h4>\n            <h4>{currTrack.album}</h4>\n          </div> */}\n        </div>\n        <div className={\"popup-buttons\" + (!correct ? \" incorrect-text\" : \"\")}>\n          {/* <button>LIKE</button> */}\n          {/* <button>PLAY</button> */}\n          {currTrack.round < 5 ? (\n            <button onClick={nextTrack}>NEXT</button>\n          ) : (\n            <button onClick={() => setShowSummary(true)}>SUMMARY</button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GuessPopup;\n"]},"metadata":{},"sourceType":"module"}