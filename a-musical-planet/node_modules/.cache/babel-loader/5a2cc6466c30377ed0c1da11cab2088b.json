{"ast":null,"code":"/**\n * Root reference for iframes.\n */\nvar root;\n\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') {\n  // Web Worker\n  root = self;\n} else {\n  // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\n\nvar RequestBase = require('./request-base');\n\nvar isObject = require('./is-object');\n\nvar ResponseBase = require('./response-base');\n\nvar Agent = require('./agent-base');\n/**\n * Noop.\n */\n\n\nfunction noop() {}\n\n;\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function (method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  } // url first\n\n\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports.Request = Request;\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest && (!root.location || 'file:' != root.location.protocol || !root.ActiveXObject)) {\n    return new XMLHttpRequest();\n  } else {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch (e) {}\n\n    try {\n      return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n    } catch (e) {}\n\n    try {\n      return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n    } catch (e) {}\n\n    try {\n      return new ActiveXObject('Msxml2.XMLHTTP');\n    } catch (e) {}\n  }\n\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\n\nvar trim = ''.trim ? function (s) {\n  return s.trim();\n} : function (s) {\n  return s.replace(/(^\\s*|\\s*$)/g, '');\n};\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function (v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for (var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n/**\n * Expose serialization method.\n */\n\n\nrequest.serializeObject = serialize;\n/**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n/**\n * Expose parser.\n */\n\n\nrequest.parseString = parseString;\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify\n};\n/**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[\\/+]json($|[^-\\w])/.test(mime);\n}\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr; // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\n  this.text = this.req.method != 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status; // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders()); // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD' ? this._parseBody(this.text ? this.text : this.xhr.response) : null;\n  }\n}\n\nResponseBase(Response.prototype);\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  var parse = request.parse[this.type];\n\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length || str instanceof Object) ? parse(str) : null;\n};\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\n\nResponse.prototype.toError = function () {\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n  return err;\n};\n/**\n * Expose `Response`.\n */\n\n\nrequest.Response = Response;\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n\n  this._header = {}; // coerces header names to lowercase\n\n  this.on('end', function () {\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch (e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e; // issue #675: return the raw response if the response parsing fails\n\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response; // issue #876: return the http status code if the response parsing fails\n\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n    var new_err;\n\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch (custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    } // #1000 don't catch errors from the callback to avoid double calling it\n\n\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (1 === arguments.length) pass = '';\n\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto'\n    };\n  }\n\n  var encoder = function (string) {\n    if ('function' === typeof btoa) {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.query = function (val) {\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\n\nRequest.prototype.crossDomainError = function () {\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n  this.callback(err);\n}; // This only warns, because the request is still likely to work\n\n\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function () {\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n}; // This throws, because it can't send/receive data as expected\n\n\nRequest.prototype.pipe = Request.prototype.write = function () {\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\n\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n};\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n\n  this._endCalled = true; // store callback\n\n  this._callback = fn || noop; // querystring\n\n  this._finalizeQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function () {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts(); // state change\n\n\n  xhr.onreadystatechange = function () {\n    var readyState = xhr.readyState;\n\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (4 != readyState) {\n      return;\n    } // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n\n\n    var status;\n\n    try {\n      status = xhr.status;\n    } catch (e) {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  }; // progress\n\n\n  var handleProgress = function (direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch (e) {// Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  } // initiate request\n\n\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  } // CORS\n\n\n  if (this._withCredentials) xhr.withCredentials = true; // body\n\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  } // set header fields\n\n\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    if (this.header.hasOwnProperty(field)) xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  } // send stuff\n\n\n  this.emit('request', this); // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\nrequest.agent = function () {\n  return new Agent();\n};\n\n[\"GET\", \"POST\", \"OPTIONS\", \"PATCH\", \"PUT\", \"DELETE\"].forEach(function (method) {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    var req = new request.Request(method, url);\n\n    this._setDefaults(req);\n\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\nAgent.prototype.del = Agent.prototype['delete'];\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function (url, data, fn) {\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.head = function (url, data, fn) {\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.options = function (url, data, fn) {\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest['del'] = del;\nrequest['delete'] = del;\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function (url, data, fn) {\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.post = function (url, data, fn) {\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.put = function (url, data, fn) {\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/node_modules/superagent/lib/client.js"],"names":["root","window","self","console","warn","Emitter","require","RequestBase","isObject","ResponseBase","Agent","noop","request","exports","module","method","url","Request","end","arguments","length","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","e","Error","trim","s","replace","serialize","obj","pairs","key","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","subkey","push","encodeURIComponent","serializeObject","parseString","str","split","pair","pos","i","len","indexOf","decodeURIComponent","slice","types","html","json","xml","urlencoded","JSON","stringify","parse","parseHeader","lines","fields","index","line","field","toLowerCase","isJSON","mime","test","Response","req","xhr","text","responseType","responseText","statusText","status","_setStatusProperties","header","headers","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","body","response","_parseBody","prototype","type","_parser","Object","toError","msg","err","_query","_header","on","res","original","rawResponse","statusCode","callback","emit","new_err","_isResponseOK","custom_err","set","accept","auth","user","pass","options","btoa","encoder","string","_auth","query","attach","file","_data","_getFormData","append","name","_formData","FormData","_shouldRetry","_retry","fn","_callback","clearTimeout","_maxRetries","retries","_retries","crossDomainError","crossDomain","buffer","ca","agent","pipe","write","_isHost","toString","call","_endCalled","_finalizeQueryString","_end","data","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","hasListeners","onprogress","bind","upload","username","password","open","_withCredentials","withCredentials","contentType","_serializer","hasOwnProperty","setRequestHeader","send","_setDefaults","del","get","head","patch","post","put"],"mappings":"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","sourcesContent":["/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar ResponseBase = require('./response-base');\nvar Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify\n};\n\n/**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) { // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[\\/+]json($|[^-\\w])/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str) {\n  var parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch(custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (1 === arguments.length) pass = '';\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    };\n  }\n\n  var encoder = function(string) {\n    if ('function' === typeof btoa) {\n      return btoa(string);\n    }\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = (this.xhr = request.getXHR());\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\nrequest.agent = function() {\n  return new Agent();\n};\n\n[\"GET\", \"POST\", \"OPTIONS\", \"PATCH\", \"PUT\", \"DELETE\"].forEach(function(method) {\n  Agent.prototype[method.toLowerCase()] = function(url, fn) {\n    var req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype['delete'];\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn) {\n  var req = request('GET', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn) {\n  var req = request('HEAD', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn) {\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn) {\n  var req = request('PATCH', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn) {\n  var req = request('POST', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn) {\n  var req = request('PUT', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n"]},"metadata":{},"sourceType":"script"}