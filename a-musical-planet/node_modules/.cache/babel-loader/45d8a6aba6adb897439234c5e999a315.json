{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Play.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AudioPlayer = ({\n  audioRef,\n  trackURL\n}) => {\n  _s();\n\n  const [paused, setPaused] = useState(true);\n  const [currTime, setCurrTime] = useState(true);\n\n  const togglePause = () => {\n    if (paused === true) audioRef.current.play();else audioRef.current.pause();\n    setPaused(!paused);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      ref: audioRef,\n      onTimeUpdate: () => setCurrTime(audioRef.current.currentTime),\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        volume: \"2\",\n        allow: \"autoplay\",\n        src: trackURL,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: paused ? \"audioButton\" : \"audioButton paused\",\n        onClick: () => togglePause()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: paused ? \"0:00\" : currTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AudioPlayer, \"mXtFEO8msLKqjKKtlXixeLNP1sk=\");\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js"],"names":["React","useState","AudioPlayer","audioRef","trackURL","paused","setPaused","currTime","setCurrTime","togglePause","current","play","pause","currentTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAAA;;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIJ,MAAM,KAAK,IAAf,EAAqBF,QAAQ,CAACO,OAAT,CAAiBC,IAAjB,GAArB,KACKR,QAAQ,CAACO,OAAT,CAAiBE,KAAjB;AACLN,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,GAAG,EAAEF,QAHP;AAIE,MAAA,YAAY,EAAE,MAAMK,WAAW,CAACL,QAAQ,CAACO,OAAT,CAAiBG,WAAlB,CAJjC;AAAA,6BAME;AACE,QAAA,MAAM,EAAC,GADT;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,GAAG,EAAET,QAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAEC,MAAM,GAAG,aAAH,GAAmB,oBADtC;AAEE,QAAA,OAAO,EAAE,MAAMI,WAAW;AAF5B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIJ,MAAM,GAAG,MAAH,GAAYE;AAAtB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAwBD,CAjCD;;GAAML,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Play.css\";\n\nconst AudioPlayer = ({ audioRef, trackURL }) => {\n  const [paused, setPaused] = useState(true);\n  const [currTime, setCurrTime] = useState(true);\n  const togglePause = () => {\n    if (paused === true) audioRef.current.play();\n    else audioRef.current.pause();\n    setPaused(!paused);\n  };\n\n  return (\n    <>\n      <audio\n        id=\"audioPlayer\"\n        controls\n        ref={audioRef}\n        onTimeUpdate={() => setCurrTime(audioRef.current.currentTime)}\n      >\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={trackURL}\n          type=\"audio/mpeg\"\n        ></source>\n      </audio>\n      <div className=\"playButtonContainer\">\n        <div\n          className={paused ? \"audioButton\" : \"audioButton paused\"}\n          onClick={() => togglePause()}\n        ></div>\n        <p>{paused ? \"0:00\" : currTime}</p>\n      </div>\n    </>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}