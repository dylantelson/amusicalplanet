{"ast":null,"code":"/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\n\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\n\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\n\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\n\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\n\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\n\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' && self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\n\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\n\nexport var PASSIVE_EVENT_LISTENERS = function () {\n  var passive = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      }\n    });\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {// passive not supported\n  }\n\n  return passive;\n}();","map":{"version":3,"sources":["src/has.js"],"names":[],"mappings":"AAAA;;AAEG;AAEH,IAAM,EAAE,GACN,OAAO,SAAP,KAAqB,WAArB,IAAoC,OAAO,SAAS,CAAC,SAAjB,KAA+B,WAAnE,GACI,SAAS,CAAC,SAAV,CAAoB,WAApB,EADJ,GAEI,EAHN;AAKA;;;AAGG;;AACH,OAAO,IAAM,OAAO,GAAG,EAAE,CAAC,OAAH,CAAW,SAAX,MAA0B,CAAC,CAA3C;AAEP;;;AAGG;;AACH,OAAO,IAAM,MAAM,GAAG,EAAE,CAAC,OAAH,CAAW,QAAX,MAAyB,CAAC,CAA1B,IAA+B,EAAE,CAAC,OAAH,CAAW,OAAX,KAAuB,CAAC,CAAtE;AAEP;;;AAGG;;AACH,OAAO,IAAM,MAAM,GAAG,EAAE,CAAC,OAAH,CAAW,QAAX,MAAyB,CAAC,CAA1B,IAA+B,EAAE,CAAC,OAAH,CAAW,MAAX,KAAsB,CAAC,CAArE;AAEP;;;AAGG;;AACH,OAAO,IAAM,GAAG,GAAG,EAAE,CAAC,OAAH,CAAW,WAAX,MAA4B,CAAC,CAAzC;AAEP;;;;;;AAMG;;AACH,OAAO,IAAM,kBAAkB,GAC7B,OAAO,gBAAP,KAA4B,WAA5B,GAA0C,gBAA1C,GAA6D,CADxD;AAGP;;;;AAIG;;AACH,OAAO,IAAM,uBAAuB,GAClC,OAAO,iBAAP,KAA6B,WAA7B,IACA,OAAO,eAAP,KAA2B,WAD3B,IAEA,IAAI,YAAY,iBAHX,C,CAG8B;;AAErC;;;AAGG;;AACH,OAAO,IAAM,YAAY,GACvB,OAAO,KAAP,KAAiB,WAAjB,IAAgC,KAAK,CAAC,SAAN,CAAgB,MAD3C;AAGP;;AAEG;;AACH,OAAO,IAAM,uBAAuB,GAAI,YAAA;AACtC,MAAI,OAAO,GAAG,KAAd;;AACA,MAAI;AACF,QAAM,OAAO,GAAG,MAAM,CAAC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACnD,MAAA,GAAG,EAAE,YAAA;AACH,QAAA,OAAO,GAAG,IAAV;AACD;AAHkD,KAArC,CAAhB;AAMA,IAAA,MAAM,CAAC,gBAAP,CAAwB,GAAxB,EAA6B,IAA7B,EAAmC,OAAnC;AACA,IAAA,MAAM,CAAC,mBAAP,CAA2B,GAA3B,EAAgC,IAAhC,EAAsC,OAAtC;AACD,GATD,CASE,OAAO,KAAP,EAAc,CACd;AACD;;AACD,SAAO,OAAP;AACD,CAfsC,EAAhC","sourceRoot":"","sourcesContent":["/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map"]},"metadata":{},"sourceType":"module"}