{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js\";\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AudioPlayer = ({\n  audioRef,\n  trackURL\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        volume: \"2\",\n        allow: \"autoplay\",\n        src: trackURL,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customAudio\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => audioRef.current.play(),\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => audioRef.current.pause(),\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js"],"names":["React","useRef","AudioPlayer","audioRef","trackURL","current","play","pause"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAC9C,sBACE;AAAA,4BACE;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,QAAQ,MAAhC;AAAiC,MAAA,GAAG,EAAED,QAAtC;AAAA,6BACE;AACE,QAAA,MAAM,EAAC,GADT;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,GAAG,EAAEC,QAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,IAAjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAACE,OAAT,CAAiBE,KAAjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAgBD,CAjBD;;KAAML,W;AAmBN,eAAeA,WAAf","sourcesContent":["import React, { useRef } from \"react\";\n\nconst AudioPlayer = ({ audioRef, trackURL }) => {\n  return (\n    <>\n      <audio id=\"audioPlayer\" controls ref={audioRef}>\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={trackURL}\n          type=\"audio/mpeg\"\n        ></source>\n      </audio>\n      <div className=\"customAudio\">\n        <button onClick={() => audioRef.current.play()}>Play</button>\n        <button onClick={() => audioRef.current.pause()}>Pause</button>\n      </div>\n    </>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}