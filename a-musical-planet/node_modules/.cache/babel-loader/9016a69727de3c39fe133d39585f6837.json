{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js\";\nimport React from \"react\";\nimport \"./Play\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AudioPlayer = ({\n  audioRef,\n  trackURL,\n  useState\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        volume: \"2\",\n        allow: \"autoplay\",\n        src: trackURL,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customAudio\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: !audioRef.current || audioRef.current.paused ? \"box center pause\" : \"box center\",\n        onClick: () => audioRef.current.paused ? audioRef.current.play() : audioRef.current.pause(),\n        children: !audioRef.current || audioRef.current.paused ? \"Play\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js"],"names":["React","AudioPlayer","audioRef","trackURL","useState","current","paused","play","pause"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,QAAP;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACxD,sBACE;AAAA,4BACE;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,QAAQ,MAAhC;AAAiC,MAAA,GAAG,EAAEF,QAAtC;AAAA,6BACE;AACE,QAAA,MAAM,EAAC,GADT;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,GAAG,EAAEC,QAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,SAAS,EACP,CAACD,QAAQ,CAACG,OAAV,IAAqBH,QAAQ,CAACG,OAAT,CAAiBC,MAAtC,GACI,kBADJ,GAEI,YAJR;AAME,QAAA,OAAO,EAAE,MACPJ,QAAQ,CAACG,OAAT,CAAiBC,MAAjB,GACIJ,QAAQ,CAACG,OAAT,CAAiBE,IAAjB,EADJ,GAEIL,QAAQ,CAACG,OAAT,CAAiBG,KAAjB,EATR;AAAA,kBAYG,CAACN,QAAQ,CAACG,OAAV,IAAqBH,QAAQ,CAACG,OAAT,CAAiBC,MAAtC,GAA+C,MAA/C,GAAwD;AAZ3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AA4BD,CA7BD;;KAAML,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport \"./Play\";\n\nconst AudioPlayer = ({ audioRef, trackURL, useState }) => {\n  return (\n    <>\n      <audio id=\"audioPlayer\" controls ref={audioRef}>\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={trackURL}\n          type=\"audio/mpeg\"\n        ></source>\n      </audio>\n      <div className=\"customAudio\">\n        <button\n          className={\n            !audioRef.current || audioRef.current.paused\n              ? \"box center pause\"\n              : \"box center\"\n          }\n          onClick={() =>\n            audioRef.current.paused\n              ? audioRef.current.play()\n              : audioRef.current.pause()\n          }\n        >\n          {!audioRef.current || audioRef.current.paused ? \"Play\" : \"Pause\"}\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}