{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Select\n */\n\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\n\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\n\nvar SelectEvent = function (_super) {\n  __extends(SelectEvent, _super);\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n\n\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n\n    _this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    _this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    _this.mapBrowserEvent = mapBrowserEvent;\n    return _this;\n  }\n\n  return SelectEvent;\n}(Event);\n\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\n\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\n\nvar Select = function (_super) {\n  __extends(Select, _super);\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n\n\n  function Select(opt_options) {\n    var _this = _super.call(this) || this;\n    /***\n     * @type {SelectOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n\n\n    _this.on;\n    /***\n     * @type {SelectOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n\n    _this.once;\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n\n    _this.un;\n    var options = opt_options ? opt_options : {};\n    /**\n     * @private\n     */\n\n    _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n    /**\n     * @private\n     */\n\n    _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n\n    _this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n\n    _this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n\n    _this.features_ = options.features || new Collection();\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n\n    var layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers_1 = options.layers;\n\n        layerFilter = function (layer) {\n          return includes(layers_1, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n\n\n    _this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n\n    _this.featureLayerAssociation_ = {};\n    return _this;\n  }\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n\n\n  Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n\n\n  Select.prototype.getFeatures = function () {\n    return this.features_;\n  };\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.getHitTolerance = function () {\n    return this.hitTolerance_;\n  };\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n\n\n  Select.prototype.getLayer = function (feature) {\n    return this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  Select.prototype.setHitTolerance = function (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n\n\n  Select.prototype.setMap = function (map) {\n    var currentMap = this.getMap();\n\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n\n    _super.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.addFeature_ = function (evt) {\n    var feature = evt.element;\n\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  };\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n\n\n  Select.prototype.removeFeature_ = function (evt) {\n    var feature = evt.element;\n\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  };\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n\n\n  Select.prototype.getStyle = function () {\n    return this.style_;\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n\n\n  Select.prototype.applySelectedStyle_ = function (feature) {\n    var key = getUid(feature);\n\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n\n    feature.setStyle(this.style_);\n  };\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n\n\n  Select.prototype.restorePreviousStyle_ = function (feature) {\n    var interactions = this.getMap().getInteractions().getArray();\n\n    for (var i = interactions.length - 1; i >= 0; --i) {\n      var interaction = interactions[i];\n\n      if (interaction !== this && interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    var key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  };\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n\n\n  Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n\n\n  Select.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          selected.push(feature);\n          this.addFeatureLayerAssociation_(feature, layer);\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n\n      for (var i = features.getLength() - 1; i >= 0; --i) {\n        var feature = features.item(i);\n        var index = selected.indexOf(feature);\n\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if ((add || toggle) && !includes(features.getArray(), feature)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n          } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n\n          return !this.multi_;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n\n      for (var j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n\n      features.extend(selected);\n    }\n\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n\n    return true;\n  };\n\n  return Select;\n}(Interaction);\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\n\n\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;","map":{"version":3,"sources":["../src/interaction/Select.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {SelectOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {SelectOnSignature<import(\"../Observable.js\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {SelectOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @return {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        selected.push(feature);\n                        this.addFeatureLayerAssociation_(feature, layer);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map"]},"metadata":{},"sourceType":"module"}