{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\nimport { UserContext } from \"./App.js\";\nimport \"./Header.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  setRedirect,\n  checkToken\n}) => {\n  _s();\n\n  const userData = useContext(UserContext);\n  const [hamburgerOpen, setHamburgerOpen] = useState(false);\n  const menu = document.getElementById(\"menu\");\n\n  if (userData && userData.userName === \"\") {\n    checkToken();\n  }\n\n  const openMenu = () => {\n    console.log(\"openin!\");\n    if (hamburgerOpen) menu.style.left = \"100vw\";else menu.style.left = 0;\n    setHamburgerOpen(!hamburgerOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"A Musical Planet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hamburger\" + (hamburgerOpen ? \" open\" : \"\"),\n        onClick: openMenu,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"menu\",\n          className: !hamburgerOpen ? \" hidden\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"linkButton\",\n            to: \"/maps\",\n            activeStyle: {\n              backgroundColor: \"white\"\n            },\n            children: \"Maps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"linkButton\",\n            to: \"/about\",\n            activeStyle: {\n              backgroundColor: \"white\"\n            },\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"linkButton\",\n            to: \"/leaderboard\",\n            activeStyle: {\n              backgroundColor: \"white\"\n            },\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), userData && userData.displayName ? /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"linkButton\",\n            to: `/user/${userData.userName}`,\n            activeStyle: {\n              backgroundColor: \"white\"\n            },\n            children: userData.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"linkButton\",\n          to: \"/maps\",\n          activeStyle: {\n            backgroundColor: \"white\"\n          },\n          children: \"Maps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"linkButton\",\n          to: \"/about\",\n          activeStyle: {\n            backgroundColor: \"white\"\n          },\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"linkButton\",\n          to: \"/leaderboard\",\n          activeStyle: {\n            backgroundColor: \"white\"\n          },\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), userData && userData.displayName ? /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"userLink\",\n          to: `/user/${userData.userName}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userData.profilePicture,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Header, \"gv4gZTCxbd1S+wjLN2taeTBFi/E=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Header.js"],"names":["React","useContext","useState","BrowserRouter","Router","NavLink","UserContext","Header","setRedirect","checkToken","userData","hamburgerOpen","setHamburgerOpen","menu","document","getElementById","userName","openMenu","console","log","style","left","backgroundColor","displayName","profilePicture"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\n\nimport { UserContext } from \"./App.js\";\nimport \"./Header.scss\";\n\nconst Header = ({ setRedirect, checkToken }) => {\n  const userData = useContext(UserContext);\n  const [hamburgerOpen, setHamburgerOpen] = useState(false);\n  const menu = document.getElementById(\"menu\");\n  if (userData && userData.userName === \"\") {\n    checkToken();\n  }\n\n  const openMenu = () => {\n    console.log(\"openin!\");\n    if (hamburgerOpen) menu.style.left = \"100vw\";\n    else menu.style.left = 0;\n    setHamburgerOpen(!hamburgerOpen);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"logo\">\n          <h1>A Musical Planet</h1>\n        </div>\n        <div\n          className={\"hamburger\" + (hamburgerOpen ? \" open\" : \"\")}\n          onClick={openMenu}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n\n          <ul id=\"menu\" className={!hamburgerOpen ? \" hidden\" : \"\"}>\n            <NavLink\n              className=\"linkButton\"\n              to=\"/maps\"\n              activeStyle={{ backgroundColor: \"white\" }}\n            >\n              Maps\n            </NavLink>\n            <NavLink\n              className=\"linkButton\"\n              to=\"/about\"\n              activeStyle={{ backgroundColor: \"white\" }}\n            >\n              About\n            </NavLink>\n            <NavLink\n              className=\"linkButton\"\n              to=\"/leaderboard\"\n              activeStyle={{ backgroundColor: \"white\" }}\n            >\n              Leaderboard\n            </NavLink>\n            {userData && userData.displayName ? (\n              <NavLink\n                className=\"linkButton\"\n                to={`/user/${userData.userName}`}\n                activeStyle={{ backgroundColor: \"white\" }}\n              >\n                {userData.displayName}\n              </NavLink>\n            ) : (\n              <></>\n            )}\n          </ul>\n        </div>\n        <div className=\"navbar\">\n          <NavLink\n            className=\"linkButton\"\n            to=\"/maps\"\n            activeStyle={{ backgroundColor: \"white\" }}\n          >\n            Maps\n          </NavLink>\n          <NavLink\n            className=\"linkButton\"\n            to=\"/about\"\n            activeStyle={{ backgroundColor: \"white\" }}\n          >\n            About\n          </NavLink>\n          <NavLink\n            className=\"linkButton\"\n            to=\"/leaderboard\"\n            activeStyle={{ backgroundColor: \"white\" }}\n          >\n            Leaderboard\n          </NavLink>\n          {userData && userData.displayName ? (\n            <NavLink className=\"userLink\" to={`/user/${userData.userName}`}>\n              <img src={userData.profilePicture} alt=\"\" />\n            </NavLink>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}