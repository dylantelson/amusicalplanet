{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Auth.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useParams } from \"react-router-dom\";\nimport { Credentials } from \"./Credentials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpotifyWebApi = require(\"spotify-web-api-node\");\n\nconst Auth = props => {\n  _s();\n\n  //var code = document.URL.split(\"=\")[1];\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n  const [token, setToken] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  var spotifyApi = new SpotifyWebApi(Credentials());\n  useEffect(() => {\n    axios(\"https://accounts.spotify.com/api/token\", {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: \"Basic \" + btoa(Credentials().clientId + \":\" + Credentials().secretId)\n      },\n      data: \"grant_type=client_credentials\",\n      method: \"POST\"\n    }).then(function ({\n      data\n    }) {\n      console.log(data);\n      console.log(\"The token expires in \" + data[\"expires_in\"]);\n      console.log(\"The access token is \" + data[\"access_token\"]);\n      console.log(\"The refresh token is \" + data[\"refresh_token\"]); // Set the access token on the API object to use it in later calls\n\n      setToken(data[\"access_token\"]);\n      props.gotToken(token); // window.location.href = \"/play\";\n\n      setRedirect(true);\n    }, function (err) {\n      console.log(\"Something went wrong!\", err);\n    });\n  }, []); //   spotifyApi.authorizationCodeGrant(code).then(\n  //     function (data) {\n  //       console.log(\"The token expires in \" + data.body[\"expires_in\"]);\n  //       console.log(\"The access token is \" + data.body[\"access_token\"]);\n  //       console.log(\"The refresh token is \" + data.body[\"refresh_token\"]);\n  //       // Set the access token on the API object to use it in later calls\n  //       spotifyApi.setAccessToken(data.body[\"access_token\"]);\n  //       spotifyApi.setRefreshToken(data.body[\"refresh_token\"]);\n  //       token = spotifyApi.access_token;\n  //     },\n  //     function (err) {\n  //       console.log(\"Something went wrong!\", err);\n  //     }\n  //   );\n\n  if (!redirect) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your token is \", token]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Auth, \"3bpRTlYU8Ac3ult1rKi1TWG/DoA=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Auth.js"],"names":["axios","React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Redirect","useParams","Credentials","SpotifyWebApi","require","Auth","props","code","URLSearchParams","window","location","search","get","token","setToken","redirect","setRedirect","spotifyApi","headers","Authorization","btoa","clientId","secretId","data","method","then","console","log","gotToken","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,SANF,QAOO,kBAPP;AAQA,SAASC,WAAT,QAA4B,eAA5B;;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,sBAAD,CAA7B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB;AACA,QAAMC,IAAI,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,MAAhD,CAAb;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AAEA,MAAIwB,UAAU,GAAG,IAAId,aAAJ,CAAkBD,WAAW,EAA7B,CAAjB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9C2B,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEPC,QAAAA,aAAa,EACX,WACAC,IAAI,CAAClB,WAAW,GAAGmB,QAAd,GAAyB,GAAzB,GAA+BnB,WAAW,GAAGoB,QAA9C;AAJC,OADqC;AAO9CC,MAAAA,IAAI,EAAE,+BAPwC;AAQ9CC,MAAAA,MAAM,EAAE;AARsC,KAA3C,CAAL,CASGC,IATH,CAUE,UAAU;AAAEF,MAAAA;AAAF,KAAV,EAAoB;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BJ,IAAI,CAAC,YAAD,CAA1C;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBJ,IAAI,CAAC,cAAD,CAAzC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BJ,IAAI,CAAC,eAAD,CAA1C,EAJkB,CAKlB;;AACAT,MAAAA,QAAQ,CAACS,IAAI,CAAC,cAAD,CAAL,CAAR;AACAjB,MAAAA,KAAK,CAACsB,QAAN,CAAef,KAAf,EAPkB,CAQlB;;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KApBH,EAqBE,UAAUa,GAAV,EAAe;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCE,GAArC;AACD,KAvBH;AAyBD,GA1BQ,EA0BN,EA1BM,CAAT,CAVsB,CAsCtB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI,CAACd,QAAL,EAAe;AACb,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qCAAkBF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAOO;AACL,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CAnED;;GAAMR,I;;KAAAA,I;AAqEN,eAAeA,IAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useParams,\n} from \"react-router-dom\";\nimport { Credentials } from \"./Credentials\";\nconst SpotifyWebApi = require(\"spotify-web-api-node\");\n\nconst Auth = (props) => {\n  //var code = document.URL.split(\"=\")[1];\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n\n  const [token, setToken] = useState(\"\");\n\n  const [redirect, setRedirect] = useState(false);\n\n  var spotifyApi = new SpotifyWebApi(Credentials());\n\n  useEffect(() => {\n    axios(\"https://accounts.spotify.com/api/token\", {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization:\n          \"Basic \" +\n          btoa(Credentials().clientId + \":\" + Credentials().secretId),\n      },\n      data: \"grant_type=client_credentials\",\n      method: \"POST\",\n    }).then(\n      function ({ data }) {\n        console.log(data);\n        console.log(\"The token expires in \" + data[\"expires_in\"]);\n        console.log(\"The access token is \" + data[\"access_token\"]);\n        console.log(\"The refresh token is \" + data[\"refresh_token\"]);\n        // Set the access token on the API object to use it in later calls\n        setToken(data[\"access_token\"]);\n        props.gotToken(token);\n        // window.location.href = \"/play\";\n        setRedirect(true);\n      },\n      function (err) {\n        console.log(\"Something went wrong!\", err);\n      }\n    );\n  }, []);\n\n  //   spotifyApi.authorizationCodeGrant(code).then(\n  //     function (data) {\n  //       console.log(\"The token expires in \" + data.body[\"expires_in\"]);\n  //       console.log(\"The access token is \" + data.body[\"access_token\"]);\n  //       console.log(\"The refresh token is \" + data.body[\"refresh_token\"]);\n\n  //       // Set the access token on the API object to use it in later calls\n  //       spotifyApi.setAccessToken(data.body[\"access_token\"]);\n  //       spotifyApi.setRefreshToken(data.body[\"refresh_token\"]);\n  //       token = spotifyApi.access_token;\n  //     },\n  //     function (err) {\n  //       console.log(\"Something went wrong!\", err);\n  //     }\n  //   );\n  if (!redirect) {\n    return (\n      <div>\n        <h1>Hello!</h1>\n        <p>Your token is {token}</p>\n      </div>\n    );\n  } else {\n    return (\n      <Router>\n        <Redirect to=\"/play\" />\n      </Router>\n    );\n  }\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}