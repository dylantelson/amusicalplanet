{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Play.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AudioPlayer = ({\n  audioRef,\n  trackURL\n}) => {\n  _s();\n\n  const [paused, setPaused] = useState(true);\n\n  const togglePause = () => {\n    if (paused === true) audioRef.current.play();else audioRef.current.pause();\n    setPaused(!paused);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audioPlayer\",\n      controls: true,\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        volume: \"2\",\n        allow: \"autoplay\",\n        src: trackURL,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playButtonContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: paused ? \"box center\" : \"box center pause\",\n        onClick: () => togglePause()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AudioPlayer, \"6u6g2M0omYnLvrbnD+rioXOpsbw=\");\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/AudioPlayer.js"],"names":["React","useState","AudioPlayer","audioRef","trackURL","paused","setPaused","togglePause","current","play","pause"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAAA;;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMM,WAAW,GAAG,MAAM;AACxB,QAAIF,MAAM,KAAK,IAAf,EAAqBF,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,GAArB,KACKN,QAAQ,CAACK,OAAT,CAAiBE,KAAjB;AACLJ,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,QAAQ,MAAhC;AAAiC,MAAA,GAAG,EAAEF,QAAtC;AAAA,6BACE;AACE,QAAA,MAAM,EAAC,GADT;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,GAAG,EAAEC,QAHP;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAEC,MAAM,GAAG,YAAH,GAAkB,kBADrC;AAEE,QAAA,OAAO,EAAE,MAAME,WAAW;AAF5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAkBD,CA1BD;;GAAML,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Play.scss\";\n\nconst AudioPlayer = ({ audioRef, trackURL }) => {\n  const [paused, setPaused] = useState(true);\n  const togglePause = () => {\n    if (paused === true) audioRef.current.play();\n    else audioRef.current.pause();\n    setPaused(!paused);\n  };\n\n  return (\n    <>\n      <audio id=\"audioPlayer\" controls ref={audioRef}>\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={trackURL}\n          type=\"audio/mpeg\"\n        ></source>\n      </audio>\n      <div className=\"playButtonContainer\">\n        <div\n          className={paused ? \"box center\" : \"box center pause\"}\n          onClick={() => togglePause()}\n        ></div>\n      </div>\n    </>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}