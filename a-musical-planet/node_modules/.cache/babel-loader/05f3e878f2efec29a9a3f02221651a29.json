{"ast":null,"code":"import _toConsumableArray from\"/home/dylan/MusicGuessr/a-musical-planet/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/dylan/MusicGuessr/a-musical-planet/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/dylan/MusicGuessr/a-musical-planet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,useCallback}from\"react\";import{Redirect}from\"react-router-dom\";import MapPage from\"./MapPage\";import GuessPopup from\"./GuessPopup\";import CountryGuessInfo from\"./CountryGuessInfo.js\";import\"./Play.scss\";import haversine from\"haversine-distance\";import getCookie from\"./GetCookie\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var maxScore=5000;var Playlists=require(\"./Playlists.json\");var countries=require(\"./WorldInfo.json\");var mapProps=require(\"./MapProps.json\");var colors=require(\"./colors.json\");var Play=function Play(_ref){var accessToken=_ref.accessToken,setAccessTokenHandler=_ref.setAccessTokenHandler,setTokenFromCookie=_ref.setTokenFromCookie,currMap=_ref.currMap,sendScoreToServer=_ref.sendScoreToServer;var _useState=useState({round:0}),_useState2=_slicedToArray(_useState,2),currTrack=_useState2[0],setCurrTrack=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),redirect=_useState4[0],setRedirect=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currChosen=_useState6[0],setCurrChosen=_useState6[1];var handleNewChosen=useCallback(function(newChosen){setCurrChosen(newChosen);},[]);//first value is a bool on whether to show popup,\n//second is the score to show\nvar _useState7=useState({show:false,roundScore:0,sessionScore:0,sessionInfo:[]}),_useState8=_slicedToArray(_useState7,2),popup=_useState8[0],setPopup=_useState8[1];var audioRef=useRef(null);var newGame=function newGame(){nextTrack();setPopup({show:false,roundScore:0,sessionScore:0,sessionInfo:[]});};var nextTrack=function nextTrack(){setPopup(_objectSpread(_objectSpread({},popup),{},{show:false,roundScore:0}));setCurrChosen(\"\");console.log(\"PLAY_ACCESS_TOKEN\",accessToken);if(accessToken===null||accessToken===\"\"){return setRedirect(\"login\");}var relevantPlaylists=Playlists[currMap];if(currMap.slice(0,5)===\"world\"){if(currMap.slice(5)===\"Easy\")relevantPlaylists=Playlists.world.filter(function(country){return country.difficulty===\"Easy\";});else if(currMap.slice(5)===\"Medium\"){relevantPlaylists=Playlists.world.filter(function(country){return country.difficulty===\"Easy\"||country.difficulty===\"Medium\";});}else relevantPlaylists=Playlists.world;}var currPlaylistIndex=Math.floor(Math.random()*relevantPlaylists.length);if(relevantPlaylists[currPlaylistIndex].country===currTrack.location){nextTrack();return;// if (currPlaylistIndex > 0) currPlaylistIndex--;\n// else currPlaylistIndex++;\n}fetch(\"https://api.spotify.com/v1/playlists/\".concat(relevantPlaylists[currPlaylistIndex].playlistId),{headers:{Authorization:\"Bearer \"+accessToken}}).then(function(response){console.log(response.status);if(response.status>=400)throw response;return response.json();}).then(function(data){var track=\"\";var trackIndex=0;while(track===\"\"){trackIndex=Math.floor(Math.random()*data.tracks.items.length);track=data.tracks.items[trackIndex].track;if(track.preview_url===null){console.log(\"Track\",data.tracks.items[trackIndex].track.name,\"in country\",data.name,\"has no preview url\");track=\"\";}}console.log(track);setCurrTrack({url:track.preview_url,artist:data.tracks.items[trackIndex].track.artists[0].name,album:data.tracks.items[trackIndex].track.album.name,image:data.tracks.items[trackIndex].track.album.images[0].url,location:data.name,name:data.tracks.items[trackIndex].track.name,round:currTrack.round<5?currTrack.round+1:1,id:data.tracks.items[trackIndex].track.id});audioRef.current.load();audioRef.current.play();}).catch(function(err){console.log(\"ERROR LOADING TRACK FROM COUNTRY\",relevantPlaylists[currPlaylistIndex].country);console.log(\"err\",err);console.log(\"err status\",err.status);if(err.status===400)return window.location.replace(\"\".concat(process.env.REACT_APP_BACKEND_URI,\"/getNewToken\"));if(err.status===401){return refreshToken();}if(err.status===404)return nextTrack();//this is only really for error 401, meaning\nreturn setRedirect(\"maps\");});};var refreshToken=function refreshToken(){console.log(\"OLD ACCESS TOKEN:\",accessToken);fetch(\"\".concat(process.env.REACT_APP_BACKEND_URI,\"/refreshToken\"),{method:\"GET\",credentials:\"include\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}}).then(function(newAccessToken){return newAccessToken.json();}).then(function(data){if(data&&data.access_token){console.log(\"RETURNING NEW ACCESS TOKEN:\",data.access_token);setAccessTokenHandler(data.access_token);return nextTrack();}console.log(\"Could not refresh! Going to server's /getNewToken...\");return window.location.replace(\"\".concat(process.env.REACT_APP_BACKEND_URI,\"/getNewToken\"));});};var guessGiven=function guessGiven(){audioRef.current.pause();var currChosenCountryDOM=document.querySelector(\"#\".concat(currChosen[0].toLowerCase()+currChosen.slice(1).replaceAll(\" \",\"\")));if(currChosenCountryDOM){currChosenCountryDOM.classList.remove(\"pressed\");currChosenCountryDOM.style.fill=colors[currChosenCountryDOM.getAttribute(\"continent\")];}var currTrackCountry=countries.filter(function(country){return country.name.common===currTrack.location;})[0];if(currChosen===currTrack.location){setPopup({sessionScore:popup.sessionScore+maxScore,show:true,roundScore:maxScore,sessionInfo:[].concat(_toConsumableArray(popup.sessionInfo),[{country:currTrack.location,songId:currTrack.id,correct:true,score:5000,code:currTrackCountry.cca2.toLowerCase()}])});return;}var currTrackCountryCoords=currTrackCountry.latlng;var chosenCountryCoords=countries.filter(function(country){return country.name.common===currChosen;})[0].latlng;var scoreDeduction=Math.ceil(haversine(chosenCountryCoords,currTrackCountryCoords)/1000/2);console.log(\"Initial deduction\",scoreDeduction);switch(currMap){case\"Europe\":scoreDeduction*=4;break;case\"SouthAmerica\":scoreDeduction*=4;break;case\"NorthAmerica\":scoreDeduction*=3;break;case\"Asia\":scoreDeduction*=2;break;case\"Oceania\":scoreDeduction*=2;break;case\"Africa\":scoreDeduction*=2;break;default:break;}console.log(\"Final deduction\",scoreDeduction);var score=maxScore-scoreDeduction;if(score<0)score=0;setPopup({show:true,roundScore:score,sessionScore:popup.sessionScore+score,sessionInfo:[].concat(_toConsumableArray(popup.sessionInfo),[{country:currTrack.location,songId:currTrack.id,correct:false,score:score,code:currTrackCountry.cca2.toLowerCase()}])});// if (currTrack.location === currChosen) {\n//   //alert(`${currChosen} is correct!`);\n// } else {\n//   //alert(  `You guessed ${currChosen} but the answer was ${currTrack.location}!`);\n// }\n// getNewArtist();\n};useEffect(function(){nextTrack();},[]);if(redirect!==\"\"){return/*#__PURE__*/_jsx(Redirect,{to:\"/\".concat(redirect)});}// if (redirect === \"login\") {\n//   return <Redirect to=\"/login\" />;\n// }\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"play-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:/*#__PURE__*/_jsx(CountryGuessInfo,{currChosen:currChosen,guessGiven:guessGiven,audioRef:audioRef,trackURL:currTrack.url})}),/*#__PURE__*/_jsx(\"div\",{className:\"map-div\",children:/*#__PURE__*/_jsx(MapPage,{handleNewChosen:handleNewChosen,currMap:currMap})}),/*#__PURE__*/_jsx(GuessPopup,{show:popup.show,currMap:currMap,currTrack:currTrack,currChosen:currChosen,nextTrack:nextTrack,roundScore:popup.roundScore,sessionScore:popup.sessionScore,sessionInfo:popup.sessionInfo,sendScoreToServer:sendScoreToServer,newGame:newGame})]})});};export default Play;","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Play.js"],"names":["React","useState","useEffect","useRef","useCallback","Redirect","MapPage","GuessPopup","CountryGuessInfo","haversine","getCookie","maxScore","Playlists","require","countries","mapProps","colors","Play","accessToken","setAccessTokenHandler","setTokenFromCookie","currMap","sendScoreToServer","round","currTrack","setCurrTrack","redirect","setRedirect","currChosen","setCurrChosen","handleNewChosen","newChosen","show","roundScore","sessionScore","sessionInfo","popup","setPopup","audioRef","newGame","nextTrack","console","log","relevantPlaylists","slice","world","filter","country","difficulty","currPlaylistIndex","Math","floor","random","length","location","fetch","playlistId","headers","Authorization","then","response","status","json","data","track","trackIndex","tracks","items","preview_url","name","url","artist","artists","album","image","images","id","current","load","play","catch","err","window","replace","process","env","REACT_APP_BACKEND_URI","refreshToken","method","credentials","Accept","newAccessToken","access_token","guessGiven","pause","currChosenCountryDOM","document","querySelector","toLowerCase","replaceAll","classList","remove","style","fill","getAttribute","currTrackCountry","common","songId","correct","score","code","cca2","currTrackCountryCoords","latlng","chosenCountryCoords","scoreDeduction","ceil"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport MapPage from \"./MapPage\";\nimport GuessPopup from \"./GuessPopup\";\nimport CountryGuessInfo from \"./CountryGuessInfo.js\";\nimport \"./Play.scss\";\nimport haversine from \"haversine-distance\";\n\nimport getCookie from \"./GetCookie\";\n\nconst maxScore = 5000;\n\nconst Playlists = require(\"./Playlists.json\");\nconst countries = require(\"./WorldInfo.json\");\nconst mapProps = require(\"./MapProps.json\");\nconst colors = require(\"./colors.json\");\n\nconst Play = ({\n  accessToken,\n  setAccessTokenHandler,\n  setTokenFromCookie,\n  currMap,\n  sendScoreToServer,\n}) => {\n  const [currTrack, setCurrTrack] = useState({ round: 0 });\n  const [redirect, setRedirect] = useState(\"\");\n\n  const [currChosen, setCurrChosen] = useState(\"\");\n\n  const handleNewChosen = useCallback((newChosen) => {\n    setCurrChosen(newChosen);\n  }, []);\n\n  //first value is a bool on whether to show popup,\n  //second is the score to show\n  const [popup, setPopup] = useState({\n    show: false,\n    roundScore: 0,\n    sessionScore: 0,\n    sessionInfo: [],\n  });\n\n  const audioRef = useRef(null);\n\n  const newGame = () => {\n    nextTrack();\n    setPopup({\n      show: false,\n      roundScore: 0,\n      sessionScore: 0,\n      sessionInfo: [],\n    });\n  };\n\n  const nextTrack = () => {\n    setPopup({\n      ...popup,\n      show: false,\n      roundScore: 0,\n    });\n    setCurrChosen(\"\");\n    console.log(\"PLAY_ACCESS_TOKEN\", accessToken);\n    if (accessToken === null || accessToken === \"\") {\n      return setRedirect(\"login\");\n    }\n\n    let relevantPlaylists = Playlists[currMap];\n    if (currMap.slice(0, 5) === \"world\") {\n      if (currMap.slice(5) === \"Easy\")\n        relevantPlaylists = Playlists.world.filter(\n          (country) => country.difficulty === \"Easy\"\n        );\n      else if (currMap.slice(5) === \"Medium\") {\n        relevantPlaylists = Playlists.world.filter(\n          (country) =>\n            country.difficulty === \"Easy\" || country.difficulty === \"Medium\"\n        );\n      } else relevantPlaylists = Playlists.world;\n    }\n\n    let currPlaylistIndex = Math.floor(\n      Math.random() * relevantPlaylists.length\n    );\n\n    if (relevantPlaylists[currPlaylistIndex].country === currTrack.location) {\n      nextTrack();\n      return;\n      // if (currPlaylistIndex > 0) currPlaylistIndex--;\n      // else currPlaylistIndex++;\n    }\n    fetch(\n      `https://api.spotify.com/v1/playlists/${relevantPlaylists[currPlaylistIndex].playlistId}`,\n      {\n        headers: { Authorization: \"Bearer \" + accessToken },\n      }\n    )\n      .then((response) => {\n        console.log(response.status);\n        if (response.status >= 400) throw response;\n        return response.json();\n      })\n      .then((data) => {\n        let track = \"\";\n        let trackIndex = 0;\n        while (track === \"\") {\n          trackIndex = Math.floor(Math.random() * data.tracks.items.length);\n          track = data.tracks.items[trackIndex].track;\n          if (track.preview_url === null) {\n            console.log(\n              \"Track\",\n              data.tracks.items[trackIndex].track.name,\n              \"in country\",\n              data.name,\n              \"has no preview url\"\n            );\n            track = \"\";\n          }\n        }\n        console.log(track);\n        setCurrTrack({\n          url: track.preview_url,\n          artist: data.tracks.items[trackIndex].track.artists[0].name,\n          album: data.tracks.items[trackIndex].track.album.name,\n          image: data.tracks.items[trackIndex].track.album.images[0].url,\n          location: data.name,\n          name: data.tracks.items[trackIndex].track.name,\n          round: currTrack.round < 5 ? currTrack.round + 1 : 1,\n          id: data.tracks.items[trackIndex].track.id,\n        });\n        audioRef.current.load();\n        audioRef.current.play();\n      })\n      .catch((err) => {\n        console.log(\n          \"ERROR LOADING TRACK FROM COUNTRY\",\n          relevantPlaylists[currPlaylistIndex].country\n        );\n        console.log(\"err\", err);\n        console.log(\"err status\", err.status);\n        if (err.status === 400)\n          return window.location.replace(\n            `${process.env.REACT_APP_BACKEND_URI}/getNewToken`\n          );\n        if (err.status === 401) {\n          return refreshToken();\n        }\n        if (err.status === 404) return nextTrack();\n        //this is only really for error 401, meaning\n        return setRedirect(\"maps\");\n      });\n  };\n\n  const refreshToken = () => {\n    console.log(\"OLD ACCESS TOKEN:\", accessToken);\n    fetch(`${process.env.REACT_APP_BACKEND_URI}/refreshToken`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((newAccessToken) => newAccessToken.json())\n      .then((data) => {\n        if (data && data.access_token) {\n          console.log(\"RETURNING NEW ACCESS TOKEN:\", data.access_token);\n          setAccessTokenHandler(data.access_token);\n          return nextTrack();\n        }\n        console.log(\"Could not refresh! Going to server's /getNewToken...\");\n        return window.location.replace(\n          `${process.env.REACT_APP_BACKEND_URI}/getNewToken`\n        );\n      });\n  };\n\n  const guessGiven = () => {\n    audioRef.current.pause();\n    const currChosenCountryDOM = document.querySelector(\n      `#${\n        currChosen[0].toLowerCase() + currChosen.slice(1).replaceAll(\" \", \"\")\n      }`\n    );\n    if (currChosenCountryDOM) {\n      currChosenCountryDOM.classList.remove(\"pressed\");\n      currChosenCountryDOM.style.fill =\n        colors[currChosenCountryDOM.getAttribute(\"continent\")];\n    }\n    const currTrackCountry = countries.filter(function (country) {\n      return country.name.common === currTrack.location;\n    })[0];\n    if (currChosen === currTrack.location) {\n      setPopup({\n        sessionScore: popup.sessionScore + maxScore,\n        show: true,\n        roundScore: maxScore,\n        sessionInfo: [\n          ...popup.sessionInfo,\n          {\n            country: currTrack.location,\n            songId: currTrack.id,\n            correct: true,\n            score: 5000,\n            code: currTrackCountry.cca2.toLowerCase(),\n          },\n        ],\n      });\n      return;\n    }\n\n    const currTrackCountryCoords = currTrackCountry.latlng;\n\n    const chosenCountryCoords = countries.filter(function (country) {\n      return country.name.common === currChosen;\n    })[0].latlng;\n\n    let scoreDeduction = Math.ceil(\n      haversine(chosenCountryCoords, currTrackCountryCoords) / 1000 / 2\n    );\n\n    console.log(\"Initial deduction\", scoreDeduction);\n\n    switch (currMap) {\n      case \"Europe\":\n        scoreDeduction *= 4;\n        break;\n      case \"SouthAmerica\":\n        scoreDeduction *= 4;\n        break;\n      case \"NorthAmerica\":\n        scoreDeduction *= 3;\n        break;\n      case \"Asia\":\n        scoreDeduction *= 2;\n        break;\n      case \"Oceania\":\n        scoreDeduction *= 2;\n        break;\n      case \"Africa\":\n        scoreDeduction *= 2;\n        break;\n      default:\n        break;\n    }\n\n    console.log(\"Final deduction\", scoreDeduction);\n\n    let score = maxScore - scoreDeduction;\n    if (score < 0) score = 0;\n\n    setPopup({\n      show: true,\n      roundScore: score,\n      sessionScore: popup.sessionScore + score,\n      sessionInfo: [\n        ...popup.sessionInfo,\n        {\n          country: currTrack.location,\n          songId: currTrack.id,\n          correct: false,\n          score: score,\n          code: currTrackCountry.cca2.toLowerCase(),\n        },\n      ],\n    });\n    // if (currTrack.location === currChosen) {\n    //   //alert(`${currChosen} is correct!`);\n    // } else {\n    //   //alert(  `You guessed ${currChosen} but the answer was ${currTrack.location}!`);\n    // }\n    // getNewArtist();\n  };\n\n  useEffect(() => {\n    nextTrack();\n  }, []);\n\n  if (redirect !== \"\") {\n    return <Redirect to={`/${redirect}`} />;\n  }\n  // if (redirect === \"login\") {\n  //   return <Redirect to=\"/login\" />;\n  // }\n  return (\n    <>\n      <div className=\"play-section\">\n        <div className=\"overlay\">\n          <CountryGuessInfo\n            currChosen={currChosen}\n            guessGiven={guessGiven}\n            audioRef={audioRef}\n            trackURL={currTrack.url}\n          />\n          {/* <button onClick={refreshToken}>Refresh</button> */}\n        </div>\n        <div className=\"map-div\">\n          <MapPage handleNewChosen={handleNewChosen} currMap={currMap} />\n        </div>\n        <GuessPopup\n          show={popup.show}\n          currMap={currMap}\n          currTrack={currTrack}\n          currChosen={currChosen}\n          nextTrack={nextTrack}\n          roundScore={popup.roundScore}\n          sessionScore={popup.sessionScore}\n          sessionInfo={popup.sessionInfo}\n          sendScoreToServer={sendScoreToServer}\n          newGame={newGame}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}