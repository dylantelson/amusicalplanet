{"ast":null,"code":"/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\n\nexport function clear() {\n  cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\n\nexport function get(code) {\n  return cache[code] || cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\n\nexport function add(code, projection) {\n  cache[code] = projection;\n}","map":{"version":3,"sources":["../src/proj/projections.js"],"names":[],"mappings":"AAAA;;AAEG;;AAEH;;AAEG;AACH,IAAI,KAAK,GAAG,EAAZ;AAEA;;AAEG;;AACH,OAAM,SAAU,KAAV,GAAe;AACnB,EAAA,KAAK,GAAG,EAAR;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,GAAV,CAAc,IAAd,EAAkB;AACtB,SACE,KAAK,CAAC,IAAD,CAAL,IACA,KAAK,CAAC,IAAI,CAAC,OAAL,CAAa,wCAAb,EAAuD,SAAvD,CAAD,CADL,IAEA,IAHF;AAKD;AAED;;;;AAIG;;AACH,OAAM,SAAU,GAAV,CAAc,IAAd,EAAoB,UAApB,EAA8B;AAClC,EAAA,KAAK,CAAC,IAAD,CAAL,GAAc,UAAd;AACD","sourceRoot":"","sourcesContent":["/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map"]},"metadata":{},"sourceType":"module"}