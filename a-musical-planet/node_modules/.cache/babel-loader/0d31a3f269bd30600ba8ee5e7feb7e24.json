{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/App.js\",\n    _s = $RefreshSig$();\n\n//import \"./App.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Play from \"./Play\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport ChooseMap from \"./ChooseMap\";\nimport Leaderboard from \"./Leaderboard\";\nimport PersonalPage from \"./PersonalPage\";\nimport dotenv from \"dotenv\";\nimport getCookie from \"./GetCookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndotenv.config();\nexport const UserContext = /*#__PURE__*/React.createContext({\n  userName: \"user\",\n  displayName: \"user\",\n  stats: {\n    maxScores: {},\n    averageScores: {},\n    completedGames: 0\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    userName: \"\",\n    maxScores: {},\n    profilePicture: \"\",\n    country: \"\"\n  }); //default world as map\n\n  const [currMap, setCurrMap] = useState(\"world\");\n\n  const sendScoreToServer = newScore => {\n    console.log(\"Sending score to server\", newScore);\n    axios(`${process.env.REACT_APP_BACKEND_URI}/newScore/${userData.userName}/${currMap}/${newScore}`, {\n      method: \"POST\"\n    }).then(({\n      data\n    }) => {\n      console.log(\"Score sent to server!\");\n      console.log(data);\n      setUserData(data);\n    }).catch(err => {\n      console.log(\"ERROR SENDING SCORE TO SERVER\", err);\n    });\n  };\n\n  const setTokenFromCookie = () => {\n    const accessTokenCookie = getCookie(\"accessToken\");\n    console.log(\"myCookie\", accessTokenCookie);\n\n    if (accessTokenCookie !== \"\") {\n      console.log(\"GOT COOKIE!\", accessTokenCookie);\n      setAccessToken(accessTokenCookie);\n      return true;\n    } else {\n      console.log(\"Could not find cookie\");\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    console.log(accessToken);\n\n    if (accessToken !== \"\" && accessToken !== null) {\n      console.log(\"UseEffect setting user with accesstoken\", accessToken);\n      setUser();\n    } else {\n      console.log(\"No access token with which to set user\");\n    }\n  }, [accessToken]);\n\n  const setUser = async () => {\n    console.log(\"SETTING USER\");\n    return axios(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Accept: \"application/json\",\n        // \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken\n      },\n      method: \"GET\"\n    }).then(spotifyData => {\n      axios(`${process.env.REACT_APP_BACKEND_URI}/userData/${spotifyData.data.id}`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"GET\"\n      }).then(({\n        data\n      }) => {\n        setUserData(data);\n      });\n    }).catch(err => {\n      console.log(\"ERROR GETTING SPOTIFY USER DATA\", err);\n\n      if (err.response.status >= 400) {\n        console.log(\"ERROR 400+, REFRESHING TOKEN\");\n        window.location.replace(`${process.env.REACT_APP_BACKEND_URI}/getNewToken`);\n      }\n    });\n  };\n\n  const handleMapChosen = mapName => {\n    if (accessToken === null || accessToken === \"\") {\n      if (!setTokenFromCookie()) return setRedirect(\"login\");\n    }\n\n    console.log(\"HANDLING MAP CHOSEN\");\n    setCurrMap(mapName[0].toLowerCase() + mapName.slice(1).replaceAll(\" \", \"\")); // setRedirect(\"play\");\n  };\n\n  const checkToken = () => {\n    if (!setTokenFromCookie()) {\n      setRedirect(\"login\");\n    }\n  };\n\n  const handleLogin = () => {\n    window.location.replace(`${process.env.REACT_APP_BACKEND_URI}/login`);\n  };\n\n  const setAccessTokenHandler = newAccessToken => {\n    let accessTokenExpireDate = new Date();\n    accessTokenExpireDate.setTime(accessTokenExpireDate.getTime() + 3600 * 1000);\n    let refreshTokenExpireDate = new Date();\n    refreshTokenExpireDate.setTime(refreshTokenExpireDate.getTime() + 3600 * 1000 * 24 * 365);\n    document.cookie = \"accessToken=\" + newAccessToken + \";expires=\" + accessTokenExpireDate.toUTCString() + \";path=/\";\n    setAccessToken(newAccessToken);\n  };\n\n  const handleAuth = () => {\n    // console.log(accessToken === \"\");\n    // if (accessToken !== \"\" && accessToken !== null) {\n    //   console.log(\"have access token\", accessToken);\n    //   return setRedirect(\"maps\");\n    // }\n    // if (setTokenFromCookie()) {\n    //   console.log(\"gettin from cookie\");\n    //   return setRedirect(\"maps\");\n    // }\n    console.count(\"Handling AUTH\");\n    const URLAccessToken = new URLSearchParams(window.location.search).get(\"access_token\");\n    const URLRefreshToken = new URLSearchParams(window.location.search).get(\"refresh_token\");\n    setAccessTokenHandler(URLAccessToken); // return <Redirect to=\"/maps\" />;\n\n    setRedirect(\"maps\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [redirect === \"play\" && window.location.pathname === \"/maps\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"play\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this) : null, redirect === \"maps\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/maps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 32\n      }, this) : null, redirect === \"login\" ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: userData,\n        children: [/*#__PURE__*/_jsxDEV(Header // userData={userData}\n        , {\n          checkToken: checkToken,\n          setRedirect: setRedirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            render: () => handleAuth()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: () => setTokenFromCookie() ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 40\n            }, this) : handleLogin()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: document.cookie === \"\" || document.cookie === null ? /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/maps\",\n            children: /*#__PURE__*/_jsxDEV(ChooseMap, {\n              handleMapChosen: handleMapChosen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/leaderboard\",\n            children: /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user/:userName\",\n            children: /*#__PURE__*/_jsxDEV(PersonalPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/play\",\n            children: /*#__PURE__*/_jsxDEV(Play, {\n              accessToken: accessToken,\n              token: accessToken,\n              currMap: currMap,\n              setAccessTokenHandler: setAccessTokenHandler,\n              setTokenFromCookie: setTokenFromCookie,\n              sendScoreToServer: sendScoreToServer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/error\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Error! Check console\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Not Found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mhZd22AJj8Aq9E3CRfhJWq5fP9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/App.js"],"names":["React","useState","useEffect","useContext","BrowserRouter","Router","Switch","Route","Redirect","axios","Play","Header","Login","ChooseMap","Leaderboard","PersonalPage","dotenv","getCookie","config","UserContext","createContext","userName","displayName","stats","maxScores","averageScores","completedGames","App","accessToken","setAccessToken","redirect","setRedirect","userData","setUserData","profilePicture","country","currMap","setCurrMap","sendScoreToServer","newScore","console","log","process","env","REACT_APP_BACKEND_URI","method","then","data","catch","err","setTokenFromCookie","accessTokenCookie","setUser","headers","Accept","Authorization","spotifyData","id","response","status","window","location","replace","handleMapChosen","mapName","toLowerCase","slice","replaceAll","checkToken","handleLogin","setAccessTokenHandler","newAccessToken","accessTokenExpireDate","Date","setTime","getTime","refreshTokenExpireDate","document","cookie","toUTCString","handleAuth","count","URLAccessToken","URLSearchParams","search","get","URLRefreshToken","pathname"],"mappings":"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","sourcesContent":["//import \"./App.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Play from \"./Play\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport ChooseMap from \"./ChooseMap\";\nimport Leaderboard from \"./Leaderboard\";\nimport PersonalPage from \"./PersonalPage\";\nimport dotenv from \"dotenv\";\nimport getCookie from \"./GetCookie\";\n\ndotenv.config();\n\nexport const UserContext = React.createContext({\n  userName: \"user\",\n  displayName: \"user\",\n  stats: {\n    maxScores: {},\n    averageScores: {},\n    completedGames: 0,\n  },\n});\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    userName: \"\",\n    maxScores: {},\n    profilePicture: \"\",\n    country: \"\",\n  });\n\n  //default world as map\n  const [currMap, setCurrMap] = useState(\"world\");\n\n  const sendScoreToServer = (newScore) => {\n    console.log(\"Sending score to server\", newScore);\n    axios(\n      `${process.env.REACT_APP_BACKEND_URI}/newScore/${userData.userName}/${currMap}/${newScore}`,\n      {\n        method: \"POST\",\n      }\n    )\n      .then(({ data }) => {\n        console.log(\"Score sent to server!\");\n        console.log(data);\n        setUserData(data);\n      })\n      .catch((err) => {\n        console.log(\"ERROR SENDING SCORE TO SERVER\", err);\n      });\n  };\n\n  const setTokenFromCookie = () => {\n    const accessTokenCookie = getCookie(\"accessToken\");\n    console.log(\"myCookie\", accessTokenCookie);\n    if (accessTokenCookie !== \"\") {\n      console.log(\"GOT COOKIE!\", accessTokenCookie);\n      setAccessToken(accessTokenCookie);\n      return true;\n    } else {\n      console.log(\"Could not find cookie\");\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    console.log(accessToken);\n    if (accessToken !== \"\" && accessToken !== null) {\n      console.log(\"UseEffect setting user with accesstoken\", accessToken);\n      setUser();\n    } else {\n      console.log(\"No access token with which to set user\");\n    }\n  }, [accessToken]);\n\n  const setUser = async () => {\n    console.log(\"SETTING USER\");\n    return axios(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Accept: \"application/json\",\n        // \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n      method: \"GET\",\n    })\n      .then((spotifyData) => {\n        axios(\n          `${process.env.REACT_APP_BACKEND_URI}/userData/${spotifyData.data.id}`,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            method: \"GET\",\n          }\n        ).then(({ data }) => {\n          setUserData(data);\n        });\n      })\n      .catch((err) => {\n        console.log(\"ERROR GETTING SPOTIFY USER DATA\", err);\n        if (err.response.status >= 400) {\n          console.log(\"ERROR 400+, REFRESHING TOKEN\");\n          window.location.replace(\n            `${process.env.REACT_APP_BACKEND_URI}/getNewToken`\n          );\n        }\n      });\n  };\n\n  const handleMapChosen = (mapName) => {\n    if (accessToken === null || accessToken === \"\") {\n      if (!setTokenFromCookie()) return setRedirect(\"login\");\n    }\n    console.log(\"HANDLING MAP CHOSEN\");\n    setCurrMap(mapName[0].toLowerCase() + mapName.slice(1).replaceAll(\" \", \"\"));\n    // setRedirect(\"play\");\n  };\n\n  const checkToken = () => {\n    if (!setTokenFromCookie()) {\n      setRedirect(\"login\");\n    }\n  };\n\n  const handleLogin = () => {\n    window.location.replace(`${process.env.REACT_APP_BACKEND_URI}/login`);\n  };\n\n  const setAccessTokenHandler = (newAccessToken) => {\n    let accessTokenExpireDate = new Date();\n    accessTokenExpireDate.setTime(\n      accessTokenExpireDate.getTime() + 3600 * 1000\n    );\n\n    let refreshTokenExpireDate = new Date();\n    refreshTokenExpireDate.setTime(\n      refreshTokenExpireDate.getTime() + 3600 * 1000 * 24 * 365\n    );\n\n    document.cookie =\n      \"accessToken=\" +\n      newAccessToken +\n      \";expires=\" +\n      accessTokenExpireDate.toUTCString() +\n      \";path=/\";\n\n    setAccessToken(newAccessToken);\n  };\n\n  const handleAuth = () => {\n    // console.log(accessToken === \"\");\n    // if (accessToken !== \"\" && accessToken !== null) {\n    //   console.log(\"have access token\", accessToken);\n    //   return setRedirect(\"maps\");\n    // }\n    // if (setTokenFromCookie()) {\n    //   console.log(\"gettin from cookie\");\n    //   return setRedirect(\"maps\");\n    // }\n    console.count(\"Handling AUTH\");\n    const URLAccessToken = new URLSearchParams(window.location.search).get(\n      \"access_token\"\n    );\n    const URLRefreshToken = new URLSearchParams(window.location.search).get(\n      \"refresh_token\"\n    );\n    setAccessTokenHandler(URLAccessToken);\n    // return <Redirect to=\"/maps\" />;\n    setRedirect(\"maps\");\n  };\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {redirect === \"play\" && window.location.pathname === \"/maps\" ? (\n          <Redirect to=\"play\" replace />\n        ) : null}\n        {redirect === \"maps\" ? <Redirect to=\"/maps\" /> : null}\n        {redirect === \"login\" ? <Redirect to=\"/login\" /> : null}\n        <UserContext.Provider value={userData}>\n          <Header\n            // userData={userData}\n            checkToken={checkToken}\n            setRedirect={setRedirect}\n          />\n          <Switch>\n            <Route path=\"/auth\" render={() => handleAuth()} />\n            <Route\n              path=\"/login\"\n              render={() =>\n                setTokenFromCookie() ? <Redirect to=\"/maps\" /> : handleLogin()\n              }\n            />\n            <Route exact path=\"/\">\n              {document.cookie === \"\" || document.cookie === null ? (\n                <Login handleLogin={handleLogin} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )}\n            </Route>\n            <Route path=\"/maps\">\n              <ChooseMap handleMapChosen={handleMapChosen} />\n            </Route>\n            <Route path=\"/leaderboard\">\n              <Leaderboard />\n            </Route>\n            <Route path=\"/user/:userName\" children={<PersonalPage />} />\n            <Route path=\"/play\">\n              <Play\n                accessToken={accessToken}\n                token={accessToken}\n                currMap={currMap}\n                setAccessTokenHandler={setAccessTokenHandler}\n                setTokenFromCookie={setTokenFromCookie}\n                sendScoreToServer={sendScoreToServer}\n              />\n            </Route>\n            <Route path=\"/error\">\n              <h1>Error! Check console</h1>\n            </Route>\n            <Route path=\"*\">\n              <h1>Not Found!</h1>\n            </Route>\n          </Switch>\n        </UserContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}