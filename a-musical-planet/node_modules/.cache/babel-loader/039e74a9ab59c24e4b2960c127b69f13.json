{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\n\n\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\n\nvar CanvasLineStringBuilder = function (_super) {\n  __extends(CanvasLineStringBuilder, _super);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n\n\n  function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n  }\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n\n\n  CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, defaultLineDash, defaultLineDashOffset], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  };\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n\n\n  CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  };\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n\n\n  CanvasLineStringBuilder.prototype.finish = function () {\n    var state = this.state;\n\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return _super.prototype.finish.call(this);\n  };\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n\n\n  CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n\n    state.lastStroke = 0;\n\n    _super.prototype.applyStroke.call(this, state);\n\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringBuilder;\n}(CanvasBuilder);\n\nexport default CanvasLineStringBuilder;","map":{"version":3,"sources":["../../src/render/canvas/LineStringBuilder.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map"]},"metadata":{},"sourceType":"module"}