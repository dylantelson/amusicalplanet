{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/App.js\",\n    _s = $RefreshSig$();\n\n//import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Credentials } from \"./Credentials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpotifyWebApi = require(\"spotify-web-api-node\");\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const spotify = Credentials();\n    var spotifyApi = new SpotifyWebApi(spotify);\n    console.log(\"Spotify ClientID\", spotify.clientId);\n    const scopes = [\"user-read-private\", \"user-read-email\"];\n    const state = \"123\"; // Setting credentials can be done in the wrapper's constructor, or using the API object's setters.\n    // Create the authorization URL\n\n    var authorizeURL = spotifyApi.createAuthorizeURL(scopes, \"123\");\n    window.location.replace(authorizeURL);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","axios","Credentials","SpotifyWebApi","require","App","token","setToken","spotify","spotifyApi","console","log","clientId","scopes","state","authorizeURL","createAuthorizeURL","window","location","replace"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,sBAAD,CAA7B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,OAAO,GAAGN,WAAW,EAA3B;AACA,QAAIO,UAAU,GAAG,IAAIN,aAAJ,CAAkBK,OAAlB,CAAjB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,OAAO,CAACI,QAAxC;AACA,UAAMC,MAAM,GAAG,CAAC,mBAAD,EAAsB,iBAAtB,CAAf;AACA,UAAMC,KAAK,GAAG,KAAd,CANc,CAOd;AAEA;;AACA,QAAIC,YAAY,GAAGN,UAAU,CAACO,kBAAX,CAA8BH,MAA9B,EAAsC,KAAtC,CAAnB;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBJ,YAAxB;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBQV,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["//import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport { Credentials } from \"./Credentials\";\nconst SpotifyWebApi = require(\"spotify-web-api-node\");\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n\n  useEffect(() => {\n    const spotify = Credentials();\n    var spotifyApi = new SpotifyWebApi(spotify);\n\n    console.log(\"Spotify ClientID\", spotify.clientId);\n    const scopes = [\"user-read-private\", \"user-read-email\"];\n    const state = \"123\";\n    // Setting credentials can be done in the wrapper's constructor, or using the API object's setters.\n\n    // Create the authorization URL\n    var authorizeURL = spotifyApi.createAuthorizeURL(scopes, \"123\");\n    window.location.replace(authorizeURL);\n  }, []);\n\n  return <h1>hello</h1>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}