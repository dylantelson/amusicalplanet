{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/PersonalPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./PersonalPage.css\";\nimport MapData from \"./MapData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonalPage = () => {\n  _s();\n\n  const {\n    userName\n  } = useParams();\n  const [userData, setUserData] = useState(null);\n  const [chosenMap, setChosenMap] = useState(\"overall\");\n  useEffect(() => {\n    axios(`http://localhost:8888/userData/${userName}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"GET\"\n    }).then(({\n      data\n    }) => {\n      console.log(\"SETTING MAP TO OVERALL\");\n      setChosenMap(\"overall\");\n      setUserData(data);\n    });\n  }, [userName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userPageContainer\",\n    children: userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userHead\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.profilePicture,\n          alt: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userName\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userData.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/flags/\" + (userData.country.length === 2 ? userData.country.toLowerCase() : userData.country.substring(0, 2).toLowerCase()) + \".svg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statsHead\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Game Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"maplist\",\n            onChange: e => {\n              console.log(\"Changing value to\", e.target.value);\n              setChosenMap(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"overall\",\n              children: \"Overall\"\n            }, \"overall\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), MapData.map(map => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: map.name[0].toLowerCase() + map.name.slice(1).replace(\" \", \"\"),\n              children: map.name\n            }, map.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statsBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Completed Games\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userData.stats.completedGames[chosenMap] ? userData.stats.completedGames[chosenMap] : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Best Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), chosenMap === \"overall\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"overallMaxScore\",\n              children: userData.stats.maxScores.overall.score && userData.stats.maxScores.overall.score !== 0 ? `${userData.stats.maxScores.overall.score} \\n (${userData.stats.maxScores.overall.map[0].toUpperCase() + userData.stats.maxScores.overall.map.slice(1).replace(/[A-Z]/, letter => \" \" + letter)})` : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userData.stats.maxScores[chosenMap] ? userData.stats.maxScores[chosenMap] : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Average Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userData.stats.averageScores[chosenMap] ? userData.stats.averageScores[chosenMap] : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonalPage, \"Rh1a5KyNNkOdvK01swHrtNhm/0o=\", false, function () {\n  return [useParams];\n});\n\n_c = PersonalPage;\nexport default PersonalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalPage\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/PersonalPage.js"],"names":["React","useContext","useEffect","useState","useParams","axios","MapData","PersonalPage","userName","userData","setUserData","chosenMap","setChosenMap","headers","Accept","method","then","data","console","log","profilePicture","displayName","country","length","toLowerCase","substring","e","target","value","map","name","slice","replace","stats","completedGames","maxScores","overall","score","toUpperCase","letter","averageScores"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./PersonalPage.css\";\n\nimport MapData from \"./MapData.json\";\n\nconst PersonalPage = () => {\n  const { userName } = useParams();\n\n  const [userData, setUserData] = useState(null);\n\n  const [chosenMap, setChosenMap] = useState(\"overall\");\n\n  useEffect(() => {\n    axios(`http://localhost:8888/userData/${userName}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"GET\",\n    }).then(({ data }) => {\n      console.log(\"SETTING MAP TO OVERALL\");\n      setChosenMap(\"overall\");\n      setUserData(data);\n    });\n  }, [userName]);\n\n  return (\n    <div className=\"userPageContainer\">\n      {userData ? (\n        <div className=\"userPage\">\n          <div className=\"userHead\">\n            <img src={userData.profilePicture} alt=\"User\" />\n            <div className=\"userName\">\n              <h1>{userData.displayName}</h1>\n              <img\n                src={\n                  \"/flags/\" +\n                  (userData.country.length === 2\n                    ? userData.country.toLowerCase()\n                    : userData.country.substring(0, 2).toLowerCase()) +\n                  \".svg\"\n                }\n                alt=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"stats\">\n            <div className=\"statsHead\">\n              <h2>Game Statistics</h2>\n              <select\n                id=\"maplist\"\n                onChange={(e) => {\n                  console.log(\"Changing value to\", e.target.value);\n                  setChosenMap(e.target.value);\n                }}\n              >\n                <option key=\"overall\" value=\"overall\">\n                  Overall\n                </option>\n                {MapData.map((map) => (\n                  <option\n                    key={map.name}\n                    value={\n                      map.name[0].toLowerCase() +\n                      map.name.slice(1).replace(\" \", \"\")\n                    }\n                  >\n                    {map.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"statsBody\">\n              <div>\n                <p>Completed Games</p>\n                <h3>\n                  {userData.stats.completedGames[chosenMap]\n                    ? userData.stats.completedGames[chosenMap]\n                    : 0}\n                </h3>\n              </div>\n              <div>\n                <p>Best Game</p>\n                {chosenMap === \"overall\" ? (\n                  <h3 className=\"overallMaxScore\">\n                    {userData.stats.maxScores.overall.score &&\n                    userData.stats.maxScores.overall.score !== 0\n                      ? `${userData.stats.maxScores.overall.score} \\n (${\n                          userData.stats.maxScores.overall.map[0].toUpperCase() +\n                          userData.stats.maxScores.overall.map\n                            .slice(1)\n                            .replace(/[A-Z]/, (letter) => \" \" + letter)\n                        })`\n                      : 0}\n                  </h3>\n                ) : (\n                  <h3>\n                    {userData.stats.maxScores[chosenMap]\n                      ? userData.stats.maxScores[chosenMap]\n                      : 0}\n                  </h3>\n                )}\n              </div>\n              <div>\n                <p>Average Game</p>\n                <h3>\n                  {userData.stats.averageScores[chosenMap]\n                    ? userData.stats.averageScores[chosenMap]\n                    : 0}\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h3>LOADING...</h3>\n      )}\n    </div>\n  );\n};\n\nexport default PersonalPage;\n"]},"metadata":{},"sourceType":"module"}