{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/Play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport MapPage from \"./MapPage\";\nimport GuessPopup from \"./GuessPopup\";\nimport \"./Play.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Playlists = require(\"./Playlists.json\");\n\nconst Play = props => {\n  _s();\n\n  console.log(\"render\");\n  const [currTrack, setCurrTrack] = useState({});\n  const [redirect, setRedirect] = useState(\"\");\n  const [mapContent, setMapContent] = useState(\"\");\n  const [currChosen, setCurrChosen] = useState(\"\");\n  const [popupOpen, setPopupOpen] = useState(false);\n  const audioRef = useRef(null);\n\n  const nextTrack = () => {\n    setPopupOpen(false);\n    setCurrChosen(\"\");\n\n    if (props.accessToken === null || props.accessToken === \"\") {\n      console.log(\"REDIRECTING\");\n      setRedirect(\"login\");\n      return;\n    }\n\n    const currPlaylistIndex = Math.floor(Math.random() * Playlists.length);\n    fetch(`https://api.spotify.com/v1/playlists/${Playlists[currPlaylistIndex]}`, {\n      headers: {\n        Authorization: \"Bearer \" + props.accessToken\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      let track = \"\";\n      let trackIndex = 0;\n\n      while (track === \"\") {\n        trackIndex = Math.floor(Math.random() * data.tracks.items.length);\n        track = data.tracks.items[trackIndex].track;\n      }\n\n      setCurrTrack({\n        url: track.preview_url,\n        artist: data.tracks.items[trackIndex].track.artists[0].name,\n        album: data.tracks.items[trackIndex].track.album.name,\n        image: data.tracks.items[trackIndex].track.album.images[0].url,\n        country: data.name,\n        name: data.tracks.items[trackIndex].track.name\n      });\n      audioRef.current.load();\n      audioRef.current.play();\n    });\n  };\n\n  const guessGiven = () => {\n    setPopupOpen(true); // if (currTrack.country === currChosen) {\n    //   //alert(`${currChosen} is correct!`);\n    // } else {\n    //   //alert(  `You guessed ${currChosen} but the answer was ${currTrack.country}!`);\n    // }\n    // getNewArtist();\n  };\n\n  const goToMap = () => {\n    setRedirect(\"map\");\n  };\n\n  useEffect(() => {\n    nextTrack();\n  }, []);\n  if (redirect === \"login\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 36\n  }, this);else if (redirect === \"map\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Country: \", currTrack.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        id: \"music\",\n        ref: audioRef,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          volume: \"2\",\n          allow: \"autoplay\",\n          src: currTrack.url,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapPage, { ...props,\n      setCurrChosen: setCurrChosen,\n      currChosen: currChosen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Curr Guess: \", currChosen]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guessGiven,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), popupOpen && /*#__PURE__*/_jsxDEV(GuessPopup, {\n      currTrack: currTrack,\n      currChosen: currChosen,\n      nextTrack: nextTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Play, \"E1giwZW2ISe6ea6aBuGW8pUdSRE=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/Play.js"],"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Switch","Route","Link","Redirect","MapPage","GuessPopup","Playlists","require","Play","props","console","log","currTrack","setCurrTrack","redirect","setRedirect","mapContent","setMapContent","currChosen","setCurrChosen","popupOpen","setPopupOpen","audioRef","nextTrack","accessToken","currPlaylistIndex","Math","floor","random","length","fetch","headers","Authorization","then","response","json","data","track","trackIndex","tracks","items","url","preview_url","artist","artists","name","album","image","images","country","current","load","play","guessGiven","goToMap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nimport MapPage from \"./MapPage\";\nimport GuessPopup from \"./GuessPopup\";\nimport \"./Play.css\";\n\nconst Playlists = require(\"./Playlists.json\");\nconst Play = (props) => {\n  console.log(\"render\");\n  const [currTrack, setCurrTrack] = useState({});\n  const [redirect, setRedirect] = useState(\"\");\n\n  const [mapContent, setMapContent] = useState(\"\");\n  const [currChosen, setCurrChosen] = useState(\"\");\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  const audioRef = useRef(null);\n\n  const nextTrack = () => {\n    setPopupOpen(false);\n    setCurrChosen(\"\");\n    if (props.accessToken === null || props.accessToken === \"\") {\n      console.log(\"REDIRECTING\");\n      setRedirect(\"login\");\n      return;\n    }\n\n    const currPlaylistIndex = Math.floor(Math.random() * Playlists.length);\n    fetch(\n      `https://api.spotify.com/v1/playlists/${Playlists[currPlaylistIndex]}`,\n      {\n        headers: { Authorization: \"Bearer \" + props.accessToken },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let track = \"\";\n        let trackIndex = 0;\n        while (track === \"\") {\n          trackIndex = Math.floor(Math.random() * data.tracks.items.length);\n          track = data.tracks.items[trackIndex].track;\n        }\n        setCurrTrack({\n          url: track.preview_url,\n          artist: data.tracks.items[trackIndex].track.artists[0].name,\n          album: data.tracks.items[trackIndex].track.album.name,\n          image: data.tracks.items[trackIndex].track.album.images[0].url,\n          country: data.name,\n          name: data.tracks.items[trackIndex].track.name,\n        });\n        audioRef.current.load();\n        audioRef.current.play();\n      });\n  };\n\n  const guessGiven = () => {\n    setPopupOpen(true);\n    // if (currTrack.country === currChosen) {\n    //   //alert(`${currChosen} is correct!`);\n    // } else {\n    //   //alert(  `You guessed ${currChosen} but the answer was ${currTrack.country}!`);\n    // }\n    // getNewArtist();\n  };\n\n  const goToMap = () => {\n    setRedirect(\"map\");\n  };\n\n  useEffect(() => {\n    nextTrack();\n  }, []);\n\n  if (redirect === \"login\") return <Redirect to=\"/login\" />;\n  else if (redirect === \"map\") return <Redirect to=\"/map\" />;\n  return (\n    <>\n      <h2>Country: {currTrack.country}</h2>\n      {/* <div>\n        <span>\n          <h2>Artist: {currTrack.artist}</h2>\n          <h2>Country: {currTrack.country}</h2>\n        </span>\n        <span>\n          <img src={currTrack.image} alt=\"Album image\" width=\"300\" height=\"300\"></img>\n        </span>\n      </div> */}\n      <div>\n        <audio controls id=\"music\" ref={audioRef}>\n          <source\n            volume=\"2\"\n            allow=\"autoplay\"\n            src={currTrack.url}\n            type=\"audio/mpeg\"\n          ></source>\n          {/* Your browser does not support the audio element. */}\n        </audio>\n      </div>\n      <MapPage\n        {...props}\n        setCurrChosen={setCurrChosen}\n        currChosen={currChosen}\n      />\n      <div>\n        <h2>Curr Guess: {currChosen}</h2>\n      </div>\n      <div>\n        <button onClick={guessGiven}>Submit Guess</button>\n      </div>\n      {popupOpen && (\n        <GuessPopup\n          currTrack={currTrack}\n          currChosen={currChosen}\n          nextTrack={nextTrack}\n        />\n      )}\n      {/* <div>\n        <button onClick={getNewArtist}>New Song</button>\n      </div>\n      <div>\n        <button onClick={goToMap}>Map</button>\n      </div> */}\n    </>\n  );\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}