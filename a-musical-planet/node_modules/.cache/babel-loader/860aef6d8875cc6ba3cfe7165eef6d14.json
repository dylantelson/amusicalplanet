{"ast":null,"code":"var _jsxFileName = \"/home/dylan/MusicGuessr/a-musical-planet/src/GuessPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\"; // import { UserContext } from \"./App.js\";\n\nimport Summary from \"./Summary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GuessPopup = ({\n  show,\n  currChosen,\n  currTrack,\n  nextTrack,\n  roundScore,\n  sessionScore,\n  sessionInfo,\n  newGame,\n  sendScoreToServer,\n  currMap\n}) => {\n  _s();\n\n  // const userData = useContext(UserContext);\n  // console.log(\"USER DATA\");\n  // console.log(userData);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [showSummary, setShowSummary] = useState(false);\n\n  const correctText = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Good job!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You correctly guessed \", currChosen]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  const incorrectText = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Whoops!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The answer was \", currTrack.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  let correct = false;\n  if (currChosen === currTrack.location) correct = true;\n\n  if (!gameFinished && currTrack.round === 5) {\n    setGameFinished(true);\n    sendScoreToServer(sessionScore);\n  }\n\n  const summaryExit = () => {\n    setShowSummary(false);\n    newGame();\n  };\n\n  useEffect(() => {\n    console.log(\"iFRAMING\");\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Summary, {\n      show: showSummary,\n      sessionScore: sessionScore,\n      sessionInfo: sessionInfo,\n      summaryExit: summaryExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\" + (!show || showSummary ? \" hidden\" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess-popup\" + (!correct ? \" incorrect-background\" : \"\"),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"indexText\",\n          children: [currTrack.round, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popupText\",\n          children: [correct ? correctText : incorrectText, /*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"score\",\n            children: [\"Score: \", sessionScore, \" (+\", roundScore, \" \", gameFinished, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: `https://open.spotify.com/embed/track/${currTrack.id}`,\n            width: \"80%\",\n            height: \"300\",\n            frameBorder: \"0\",\n            allowtransparency: \"true\",\n            allow: \"encrypted-media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-buttons\" + (!correct ? \" incorrect-text\" : \"\"),\n          children: currTrack.round < 5 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextTrack,\n            children: \"NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSummary(true),\n            children: \"SUMMARY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GuessPopup, \"LwgRUZYCcRaJ40VWdHRQf8Wscgg=\");\n\n_c = GuessPopup;\nexport default GuessPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessPopup\");","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/GuessPopup.js"],"names":["React","useState","useContext","useEffect","Summary","GuessPopup","show","currChosen","currTrack","nextTrack","roundScore","sessionScore","sessionInfo","newGame","sendScoreToServer","currMap","gameFinished","setGameFinished","showSummary","setShowSummary","correctText","incorrectText","location","correct","round","summaryExit","console","log","id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n// import { UserContext } from \"./App.js\";\n\nimport Summary from \"./Summary\";\n\nconst GuessPopup = ({\n  show,\n  currChosen,\n  currTrack,\n  nextTrack,\n  roundScore,\n  sessionScore,\n  sessionInfo,\n  newGame,\n  sendScoreToServer,\n  currMap,\n}) => {\n  // const userData = useContext(UserContext);\n  // console.log(\"USER DATA\");\n  // console.log(userData);\n\n  const [gameFinished, setGameFinished] = useState(false);\n  const [showSummary, setShowSummary] = useState(false);\n  const correctText = (\n    <div>\n      <h1>Good job!</h1>\n      <h3>You correctly guessed {currChosen}</h3>\n    </div>\n  );\n  const incorrectText = (\n    <div>\n      <h1>Whoops!</h1>\n      <h3>The answer was {currTrack.location}</h3>\n    </div>\n  );\n\n  let correct = false;\n  if (currChosen === currTrack.location) correct = true;\n\n  if (!gameFinished && currTrack.round === 5) {\n    setGameFinished(true);\n    sendScoreToServer(sessionScore);\n  }\n\n  const summaryExit = () => {\n    setShowSummary(false);\n    newGame();\n  };\n\n  useEffect(() => {\n    console.log(\"iFRAMING\");\n  });\n\n  return (\n    <>\n      <Summary\n        show={showSummary}\n        sessionScore={sessionScore}\n        sessionInfo={sessionInfo}\n        summaryExit={summaryExit}\n      />\n      <div\n        className={\"popup-container\" + (!show || showSummary ? \" hidden\" : \"\")}\n      >\n        <div\n          className={\"guess-popup\" + (!correct ? \" incorrect-background\" : \"\")}\n        >\n          <h3 className=\"indexText\">{currTrack.round}/5</h3>\n          <div className=\"popupText\">\n            {correct ? correctText : incorrectText}\n            <h3 id=\"score\">\n              Score: {sessionScore} (+{roundScore} {gameFinished})\n            </h3>\n          </div>\n          <div className=\"song-info\">\n            <iframe\n              src={`https://open.spotify.com/embed/track/${currTrack.id}`}\n              width=\"80%\"\n              height=\"300\"\n              frameBorder=\"0\"\n              allowtransparency=\"true\"\n              allow=\"encrypted-media\"\n            ></iframe>\n            {/* <img\n            src={currTrack.image}\n            alt=\"Song Album\"\n            width=\"300\"\n            height=\"300\"\n          ></img>\n          <div className=\"text-div\">\n            <h3>{currTrack.name}</h3>\n            <h4>{currTrack.artist}</h4>\n            <h4>{currTrack.album}</h4>\n          </div> */}\n          </div>\n          <div\n            className={\"popup-buttons\" + (!correct ? \" incorrect-text\" : \"\")}\n          >\n            {/* <button>LIKE</button> */}\n            {/* <button>PLAY</button> */}\n            {currTrack.round < 5 ? (\n              <button onClick={nextTrack}>NEXT</button>\n            ) : (\n              <button onClick={() => setShowSummary(true)}>SUMMARY</button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GuessPopup;\n"]},"metadata":{},"sourceType":"module"}