{"ast":null,"code":"import _slicedToArray from\"/home/dylan/MusicGuessr/a-musical-planet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";// import { UserContext } from \"./App.js\";\nimport Summary from\"./Summary\";import CustomiFrame from\"./CustomiFrame\";import getMixedColor from\"./GetMixedColor\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GuessPopup=function GuessPopup(_ref){var show=_ref.show,currChosen=_ref.currChosen,currTrack=_ref.currTrack,nextTrack=_ref.nextTrack,roundScore=_ref.roundScore,sessionScore=_ref.sessionScore,sessionInfo=_ref.sessionInfo,newGame=_ref.newGame,sendScoreToServer=_ref.sendScoreToServer,currMap=_ref.currMap;// const userData = useContext(UserContext);\n// console.log(\"USER DATA\");\n// console.log(userData);\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),gameFinished=_useState2[0],setGameFinished=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showSummary=_useState4[0],setShowSummary=_useState4[1];var correctText=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Good job!\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"You correctly guessed \",currChosen]})]});var incorrectText=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Whoops!\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"The answer was \",currTrack.location]})]});var correct=false;if(currChosen===currTrack.location)correct=true;if(show&&!gameFinished&&currTrack.round===5){setGameFinished(true);console.log(\"SENDING SCORE TO SERVER:\",sessionScore);sendScoreToServer(sessionScore);}var summaryExit=function summaryExit(){setShowSummary(false);setGameFinished(false);newGame();};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Summary,{show:showSummary,sessionScore:sessionScore,sessionInfo:sessionInfo,summaryExit:summaryExit}),/*#__PURE__*/_jsx(\"div\",{className:\"popup-container\"+(!show||showSummary?\" hidden\":\"\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"guess-popup\",style:{background:\"#\".concat(getMixedColor(roundScore/5000))},children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"indexText\",children:[currTrack.round,\"/5\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"popupText\",children:[correct?correctText:incorrectText,/*#__PURE__*/_jsxs(\"h3\",{id:\"score\",children:[\"Score: \",sessionScore,\" (+\",roundScore,\")\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"song-info\",children:/*#__PURE__*/_jsx(CustomiFrame,{src:\"https://open.spotify.com/embed/track/\".concat(currTrack.id),width:\"80%\",height:\"300\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"popup-buttons\"+(!correct?\" incorrect-text\":\"\"),children:currTrack.round<5?/*#__PURE__*/_jsx(\"button\",{style:{color:\"#\".concat(getMixedColor(roundScore/5000))},onClick:nextTrack,children:\"NEXT\"}):/*#__PURE__*/_jsx(\"button\",{style:{color:\"#\".concat(getMixedColor(roundScore/5000))},onClick:function onClick(){return setShowSummary(true);},children:\"SUMMARY\"})})]})})]});};export default GuessPopup;","map":{"version":3,"sources":["/home/dylan/MusicGuessr/a-musical-planet/src/GuessPopup.js"],"names":["React","useState","useContext","useEffect","Summary","CustomiFrame","getMixedColor","GuessPopup","show","currChosen","currTrack","nextTrack","roundScore","sessionScore","sessionInfo","newGame","sendScoreToServer","currMap","gameFinished","setGameFinished","showSummary","setShowSummary","correctText","incorrectText","location","correct","round","console","log","summaryExit","background","id","color"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA;AAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAWb,IAVJC,CAAAA,IAUI,MAVJA,IAUI,CATJC,UASI,MATJA,UASI,CARJC,SAQI,MARJA,SAQI,CAPJC,SAOI,MAPJA,SAOI,CANJC,UAMI,MANJA,UAMI,CALJC,YAKI,MALJA,YAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,iBAEI,MAFJA,iBAEI,CADJC,OACI,MADJA,OACI,CACJ;AACA;AACA;AAEA,cAAwChB,QAAQ,CAAC,KAAD,CAAhD,wCAAOiB,YAAP,eAAqBC,eAArB,eACA,eAAsClB,QAAQ,CAAC,KAAD,CAA9C,yCAAOmB,WAAP,eAAoBC,cAApB,eACA,GAAMC,CAAAA,WAAW,cACf,oCACE,iCADF,cAEE,+CAA2Bb,UAA3B,GAFF,GADF,CAMA,GAAMc,CAAAA,aAAa,cACjB,oCACE,+BADF,cAEE,wCAAoBb,SAAS,CAACc,QAA9B,GAFF,GADF,CAOA,GAAIC,CAAAA,OAAO,CAAG,KAAd,CACA,GAAIhB,UAAU,GAAKC,SAAS,CAACc,QAA7B,CAAuCC,OAAO,CAAG,IAAV,CAEvC,GAAIjB,IAAI,EAAI,CAACU,YAAT,EAAyBR,SAAS,CAACgB,KAAV,GAAoB,CAAjD,CAAoD,CAClDP,eAAe,CAAC,IAAD,CAAf,CACAQ,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCf,YAAxC,EACAG,iBAAiB,CAACH,YAAD,CAAjB,CACD,CAED,GAAMgB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBR,cAAc,CAAC,KAAD,CAAd,CACAF,eAAe,CAAC,KAAD,CAAf,CACAJ,OAAO,GACR,CAJD,CAMA,mBACE,wCACE,KAAC,OAAD,EACE,IAAI,CAAEK,WADR,CAEE,YAAY,CAAEP,YAFhB,CAGE,WAAW,CAAEC,WAHf,CAIE,WAAW,CAAEe,WAJf,EADF,cAOE,YACE,SAAS,CAAE,mBAAqB,CAACrB,IAAD,EAASY,WAAT,CAAuB,SAAvB,CAAmC,EAAxD,CADb,uBAGE,aACE,SAAS,CAAE,aADb,CAEE,KAAK,CAAE,CAAEU,UAAU,YAAMxB,aAAa,CAACM,UAAU,CAAG,IAAd,CAAnB,CAAZ,CAFT,wBAIE,YAAI,SAAS,CAAC,WAAd,WAA2BF,SAAS,CAACgB,KAArC,QAJF,cAKE,aAAK,SAAS,CAAC,WAAf,WACGD,OAAO,CAAGH,WAAH,CAAiBC,aAD3B,cAEE,YAAI,EAAE,CAAC,OAAP,qBACUV,YADV,OAC2BD,UAD3B,OAFF,GALF,cAWE,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,YAAD,EACE,GAAG,gDAA0CF,SAAS,CAACqB,EAApD,CADL,CAEE,KAAK,CAAC,KAFR,CAGE,MAAM,CAAC,KAHT,EADF,EAXF,cA6BE,YACE,SAAS,CAAE,iBAAmB,CAACN,OAAD,CAAW,iBAAX,CAA+B,EAAlD,CADb,UAKGf,SAAS,CAACgB,KAAV,CAAkB,CAAlB,cACC,eACE,KAAK,CAAE,CAAEM,KAAK,YAAM1B,aAAa,CAACM,UAAU,CAAG,IAAd,CAAnB,CAAP,CADT,CAEE,OAAO,CAAED,SAFX,kBADD,cAQC,eACE,KAAK,CAAE,CAAEqB,KAAK,YAAM1B,aAAa,CAACM,UAAU,CAAG,IAAd,CAAnB,CAAP,CADT,CAEE,OAAO,CAAE,yBAAMS,CAAAA,cAAc,CAAC,IAAD,CAApB,EAFX,qBAbJ,EA7BF,GAHF,EAPF,GADF,CAiED,CA/GD,CAiHA,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n// import { UserContext } from \"./App.js\";\n\nimport Summary from \"./Summary\";\nimport CustomiFrame from \"./CustomiFrame\";\nimport getMixedColor from \"./GetMixedColor\";\n\nconst GuessPopup = ({\n  show,\n  currChosen,\n  currTrack,\n  nextTrack,\n  roundScore,\n  sessionScore,\n  sessionInfo,\n  newGame,\n  sendScoreToServer,\n  currMap,\n}) => {\n  // const userData = useContext(UserContext);\n  // console.log(\"USER DATA\");\n  // console.log(userData);\n\n  const [gameFinished, setGameFinished] = useState(false);\n  const [showSummary, setShowSummary] = useState(false);\n  const correctText = (\n    <div>\n      <h1>Good job!</h1>\n      <h3>You correctly guessed {currChosen}</h3>\n    </div>\n  );\n  const incorrectText = (\n    <div>\n      <h1>Whoops!</h1>\n      <h3>The answer was {currTrack.location}</h3>\n    </div>\n  );\n\n  let correct = false;\n  if (currChosen === currTrack.location) correct = true;\n\n  if (show && !gameFinished && currTrack.round === 5) {\n    setGameFinished(true);\n    console.log(\"SENDING SCORE TO SERVER:\", sessionScore);\n    sendScoreToServer(sessionScore);\n  }\n\n  const summaryExit = () => {\n    setShowSummary(false);\n    setGameFinished(false);\n    newGame();\n  };\n\n  return (\n    <>\n      <Summary\n        show={showSummary}\n        sessionScore={sessionScore}\n        sessionInfo={sessionInfo}\n        summaryExit={summaryExit}\n      />\n      <div\n        className={\"popup-container\" + (!show || showSummary ? \" hidden\" : \"\")}\n      >\n        <div\n          className={\"guess-popup\"}\n          style={{ background: `#${getMixedColor(roundScore / 5000)}` }}\n        >\n          <h3 className=\"indexText\">{currTrack.round}/5</h3>\n          <div className=\"popupText\">\n            {correct ? correctText : incorrectText}\n            <h3 id=\"score\">\n              Score: {sessionScore} (+{roundScore})\n            </h3>\n          </div>\n          <div className=\"song-info\">\n            <CustomiFrame\n              src={`https://open.spotify.com/embed/track/${currTrack.id}`}\n              width=\"80%\"\n              height=\"300\"\n            />\n            {/* <img\n            src={currTrack.image}\n            alt=\"Song Album\"\n            width=\"300\"\n            height=\"300\"\n          ></img>\n          <div className=\"text-div\">\n            <h3>{currTrack.name}</h3>\n            <h4>{currTrack.artist}</h4>\n            <h4>{currTrack.album}</h4>\n          </div> */}\n          </div>\n          <div\n            className={\"popup-buttons\" + (!correct ? \" incorrect-text\" : \"\")}\n          >\n            {/* <button>LIKE</button> */}\n            {/* <button>PLAY</button> */}\n            {currTrack.round < 5 ? (\n              <button\n                style={{ color: `#${getMixedColor(roundScore / 5000)}` }}\n                onClick={nextTrack}\n              >\n                NEXT\n              </button>\n            ) : (\n              <button\n                style={{ color: `#${getMixedColor(roundScore / 5000)}` }}\n                onClick={() => setShowSummary(true)}\n              >\n                SUMMARY\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GuessPopup;\n"]},"metadata":{},"sourceType":"module"}