{"version":3,"sources":["MapChart.js","MapPage.js","CustomiFrame.js","GetMixedColor.js","SummaryItem.js","Summary.js","GuessPopup.js","AudioPlayer.js","CountryGuessInfo.js","Play.js","Header.js","Login.js","MapItem.js","ChooseMap.js","LeaderboardUser.js","Leaderboard.js","PersonalPage.js","App.js","GetCookie.js","reportWebVitals.js","index.js"],"names":["worldCountries","require","worldGeoSVG","colors","borderWidth","LightenDarkenColor","col","amt","usePound","slice","num","parseInt","r","b","g","toString","camelize","word","toLowerCase","replaceAll","countriesToShow","currSelectedCountry","MapChart","handleNewChosen","mapProps","currMap","useState","loading","setLoading","useEffect","mapDifficulty","countryDifficulty","Playlists","world","playlist","difficulty","push","country","console","log","waitForMapLoad","setInterval","document","querySelectorAll","length","clearInterval","countries","setAttribute","indexOf","id","getAttribute","selectedStyle","color","fill","stroke","strokeWidth","outline","projection","geoMercator","scale","center","rotate","class","style","width","height","translateExtent","minZoom","maxZoom","zoom","coordinates","geography","geographies","map","geo","properties","NAME","continent","CONTINENT","onClick","event","target","classList","contains","element","prevCountry","querySelector","props","remove","add","setPressedStyle","onMouseEnter","onMouseLeave","visibility","rsmKey","name","common","latlng","textAnchor","pointerEvents","area","fontSize","memo","MapPage","className","CustomiFrame","React","src","frameBorder","allowtransparency","allow","getMixedColor","ratio","color1","color2","hex","x","Math","ceil","substring","SummaryItem","countryInfo","index","show","background","score","code","alt","songId","Summary","sessionInfo","sessionScore","summaryExit","roundSelected","setRoundSelected","GuessPopup","currChosen","currTrack","nextTrack","roundScore","newGame","sendScoreToServer","gameFinished","setGameFinished","showSummary","setShowSummary","correctText","incorrectText","location","correct","round","AudioPlayer","audioRef","trackURL","paused","setPaused","currTime","setCurrTime","formatTime","timeInSeconds","minutes","floor","seconds","controls","ref","onTimeUpdate","current","currentTime","onPlay","onPause","volume","type","play","pause","value","min","max","duration","onChange","e","newTime","CountryGuessInfo","guessGiven","countryCode","filter","cca2","maxScore","Play","accessToken","setAccessTokenHandler","setTokenFromCookie","setCurrTrack","redirect","setRedirect","setCurrChosen","useCallback","newChosen","popup","setPopup","useRef","relevantPlaylists","currPlaylistIndex","random","fetch","playlistId","headers","Authorization","then","response","status","json","data","track","trackIndex","tracks","items","preview_url","url","artist","artists","album","image","images","load","catch","err","window","replace","process","refreshToken","method","credentials","Accept","newAccessToken","access_token","to","currChosenCountryDOM","currTrackCountry","currTrackCountryCoords","chosenCountryCoords","scoreDeduction","haversine","Header","checkToken","userData","useContext","UserContext","hamburgerOpen","setHamburgerOpen","menu","getElementById","pathname","userName","openMenu","left","activeStyle","backgroundColor","displayName","profilePicture","Login","handleLogin","MapItem","handleMapChosen","formattedMapName","stats","maxScores","description","ChooseMap","chosenMap","setChosenMap","chosenMapCategory","setChosenMapCategory","chosenMapData","MapData","find","category","LeaderboardUser","rank","Leaderboard","leaderboardStats","setLeaderboardStats","currPage","setCurrPage","axios","leaderboardData","PersonalPage","useParams","setUserData","completedGames","overall","toUpperCase","letter","averageScores","dotenv","config","createContext","App","setAccessToken","setCurrMap","accessTokenCookie","cname","ca","decodeURIComponent","cookie","split","i","c","charAt","getCookie","setUser","a","spotifyData","accessTokenExpireDate","Date","setTime","getTime","refreshTokenExpireDate","toUTCString","Provider","path","render","count","URLAccessToken","URLSearchParams","search","get","handleAuth","exact","mapName","children","token","newScore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c70af764.chunk.js","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\";\nimport { geoMercator } from \"d3-geo\";\n\nimport Playlists from \"./Playlists\";\nimport \"./Map.css\";\n\nconst worldCountries = require(\"./WorldInfo.json\");\n// const europeCountries = require(\"./EuropeInfo.json\");\n\nconst worldGeoSVG = require(\"./WorldSVG50m.json\");\nconst colors = require(\"./colors.json\");\n// const europeGeoSVG = require(\"./EuropeInfo.json\");\n\n// const locationInfo = {\n//   world: worldCountries,\n//   // europe: europeCountries,\n// };\n\n// const locationGeoSVG = {\n//   world: worldGeoSVG,\n// };\n\nconst borderWidth = 0.2;\n\nfunction LightenDarkenColor(col, amt) {\n  var usePound = false;\n\n  if (!col) return \"#000\";\n\n  if (col[0] === \"#\") {\n    col = col.slice(1);\n    usePound = true;\n  }\n\n  var num = parseInt(col, 16);\n\n  var r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;\n  else if (r < 0) r = 0;\n\n  var b = ((num >> 8) & 0x00ff) + amt;\n\n  if (b > 255) b = 255;\n  else if (b < 0) b = 0;\n\n  var g = (num & 0x0000ff) + amt;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nconst camelize = (word) => {\n  return word[0].toLowerCase() + word.slice(1).replaceAll(\" \", \"\");\n};\n\nconst checkDifficulty = (mapDifficulty, countryDifficulty) => {\n  if (mapDifficulty === \"Easy\") return countryDifficulty === \"Easy\";\n  if (mapDifficulty === \"Medium\")\n    return countryDifficulty === \"Easy\" || countryDifficulty === \"Medium\";\n  //for some reason this necessary, otherwise it returns true even if mapDifficulty is Easy\n  if (mapDifficulty === \"Hard\") return true;\n  return false;\n};\n\nlet countriesToShow = [];\nlet currSelectedCountry = null;\nconst MapChart = ({ handleNewChosen, mapProps, currMap }) => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    countriesToShow = [];\n    let currSelectedCountry = null;\n    if (currMap.slice(0, 5) === \"world\") {\n      for (const playlist of Playlists.world) {\n        if (checkDifficulty(currMap.slice(5), playlist.difficulty))\n          countriesToShow.push(camelize(playlist.country));\n      }\n    } else {\n      for (const playlist of Playlists[currMap]) {\n        countriesToShow.push(camelize(playlist.country));\n      }\n    }\n    console.log(countriesToShow);\n    var waitForMapLoad = setInterval(function () {\n      if (document.querySelectorAll(\".rsm-geography\").length !== 0) {\n        clearInterval(waitForMapLoad);\n        setLoading(false);\n      }\n    }, 500);\n  }, [currMap]);\n\n  if (!loading) {\n    const countries = document.querySelectorAll(\".rsm-geography\");\n    for (const country of countries) {\n      country.setAttribute(\n        \"style\",\n        countriesToShow.indexOf(country.id) >= 0\n          ? `fill: ${\n              colors[country.getAttribute(\"continent\")]\n            }; pointer-events: all; stroke: #000000; stroke-width: ${borderWidth}; outline: none; visibility: visible;`\n          : `fill: #ccc; pointer-events: none; stroke: #000000; stroke-width: ${borderWidth}; outline: none; visibility: visible`\n      );\n    }\n  }\n\n  // style={{\n  //                       currSelectedCountry &&\n  //                       currSelectedCountry.element.id ===\n  //                         geo.properties.NAME.replaceAll(\" \", \"\")\n  //                         ? selectedStyle(colors[geo.properties.CONTINENT])\n  //                         : countriesToShow.indexOf(geo.properties.NAME) >= 0\n  //                         ? {\n  //                             fill: colors[geo.properties.CONTINENT],\n  //                             pointerEvents: \"all\",\n  //                             stroke: \"#000000\",\n  //                             strokeWidth: borderWidth,\n  //                             outline: \"none\",\n  //                           }\n  //                         : {\n  //                             fill: \"#ccc\",\n  //                             pointerEvents: \"none\",\n  //                             stroke: \"#000000\",\n  //                             strokeWidth: borderWidth,\n  //                             outline: \"none\",\n  //                           },\n  //                     hover:\n  //                       currSelectedCountry &&\n  //                       currSelectedCountry.element.id ===\n  //                         geo.properties.NAME.replaceAll(\" \", \"\")\n  //                         ? selectedStyle(colors[geo.properties.CONTINENT])\n  //                         : hoveredStyle(colors[geo.properties.CONTINENT]),\n  //                   }}\n\n  const setPressedStyle = (country, event) => {\n    if (currSelectedCountry) {\n      //if user clicked on already selected country, return\n      if (event.target.classList.contains(\"pressed\")) return;\n      if (!(currSelectedCountry.element.id === event.target.id)) {\n        const prevCountry = document.querySelector(\n          `#${currSelectedCountry.element.id}`\n        );\n        prevCountry.style.fill = colors[currSelectedCountry.props.CONTINENT];\n        prevCountry.classList.remove(\"pressed\");\n      }\n    }\n    currSelectedCountry = { element: event.target, props: country };\n    event.target.style.fill = selectedStyle(colors[country.CONTINENT]).fill;\n    event.target.classList.add(\"pressed\");\n  };\n\n  // const clearPressedStyle = () => {\n  //   if (currSelectedCountry) {\n  //     document.querySelector(`#${currSelectedCountry.element.id}`).style.fill =\n  //       colors[currSelectedCountry.props.CONTINENT];\n  //     currSelectedCountry = null;\n  //   }\n  // };\n\n  // const renderStyle = (country) => {\n  //   if (!country.area || country.area < 1500) return [{ fontSize: \"0px\" }, 0];\n  //   let adjustedFont =\n  //     country.area > 500000\n  //       ? country.area / 800000 + 4.5\n  //       : country.area / 800000 + 2.3;\n  //   if (adjustedFont <= country.name.common.length) adjustedFont /= 1.3;\n\n  //   if (country.name.common === \"Russia\" && currMap === \"europe\")\n  //     adjustedFont /= 2.5;\n  //   //const rightOffset = adjustedFont;\n  //   return [\n  //     {\n  //       fontSize: `${adjustedFont}px`,\n  //       // stroke: \"#FFF\",\n  //       // stroke: colors[country.CONTINENT],\n  //       // strokeWidth: `${adjustedFont / 50}px`,\n  //     },\n  //     adjustedFont - 1,\n  //   ];\n  // };\n\n  const renderStyle = (area) => {\n    if (area > 5000000) return { fontSize: \"20px\" };\n    if (area > 2500000) return { fontSize: \"12px\" };\n    if (area > 1000000) return { fontSize: \"9px\" };\n    if (area > 500000) return { fontSize: \"7px\" };\n    if (area > 300000) return { fontSize: \"5px\" };\n    if (area > 200000) return { fontSize: \"4px\" };\n    if (area > 100000) return { fontSize: \"3px\" };\n    if (area > 70000) return { fontSize: \"2.5px\" };\n    return { fontSize: \"2px\" };\n  };\n\n  const hoveredStyle = (color) => {\n    return {\n      fill: LightenDarkenColor(color, 15),\n      stroke: \"#000\",\n      strokeWidth: borderWidth,\n      outline: \"none\",\n    };\n  };\n  const selectedStyle = (color) => {\n    return {\n      fill: LightenDarkenColor(color, 40),\n      stroke: \"#000\",\n      strokeWidth: borderWidth,\n      outline: \"none\",\n    };\n  };\n\n  // const [currPos, setCurrPos] = useState({\n  //   zoom: mapProps.minZoom,\n  //   coordinates: mapProps.coordinates,\n  // });\n  const projection = geoMercator()\n    .scale(mapProps.scale)\n    .center(mapProps.center)\n    .rotate(mapProps.rotate);\n\n  //Uncomment this to make map reset after guess\n  // useEffect(() => {\n  //   setCurrPos({\n  //     zoom: 1,\n  //     coordinates: [0, 40],\n  //   });\n  // }, [currLocation]);\n\n  return (\n    <>\n      {loading ? <h1 class=\"mapLoading\">Loading...</h1> : <></>}\n      <ComposableMap\n        data-tip=\"\"\n        projection={projection}\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          outline: \"none\",\n        }}\n      >\n        <ZoomableGroup\n          translateExtent={mapProps.translateExtent}\n          minZoom={mapProps.minZoom}\n          maxZoom={mapProps.maxZoom}\n          zoom={mapProps.minZoom}\n          center={mapProps.coordinates}\n        >\n          <Geographies geography={worldGeoSVG}>\n            {({ geographies }) =>\n              geographies.map((geo) => {\n                return (\n                  <Geography\n                    id={camelize(geo.properties.NAME)}\n                    continent={geo.properties.CONTINENT}\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onClick={(event) => {\n                      setPressedStyle(geo.properties, event);\n                      handleNewChosen(geo.properties.NAME);\n                    }}\n                    onMouseEnter={(event) => {\n                      if (\n                        !currSelectedCountry ||\n                        currSelectedCountry.element.id !== event.target.id ||\n                        !currSelectedCountry.element.classList.contains(\n                          \"pressed\"\n                        )\n                      ) {\n                        event.target.style.fill = hoveredStyle(\n                          colors[event.target.getAttribute(\"continent\")]\n                        ).fill;\n                      }\n                    }}\n                    onMouseLeave={(event) => {\n                      if (\n                        currSelectedCountry &&\n                        currSelectedCountry.element.id === event.target.id &&\n                        currSelectedCountry.element.classList.contains(\n                          \"pressed\"\n                        )\n                      ) {\n                        event.target.style.fill = selectedStyle(\n                          colors[event.target.getAttribute(\"continent\")]\n                        ).fill;\n                      } else {\n                        event.target.style.fill =\n                          colors[event.target.getAttribute(\"continent\")];\n                      }\n                    }}\n                    visibility={\"hidden\"}\n                  />\n                );\n              })\n            }\n          </Geographies>\n          {worldCountries.map((country) => {\n            if (\n              loading ||\n              countriesToShow.indexOf(camelize(country.name.common)) < 0\n            )\n              return null;\n            // const currStyle = renderStyle(country);\n            return (\n              <Marker\n                key={country.name.common}\n                coordinates={\n                  country.name.common === \"Russia\" && currMap === \"europe\"\n                    ? [country.latlng[1] - 57, country.latlng[0] - 6]\n                    : [country.latlng[1], country.latlng[0]]\n                }\n                fill=\"#000\"\n              >\n                <text\n                  textAnchor=\"middle\"\n                  pointerEvents=\"none\"\n                  style={renderStyle(country.area)}\n                >\n                  {country.name.common}\n                </text>\n                {/* {currPos.zoom * 2 + currStyle[1] > 9 ? (\n                  currStyle[1] > country.name.common.length ? (\n                    <text\n                      textAnchor=\"middle\"\n                      pointerEvents=\"none\"\n                      style={currStyle[0]}\n                    >\n                      {country.name.common}\n                    </text>\n                  ) : (\n                    country.name.common.split(\" \").map((word, index) => {\n                      return (\n                        <text\n                          key={word + index}\n                          textRendering=\"optimizeSpeed\"\n                          textAnchor=\"middle\"\n                          pointerEvents=\"none\"\n                          y={(currStyle[1] / 1.3 + 1.3) * index}\n                          style={currStyle[0]}\n                        >\n                          {word}\n                        </text>\n                      );\n                    })\n                  )\n                ) : (\n                  <></>\n                )} */}\n              </Marker>\n            );\n          })}\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { memo } from \"react\";\nimport MapChart from \"./MapChart\";\nimport \"./Map.css\";\n\nconst mapProps = require(\"./MapProps.json\");\n\nconst MapPage = ({ handleNewChosen, currMap }) => {\n  return (\n    <>\n      <div className=\"map\">\n        <MapChart\n          handleNewChosen={handleNewChosen}\n          currMap={currMap}\n          mapProps={\n            currMap.slice(0, 5) === \"world\" ? mapProps.world : mapProps[currMap]\n          }\n        />\n      </div>\n    </>\n  );\n};\n\nexport default MapPage;\n","import React from \"react\";\n\nconst CustomiFrame = React.memo(({ src, width, height }) => {\n  console.log(\"RENDERING IFRAME\");\n  return (\n    <iframe\n      src={src}\n      width={width}\n      height={height}\n      frameBorder=\"0\"\n      allowtransparency=\"true\"\n      allow=\"encrypted-media\"\n    ></iframe>\n  );\n});\n\nexport default CustomiFrame;\n","export default function getMixedColor(ratio) {\n  let color1 = \"1DB954\";\n  let color2 = \"EE6C4D\";\n  if (ratio > 0.6 && ratio < 1) ratio -= 0.3;\n  var hex = function (x) {\n    x = x.toString(16);\n    return x.length == 1 ? \"0\" + x : x;\n  };\n\n  var r = Math.ceil(\n    parseInt(color1.substring(0, 2), 16) * ratio +\n      parseInt(color2.substring(0, 2), 16) * (1 - ratio)\n  );\n  var g = Math.ceil(\n    parseInt(color1.substring(2, 4), 16) * ratio +\n      parseInt(color2.substring(2, 4), 16) * (1 - ratio)\n  );\n  var b = Math.ceil(\n    parseInt(color1.substring(4, 6), 16) * ratio +\n      parseInt(color2.substring(4, 6), 16) * (1 - ratio)\n  );\n\n  return hex(r) + hex(g) + hex(b);\n}\n","import React from \"react\";\n\nimport CustomiFrame from \"./CustomiFrame\";\n\nimport getMixedColor from \"./GetMixedColor\";\n\nconst SummaryItem = ({ countryInfo, index, show }) => {\n  // console.log(countryInfo.correct);\n  return (\n    <div\n      className={\"summaryItem\" + (!show ? \" hidden\" : \"\")}\n      style={{ background: `#${getMixedColor(countryInfo.score / 5000)}` }}\n    >\n      <div className=\"summaryItemHeader\">\n        <div className=\"summaryItemHeaderName\">\n          <h3>\n            Round {index + 1}: {countryInfo.country}\n          </h3>\n          <img\n            src={\"/flags/\" + countryInfo.code + \".svg\"}\n            alt={countryInfo.country + \" flag\"}\n          />\n        </div>\n        <h3>(+{countryInfo.score})</h3>\n      </div>\n      <CustomiFrame\n        src={`https://open.spotify.com/embed/track/${countryInfo.songId}`}\n        width=\"90%\"\n        height=\"80\"\n      />\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","import React, { useState } from \"react\";\nimport SummaryItem from \"./SummaryItem\";\n\nconst Summary = ({ sessionInfo, sessionScore, summaryExit, show }) => {\n  const [roundSelected, setRoundSelected] = useState(0);\n  return (\n    <div className={\"popup-container\" + (!show ? \" hidden\" : \"\")}>\n      <div className={\"summary\"}>\n        <h1>SUMMARY</h1>\n        <h3 id=\"score\">Score: {sessionScore}</h3>\n        <div className=\"summary-songs-desktop\">\n          {sessionInfo.map((countryInfo, index) => {\n            return (\n              <SummaryItem\n                countryInfo={countryInfo}\n                index={index}\n                show={true}\n              />\n            );\n          })}\n        </div>\n        <div className=\"summary-songs-mobile\">\n          {sessionInfo.length > 0 ? (\n            <>\n              <img\n                src=\"/next.png\"\n                id=\"leftArrow\"\n                className={roundSelected <= 0 ? \"disabledArrow\" : \"\"}\n                onClick={() =>\n                  roundSelected > 0 ? setRoundSelected(roundSelected - 1) : null\n                }\n              />\n              {sessionInfo.map((countryInfo, index) => {\n                return (\n                  <SummaryItem\n                    countryInfo={countryInfo}\n                    index={index}\n                    show={index === roundSelected}\n                  />\n                );\n              })}\n              <img\n                src=\"/next.png\"\n                id=\"rightArrow\"\n                className={roundSelected >= 4 ? \"disabledArrow\" : \"\"}\n                onClick={() =>\n                  roundSelected < 4 ? setRoundSelected(roundSelected + 1) : null\n                }\n              />\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n        <div className=\"popup-buttons\">\n          <button id=\"summary-button\" onClick={summaryExit}>\n            NEW GAME\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import React, { useState, useContext, useEffect } from \"react\";\n// import { UserContext } from \"./App.js\";\n\nimport Summary from \"./Summary\";\nimport CustomiFrame from \"./CustomiFrame\";\nimport getMixedColor from \"./GetMixedColor\";\n\nconst GuessPopup = ({\n  show,\n  currChosen,\n  currTrack,\n  nextTrack,\n  roundScore,\n  sessionScore,\n  sessionInfo,\n  newGame,\n  sendScoreToServer,\n  currMap,\n}) => {\n  // const userData = useContext(UserContext);\n  // console.log(\"USER DATA\");\n  // console.log(userData);\n\n  const [gameFinished, setGameFinished] = useState(false);\n  const [showSummary, setShowSummary] = useState(false);\n  const correctText = (\n    <div>\n      <h1>Good job!</h1>\n      <h3>You correctly guessed {currChosen}</h3>\n    </div>\n  );\n  const incorrectText = (\n    <div>\n      <h1>Whoops!</h1>\n      <h3>The answer was {currTrack.location}</h3>\n    </div>\n  );\n\n  let correct = false;\n  if (currChosen === currTrack.location) correct = true;\n\n  if (show && !gameFinished && currTrack.round === 5) {\n    setGameFinished(true);\n    console.log(\"SENDING SCORE TO SERVER:\", sessionScore);\n    sendScoreToServer(sessionScore);\n  }\n\n  const summaryExit = () => {\n    setShowSummary(false);\n    setGameFinished(false);\n    newGame();\n  };\n\n  return (\n    <>\n      <Summary\n        show={showSummary}\n        sessionScore={sessionScore}\n        sessionInfo={sessionInfo}\n        summaryExit={summaryExit}\n      />\n      <div\n        className={\"popup-container\" + (!show || showSummary ? \" hidden\" : \"\")}\n      >\n        <div\n          className={\"guess-popup\"}\n          style={{ background: `#${getMixedColor(roundScore / 5000)}` }}\n        >\n          <h3 className=\"indexText\">{currTrack.round}/5</h3>\n          <div className=\"popupText\">\n            {correct ? correctText : incorrectText}\n            <h3 id=\"score\">\n              Score: {sessionScore} (+{roundScore})\n            </h3>\n          </div>\n          <div className=\"song-info\">\n            <CustomiFrame\n              src={`https://open.spotify.com/embed/track/${currTrack.id}`}\n              width=\"80%\"\n              height=\"300\"\n            />\n            {/* <img\n            src={currTrack.image}\n            alt=\"Song Album\"\n            width=\"300\"\n            height=\"300\"\n          ></img>\n          <div className=\"text-div\">\n            <h3>{currTrack.name}</h3>\n            <h4>{currTrack.artist}</h4>\n            <h4>{currTrack.album}</h4>\n          </div> */}\n          </div>\n          <div\n            className={\"popup-buttons\" + (!correct ? \" incorrect-text\" : \"\")}\n          >\n            {/* <button>LIKE</button> */}\n            {/* <button>PLAY</button> */}\n            {currTrack.round < 5 ? (\n              <button\n                style={{ color: `#${getMixedColor(roundScore / 5000)}` }}\n                onClick={nextTrack}\n              >\n                NEXT\n              </button>\n            ) : (\n              <button\n                style={{ color: `#${getMixedColor(roundScore / 5000)}` }}\n                onClick={() => setShowSummary(true)}\n              >\n                SUMMARY\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default GuessPopup;\n","import React, { useState } from \"react\";\n// import \"./Play.scss\";\n\nconst AudioPlayer = ({ audioRef, trackURL }) => {\n  const [paused, setPaused] = useState(true);\n  const [currTime, setCurrTime] = useState(0);\n  const togglePause = () => {\n    if (paused === true) audioRef.current.play();\n    else audioRef.current.pause();\n    setPaused(!paused);\n  };\n  const formatTime = (timeInSeconds) => {\n    // const totalSeconds = Math.floor(time);\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    if (seconds < 10) return `${minutes}:0${seconds}`;\n    return `${minutes}:${seconds}`;\n  };\n\n  const onSeek = (newTime) => {\n    audioRef.current.currentTime = newTime;\n    setCurrTime(newTime);\n  };\n\n  //uncomment this if you want audio to autoplay\n  //after the user finishes seeking a paused track\n  //note: will also need to uncomment the onMouseEnd\n  //that is found in the Seeker HTML range input\n  // const onSeekEnd = () => {\n  //   if (paused) {\n  //     audioRef.current.play();\n  //     setPaused(false);\n  //   }\n  // };\n\n  return (\n    <>\n      <audio\n        id=\"audioPlayer\"\n        controls\n        ref={audioRef}\n        onTimeUpdate={() => setCurrTime(audioRef.current.currentTime)}\n        onPlay={() => (paused ? setPaused(false) : null)}\n        onPause={() => (!paused ? setPaused(true) : null)}\n      >\n        <source\n          volume=\"2\"\n          allow=\"autoplay\"\n          src={trackURL}\n          type=\"audio/mpeg\"\n        ></source>\n      </audio>\n      <div className=\"playButtonContainer\">\n        <div\n          className={paused ? \"audioButton\" : \"audioButton paused\"}\n          onClick={() => togglePause()}\n        ></div>\n        <div className=\"timeControls\">\n          <p>{formatTime(currTime)}</p>\n          <input\n            type=\"range\"\n            value={currTime}\n            min=\"0\"\n            max={\n              audioRef.current && audioRef.current.duration\n                ? audioRef.current.duration\n                : 30\n            }\n            className=\"audioSeeker\"\n            onChange={(e) => onSeek(e.target.value)}\n            // onMouseUp={onSeekEnd}\n          />\n          <p>\n            {!audioRef.current || !audioRef.current.duration\n              ? \"0:30\"\n              : formatTime(audioRef.current.duration)}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AudioPlayer;\n","import React from \"react\";\n// import \"./Play.scss\";\nimport AudioPlayer from \"./AudioPlayer\";\n\nconst countries = require(\"./WorldInfo.json\");\n\nconst CountryGuessInfo = ({ currChosen, guessGiven, audioRef, trackURL }) => {\n  if (currChosen === \"\")\n    return <AudioPlayer audioRef={audioRef} trackURL={trackURL} />;\n  const countryCode = countries.filter(function (country) {\n    return country.name.common === currChosen;\n  })[0].cca2;\n  return (\n    <>\n      <AudioPlayer audioRef={audioRef} trackURL={trackURL} />\n      <div className=\"countryGuessInfo\">\n        <h2>{currChosen}</h2>\n        <img\n          src={\"/flags/\" + countryCode.toLowerCase() + \".svg\"}\n          alt={currChosen + \" flag\"}\n        />\n        <button onClick={guessGiven}>Guess</button>\n      </div>\n    </>\n  );\n};\n\nexport default CountryGuessInfo;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport MapPage from \"./MapPage\";\nimport GuessPopup from \"./GuessPopup\";\nimport CountryGuessInfo from \"./CountryGuessInfo.js\";\nimport \"./Play.scss\";\nimport haversine from \"haversine-distance\";\n\nimport getCookie from \"./GetCookie\";\n\nconst maxScore = 5000;\n\nconst Playlists = require(\"./Playlists.json\");\nconst countries = require(\"./WorldInfo.json\");\nconst mapProps = require(\"./MapProps.json\");\nconst colors = require(\"./colors.json\");\n\nconst Play = ({\n  accessToken,\n  setAccessTokenHandler,\n  setTokenFromCookie,\n  currMap,\n  sendScoreToServer,\n}) => {\n  const [currTrack, setCurrTrack] = useState({ round: 0 });\n  const [redirect, setRedirect] = useState(\"\");\n\n  const [currChosen, setCurrChosen] = useState(\"\");\n\n  const handleNewChosen = useCallback((newChosen) => {\n    setCurrChosen(newChosen);\n  }, []);\n\n  //first value is a bool on whether to show popup,\n  //second is the score to show\n  const [popup, setPopup] = useState({\n    show: false,\n    roundScore: 0,\n    sessionScore: 0,\n    sessionInfo: [],\n  });\n\n  const audioRef = useRef(null);\n\n  const newGame = () => {\n    nextTrack();\n    setPopup({\n      show: false,\n      roundScore: 0,\n      sessionScore: 0,\n      sessionInfo: [],\n    });\n  };\n\n  const nextTrack = () => {\n    setPopup({\n      ...popup,\n      show: false,\n      roundScore: 0,\n    });\n    setCurrChosen(\"\");\n    console.log(\"PLAY_ACCESS_TOKEN\", accessToken);\n    if (accessToken === null || accessToken === \"\") {\n      return setRedirect(\"login\");\n    }\n\n    let relevantPlaylists = Playlists[currMap];\n    if (currMap.slice(0, 5) === \"world\") {\n      if (currMap.slice(5) === \"Easy\")\n        relevantPlaylists = Playlists.world.filter(\n          (country) => country.difficulty === \"Easy\"\n        );\n      else if (currMap.slice(5) === \"Medium\") {\n        relevantPlaylists = Playlists.world.filter(\n          (country) =>\n            country.difficulty === \"Easy\" || country.difficulty === \"Medium\"\n        );\n      } else relevantPlaylists = Playlists.world;\n    }\n\n    let currPlaylistIndex = Math.floor(\n      Math.random() * relevantPlaylists.length\n    );\n\n    if (relevantPlaylists[currPlaylistIndex].country === currTrack.location) {\n      nextTrack();\n      return;\n      // if (currPlaylistIndex > 0) currPlaylistIndex--;\n      // else currPlaylistIndex++;\n    }\n    fetch(\n      `https://api.spotify.com/v1/playlists/${relevantPlaylists[currPlaylistIndex].playlistId}`,\n      {\n        headers: { Authorization: \"Bearer \" + accessToken },\n      }\n    )\n      .then((response) => {\n        console.log(response.status);\n        if (response.status >= 400) throw response;\n        return response.json();\n      })\n      .then((data) => {\n        let track = \"\";\n        let trackIndex = 0;\n        while (track === \"\") {\n          trackIndex = Math.floor(Math.random() * data.tracks.items.length);\n          track = data.tracks.items[trackIndex].track;\n          if (track.preview_url === null) {\n            console.log(\n              \"Track\",\n              data.tracks.items[trackIndex].track.name,\n              \"in country\",\n              data.name,\n              \"has no preview url\"\n            );\n            track = \"\";\n          }\n        }\n        console.log(track);\n        setCurrTrack({\n          url: track.preview_url,\n          artist: data.tracks.items[trackIndex].track.artists[0].name,\n          album: data.tracks.items[trackIndex].track.album.name,\n          image: data.tracks.items[trackIndex].track.album.images[0].url,\n          location: data.name,\n          name: data.tracks.items[trackIndex].track.name,\n          round: currTrack.round < 5 ? currTrack.round + 1 : 1,\n          id: data.tracks.items[trackIndex].track.id,\n        });\n        audioRef.current.load();\n        audioRef.current.play();\n      })\n      .catch((err) => {\n        console.log(\n          \"ERROR LOADING TRACK FROM COUNTRY\",\n          relevantPlaylists[currPlaylistIndex].country\n        );\n        console.log(\"err\", err);\n        console.log(\"err status\", err.status);\n        if (err.status === 400)\n          return window.location.replace(\n            `${process.env.REACT_APP_BACKEND_URI}/getNewToken`\n          );\n        if (err.status === 401) {\n          return refreshToken();\n        }\n        if (err.status === 404) return nextTrack();\n        //this is only really for error 401, meaning\n        return setRedirect(\"maps\");\n      });\n  };\n\n  const refreshToken = () => {\n    console.log(\"OLD ACCESS TOKEN:\", accessToken);\n    fetch(`${process.env.REACT_APP_BACKEND_URI}/refreshToken`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((newAccessToken) => newAccessToken.json())\n      .then((data) => {\n        if (data && data.access_token) {\n          console.log(\"RETURNING NEW ACCESS TOKEN:\", data.access_token);\n          setAccessTokenHandler(data.access_token);\n          return nextTrack();\n        }\n        console.log(\"Could not refresh! Going to server's /getNewToken...\");\n        return window.location.replace(\n          `${process.env.REACT_APP_BACKEND_URI}/getNewToken`\n        );\n      });\n  };\n\n  const guessGiven = () => {\n    audioRef.current.pause();\n    const currChosenCountryDOM = document.querySelector(\n      `#${\n        currChosen[0].toLowerCase() + currChosen.slice(1).replaceAll(\" \", \"\")\n      }`\n    );\n    if (currChosenCountryDOM) {\n      currChosenCountryDOM.classList.remove(\"pressed\");\n      currChosenCountryDOM.style.fill =\n        colors[currChosenCountryDOM.getAttribute(\"continent\")];\n    }\n    const currTrackCountry = countries.filter(function (country) {\n      return country.name.common === currTrack.location;\n    })[0];\n    if (currChosen === currTrack.location) {\n      setPopup({\n        sessionScore: popup.sessionScore + maxScore,\n        show: true,\n        roundScore: maxScore,\n        sessionInfo: [\n          ...popup.sessionInfo,\n          {\n            country: currTrack.location,\n            songId: currTrack.id,\n            correct: true,\n            score: 5000,\n            code: currTrackCountry.cca2.toLowerCase(),\n          },\n        ],\n      });\n      return;\n    }\n\n    const currTrackCountryCoords = currTrackCountry.latlng;\n\n    const chosenCountryCoords = countries.filter(function (country) {\n      return country.name.common === currChosen;\n    })[0].latlng;\n\n    let scoreDeduction = Math.ceil(\n      haversine(chosenCountryCoords, currTrackCountryCoords) / 1000 / 2\n    );\n\n    console.log(\"Initial deduction\", scoreDeduction);\n\n    switch (currMap) {\n      case \"Europe\":\n        scoreDeduction *= 4;\n        break;\n      case \"SouthAmerica\":\n        scoreDeduction *= 4;\n        break;\n      case \"NorthAmerica\":\n        scoreDeduction *= 3;\n        break;\n      case \"Asia\":\n        scoreDeduction *= 2;\n        break;\n      case \"Oceania\":\n        scoreDeduction *= 2;\n        break;\n      case \"Africa\":\n        scoreDeduction *= 2;\n        break;\n      default:\n        break;\n    }\n\n    console.log(\"Final deduction\", scoreDeduction);\n\n    let score = maxScore - scoreDeduction;\n    if (score < 0) score = 0;\n\n    setPopup({\n      show: true,\n      roundScore: score,\n      sessionScore: popup.sessionScore + score,\n      sessionInfo: [\n        ...popup.sessionInfo,\n        {\n          country: currTrack.location,\n          songId: currTrack.id,\n          correct: false,\n          score: score,\n          code: currTrackCountry.cca2.toLowerCase(),\n        },\n      ],\n    });\n    // if (currTrack.location === currChosen) {\n    //   //alert(`${currChosen} is correct!`);\n    // } else {\n    //   //alert(  `You guessed ${currChosen} but the answer was ${currTrack.location}!`);\n    // }\n    // getNewArtist();\n  };\n\n  useEffect(() => {\n    nextTrack();\n  }, []);\n\n  if (redirect !== \"\") {\n    return <Redirect to={`/${redirect}`} />;\n  }\n  // if (redirect === \"login\") {\n  //   return <Redirect to=\"/login\" />;\n  // }\n  return (\n    <>\n      <div className=\"play-section\">\n        <div className=\"overlay\">\n          <CountryGuessInfo\n            currChosen={currChosen}\n            guessGiven={guessGiven}\n            audioRef={audioRef}\n            trackURL={currTrack.url}\n          />\n          {/* <button onClick={refreshToken}>Refresh</button> */}\n        </div>\n        <div className=\"map-div\">\n          <MapPage handleNewChosen={handleNewChosen} currMap={currMap} />\n        </div>\n        <GuessPopup\n          show={popup.show}\n          currMap={currMap}\n          currTrack={currTrack}\n          currChosen={currChosen}\n          nextTrack={nextTrack}\n          roundScore={popup.roundScore}\n          sessionScore={popup.sessionScore}\n          sessionInfo={popup.sessionInfo}\n          sendScoreToServer={sendScoreToServer}\n          newGame={newGame}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Play;\n","import React, { useContext, useState } from \"react\";\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\n\nimport { UserContext } from \"./App.js\";\nimport \"./Header.scss\";\n\nconst Header = ({ setRedirect, checkToken }) => {\n  const userData = useContext(UserContext);\n  const [hamburgerOpen, setHamburgerOpen] = useState(false);\n  const menu = document.getElementById(\"menu\");\n  if (\n    !(window.location.pathname === \"/\") &&\n    userData &&\n    userData.userName === \"\"\n  ) {\n    checkToken();\n  }\n\n  const openMenu = () => {\n    console.log(\"openin!\");\n    if (hamburgerOpen) {\n      menu.style.left = \"100vw\";\n      menu.style.visibility = \"hidden\";\n    } else {\n      menu.style.left = \"0px\";\n      menu.style.visibility = \"visible\";\n    }\n    setHamburgerOpen(!hamburgerOpen);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"logo\">\n          <h1>A Musical Planet</h1>\n        </div>\n        <div\n          className={\"hamburger\" + (hamburgerOpen ? \" open\" : \"\")}\n          onClick={openMenu}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n        <div className=\"navbar\">\n          <NavLink\n            className=\"linkButton\"\n            to=\"/maps\"\n            activeStyle={{ backgroundColor: \"white\" }}\n          >\n            Maps\n          </NavLink>\n          <NavLink\n            className=\"linkButton\"\n            to=\"/about\"\n            activeStyle={{ backgroundColor: \"white\" }}\n          >\n            About\n          </NavLink>\n          <NavLink\n            className=\"linkButton\"\n            to=\"/leaderboard\"\n            activeStyle={{ backgroundColor: \"white\" }}\n          >\n            Leaderboard\n          </NavLink>\n          {userData && userData.displayName ? (\n            <NavLink className=\"userLink\" to={`/user/${userData.userName}`}>\n              <img src={userData.profilePicture} alt=\"\" />\n            </NavLink>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n      <ul\n        id=\"menu\"\n        className={!hamburgerOpen ? \" hidden\" : \"\"}\n        onClick={openMenu}\n      >\n        <NavLink\n          className=\"linkButton\"\n          to=\"/maps\"\n          activeStyle={{ backgroundColor: \"#333\", color: \"#fff\" }}\n        >\n          Maps\n        </NavLink>\n        <NavLink\n          className=\"linkButton\"\n          to=\"/about\"\n          activeStyle={{ backgroundColor: \"#333\", color: \"#fff\" }}\n        >\n          About\n        </NavLink>\n        <NavLink\n          className=\"linkButton\"\n          to=\"/leaderboard\"\n          activeStyle={{ backgroundColor: \"#333\", color: \"#fff\" }}\n        >\n          Leaderboard\n        </NavLink>\n        {userData && userData.displayName ? (\n          <NavLink\n            className=\"linkButton\"\n            to={`/user/${userData.userName}`}\n            activeStyle={{ backgroundColor: \"#333\", color: \"#fff\" }}\n          >\n            {userData.displayName}\n          </NavLink>\n        ) : (\n          <></>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./Login.css\";\n\nconst Login = ({ handleLogin }) => {\n  return (\n    <div className=\"login\">\n      <img src=\"/a-musical-planet.jpg\" alt=\"musical planet\" />\n      <button type=\"submit\" onClick={handleLogin}>\n        Login With Spotify\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { UserContext } from \"./App.js\";\n\nconst MapItem = ({ map, handleMapChosen }) => {\n  const userData = useContext(UserContext);\n\n  const formattedMapName =\n    map.name[0].toLowerCase() + map.name.slice(1).replaceAll(\" \", \"\");\n  const maxScore =\n    userData &&\n    userData.stats &&\n    userData.stats.maxScores &&\n    userData.stats.maxScores[formattedMapName]\n      ? userData.stats.maxScores[formattedMapName]\n      : 0;\n  return (\n    <div className=\"MapItem\">\n      <img src={\"/mapimages/\" + map.image} alt={map.name} />\n      <h1>{map.name}</h1>\n      <p>{map.description}</p>\n      <p>{`Max Score: ${maxScore}`}</p>\n      <Link to=\"/play\" onClick={() => handleMapChosen(map.name)} replace>\n        Play\n      </Link>\n    </div>\n  );\n};\n\nexport default MapItem;\n","import React, { useState } from \"react\";\nimport MapItem from \"./MapItem\";\nimport \"./ChooseMap.scss\";\nimport MapData from \"./MapData.json\";\n\nconst ChooseMap = ({ handleMapChosen }) => {\n  const [chosenMap, setChosenMap] = useState(\"World Hard\");\n  const [chosenMapCategory, setChosenMapCategory] = useState(\"World\");\n  const chosenMapData = MapData.find((map) => map.name === chosenMap);\n\n  const mapCategories = [\"World\", \"Continent\", \"Other\"];\n\n  return (\n    <div className=\"ChooseMapContainer\">\n      <div className=\"MapHead\">\n        <h1>Official Maps</h1>\n      </div>\n      <div className=\"MapBodyDesktop\">\n        <select\n          id=\"maplistDesktop\"\n          onChange={(e) => {\n            setChosenMapCategory(e.target.value);\n          }}\n        >\n          {mapCategories.map((category) => (\n            <option key={category} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n        <div className=\"MapItemsDesktop\">\n          {MapData.map((currMap) =>\n            currMap.category === chosenMapCategory ? (\n              <MapItem\n                key={currMap.name}\n                map={currMap}\n                handleMapChosen={handleMapChosen}\n              />\n            ) : (\n              <></>\n            )\n          )}\n        </div>\n      </div>\n      <div className=\"MapItemsMobile\">\n        <select\n          id=\"maplistMobile\"\n          onChange={(e) => {\n            setChosenMap(e.target.value);\n          }}\n        >\n          {MapData.map((map) => (\n            <option key={map.name} value={map.name}>\n              {map.name}\n            </option>\n          ))}\n        </select>\n        <MapItem\n          key={chosenMapData.name}\n          map={chosenMapData}\n          handleMapChosen={handleMapChosen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseMap;\n","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst LeaderboardUser = ({ userData, map, rank }) => {\n  return (\n    <div className=\"leaderboardUser\">\n      <h1 className=\"rank\">{rank}</h1>\n      <img src={userData.profilePicture} alt=\"User\" />\n      <div className=\"names\">\n        <Link to={`/user/${userData.userName}`}>{userData.displayName}</Link>\n        <p>{userData.userName}</p>\n      </div>\n      <div className=\"highScore\">\n        <p>Score</p>\n        <h3>{userData.stats.maxScores[map] ? userData.stats.maxScores[map] : 0}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaderboardUser;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MapData from \"./MapData.json\";\nimport LeaderboardUser from \"./LeaderboardUser\";\nimport \"./Leaderboard.scss\";\n\nconst Leaderboard = () => {\n  const [leaderboardStats, setLeaderboardStats] = useState([]);\n  const [chosenMap, setChosenMap] = useState(\"worldEasy\");\n  const [currPage, setCurrPage] = useState(0);\n\n  useEffect(() => {\n    axios(`${process.env.REACT_APP_BACKEND_URI}/getLeaderboard`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"GET\",\n    }).then((leaderboardData) => {\n      console.log(\"LEADERBOARD:\");\n      console.log(leaderboardData);\n      setLeaderboardStats(leaderboardData.data);\n    });\n  }, []);\n\n  return (\n    <div className=\"leaderboardContainer\">\n      <div className=\"leaderboardHead\">\n        <h1>Leaderboard</h1>\n        <select\n          id=\"maplist\"\n          onChange={(e) => {\n            setChosenMap(\n              e.target.value[0].toLowerCase() +\n                e.target.value.slice(1).replaceAll(\" \", \"\")\n            );\n            setCurrPage(0);\n          }}\n        >\n          {MapData.map((map) => (\n            <option key={map.name} value={map.name}>\n              {map.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"leaderboard\">\n        <img\n          src=\"/next.png\"\n          id=\"leftArrow\"\n          className={currPage <= 0 ? \"disabledArrow\" : \"\"}\n          onClick={() => (currPage > 0 ? setCurrPage(currPage - 1) : null)}\n        />\n        <div className=\"leaderboardUsers\">\n          {leaderboardStats[chosenMap] ? (\n            leaderboardStats[chosenMap]\n              .slice(currPage * 5, currPage * 5 + 5)\n              .map((userData, rank) => (\n                <LeaderboardUser\n                  key={\n                    userData.userName + chosenMap + (currPage * 5 + rank + 1)\n                  }\n                  rank={currPage * 5 + rank + 1}\n                  userData={userData}\n                  map={chosenMap}\n                />\n              ))\n          ) : (\n            <h3>LOADING...</h3>\n          )}\n        </div>\n        <img\n          src=\"/next.png\"\n          id=\"rightArrow\"\n          className={currPage >= 4 ? \"disabledArrow\" : \"\"}\n          onClick={() => (currPage < 4 ? setCurrPage(currPage + 1) : null)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./PersonalPage.scss\";\n\nimport MapData from \"./MapData.json\";\n\nconst PersonalPage = () => {\n  const { userName } = useParams();\n\n  const [userData, setUserData] = useState(null);\n\n  const [chosenMap, setChosenMap] = useState(\"overall\");\n\n  useEffect(() => {\n    setChosenMap(\"overall\");\n    axios(`${process.env.REACT_APP_BACKEND_URI}/userData/${userName}`, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"GET\",\n    }).then(({ data }) => setUserData(data));\n  }, [userName]);\n\n  return (\n    <div className=\"userPageContainer\">\n      {userData ? (\n        <div className=\"userPage\">\n          <div className=\"userHead\">\n            <img src={userData.profilePicture} alt=\"User\" />\n            <div className=\"userName\">\n              <h1>{userData.displayName}</h1>\n              <img\n                src={\n                  \"/flags/\" +\n                  (userData.country.length === 2\n                    ? userData.country.toLowerCase()\n                    : userData.country.substring(0, 2).toLowerCase()) +\n                  \".svg\"\n                }\n                alt=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"stats\">\n            <div className=\"statsHead\">\n              <h2>Game Statistics</h2>\n              <select\n                id=\"maplist\"\n                value={chosenMap}\n                onChange={(e) => {\n                  console.log(\"Changing value to\", e.target.value);\n                  setChosenMap(e.target.value);\n                }}\n              >\n                <option key=\"overall\" value=\"overall\">\n                  Overall\n                </option>\n                {MapData.map((map) => (\n                  <option\n                    key={map.name}\n                    value={\n                      map.name[0].toLowerCase() +\n                      map.name.slice(1).replaceAll(\" \", \"\")\n                    }\n                  >\n                    {map.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"statsBody\">\n              <div>\n                <p>Completed Games</p>\n                <h3>\n                  {userData.stats.completedGames[chosenMap]\n                    ? userData.stats.completedGames[chosenMap]\n                    : 0}\n                </h3>\n              </div>\n              <div className={chosenMap === \"overall\" ? \"bestOverall\" : \"\"}>\n                <p>Best Game</p>\n                {chosenMap === \"overall\" ? (\n                  <h3 className=\"overallMaxScore\">\n                    {userData.stats.maxScores.overall.score &&\n                    userData.stats.maxScores.overall.score !== 0\n                      ? `${userData.stats.maxScores.overall.score} \\n (${\n                          userData.stats.maxScores.overall.map[0].toUpperCase() +\n                          userData.stats.maxScores.overall.map\n                            .slice(1)\n                            .replace(/[A-Z]/, (letter) => \" \" + letter)\n                        })`\n                      : 0}\n                  </h3>\n                ) : (\n                  <h3>\n                    {userData.stats.maxScores[chosenMap]\n                      ? userData.stats.maxScores[chosenMap]\n                      : 0}\n                  </h3>\n                )}\n              </div>\n              <div>\n                <p>Average Game</p>\n                <h3>\n                  {userData.stats.averageScores[chosenMap]\n                    ? userData.stats.averageScores[chosenMap]\n                    : 0}\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h3>LOADING...</h3>\n      )}\n    </div>\n  );\n};\n\nexport default PersonalPage;\n","//import \"./App.css\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Play from \"./Play\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport ChooseMap from \"./ChooseMap\";\nimport Leaderboard from \"./Leaderboard\";\nimport PersonalPage from \"./PersonalPage\";\nimport dotenv from \"dotenv\";\nimport getCookie from \"./GetCookie\";\n\ndotenv.config();\n\nexport const UserContext = React.createContext({\n  userName: \"user\",\n  displayName: \"user\",\n  stats: {\n    maxScores: {},\n    averageScores: {},\n    completedGames: 0,\n  },\n});\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [userData, setUserData] = useState({\n    displayName: \"\",\n    userName: \"\",\n    maxScores: {},\n    profilePicture: \"\",\n    country: \"\",\n  });\n\n  //default world as map\n  const [currMap, setCurrMap] = useState(\"world\");\n\n  const sendScoreToServer = (newScore) => {\n    console.log(\"Sending score to server\", newScore);\n    axios(\n      `${process.env.REACT_APP_BACKEND_URI}/newScore/${userData.userName}/${currMap}/${newScore}`,\n      {\n        method: \"POST\",\n      }\n    )\n      .then(({ data }) => {\n        console.log(\"Score sent to server!\");\n        console.log(data);\n        setUserData(data);\n      })\n      .catch((err) => {\n        console.log(\"ERROR SENDING SCORE TO SERVER\", err);\n      });\n  };\n\n  const setTokenFromCookie = () => {\n    const accessTokenCookie = getCookie(\"accessToken\");\n    console.log(\"myCookie\", accessTokenCookie);\n    if (accessTokenCookie !== \"\") {\n      console.log(\"GOT COOKIE!\", accessTokenCookie);\n      setAccessToken(accessTokenCookie);\n      return true;\n    } else {\n      console.log(\"Could not find cookie\");\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    console.log(accessToken);\n    if (accessToken !== \"\" && accessToken !== null) {\n      console.log(\"UseEffect setting user with accesstoken\", accessToken);\n      setUser();\n    } else {\n      console.log(\"No access token with which to set user\");\n    }\n  }, [accessToken]);\n\n  const setUser = async () => {\n    console.log(\"SETTING USER\");\n    return axios(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        Accept: \"application/json\",\n        // \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n      method: \"GET\",\n    })\n      .then((spotifyData) => {\n        axios(\n          `${process.env.REACT_APP_BACKEND_URI}/userData/${spotifyData.data.id}`,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            method: \"GET\",\n          }\n        ).then(({ data }) => {\n          setUserData(data);\n        });\n      })\n      .catch((err) => {\n        console.log(\"ERROR GETTING SPOTIFY USER DATA\", err);\n        if (err.response.status >= 400) {\n          console.log(\"ERROR 400+, REFRESHING TOKEN\");\n          window.location.replace(\n            `${process.env.REACT_APP_BACKEND_URI}/getNewToken`\n          );\n        }\n      });\n  };\n\n  const handleMapChosen = (mapName) => {\n    if (accessToken === null || accessToken === \"\") {\n      if (!setTokenFromCookie()) return setRedirect(\"login\");\n    }\n    console.log(\"HANDLING MAP CHOSEN\");\n    setCurrMap(mapName[0].toLowerCase() + mapName.slice(1).replaceAll(\" \", \"\"));\n    // setRedirect(\"play\");\n  };\n\n  const checkToken = () => {\n    if (!setTokenFromCookie()) {\n      setRedirect(\"login\");\n    }\n  };\n\n  const handleLogin = () => {\n    window.location.replace(`${process.env.REACT_APP_BACKEND_URI}/login`);\n  };\n\n  const setAccessTokenHandler = (newAccessToken) => {\n    let accessTokenExpireDate = new Date();\n    accessTokenExpireDate.setTime(\n      accessTokenExpireDate.getTime() + 3600 * 1000\n    );\n\n    let refreshTokenExpireDate = new Date();\n    refreshTokenExpireDate.setTime(\n      refreshTokenExpireDate.getTime() + 3600 * 1000 * 24 * 365\n    );\n\n    document.cookie =\n      \"accessToken=\" +\n      newAccessToken +\n      \";expires=\" +\n      accessTokenExpireDate.toUTCString() +\n      \";path=/\";\n\n    setAccessToken(newAccessToken);\n  };\n\n  const handleAuth = () => {\n    // console.log(accessToken === \"\");\n    // if (accessToken !== \"\" && accessToken !== null) {\n    //   console.log(\"have access token\", accessToken);\n    //   return setRedirect(\"maps\");\n    // }\n    // if (setTokenFromCookie()) {\n    //   console.log(\"gettin from cookie\");\n    //   return setRedirect(\"maps\");\n    // }\n    console.count(\"Handling AUTH\");\n    const URLAccessToken = new URLSearchParams(window.location.search).get(\n      \"access_token\"\n    );\n    const URLRefreshToken = new URLSearchParams(window.location.search).get(\n      \"refresh_token\"\n    );\n    setAccessTokenHandler(URLAccessToken);\n    // return <Redirect to=\"/maps\" />;\n    setRedirect(\"maps\");\n  };\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {redirect === \"play\" && window.location.pathname === \"/maps\" ? (\n          <Redirect to=\"play\" replace />\n        ) : null}\n        {redirect === \"maps\" ? <Redirect to=\"/maps\" /> : null}\n        {redirect === \"login\" ? <Redirect to=\"/login\" /> : null}\n        <UserContext.Provider value={userData}>\n          <Header\n            // userData={userData}\n            checkToken={checkToken}\n            setRedirect={setRedirect}\n          />\n          <Switch>\n            <Route path=\"/auth\" render={() => handleAuth()} />\n            <Route\n              path=\"/login\"\n              render={() =>\n                setTokenFromCookie() ? <Redirect to=\"/maps\" /> : handleLogin()\n              }\n            />\n            <Route exact path=\"/\">\n              {document.cookie === \"\" ? (\n                <Login handleLogin={handleLogin} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )}\n            </Route>\n            <Route path=\"/maps\">\n              <ChooseMap handleMapChosen={handleMapChosen} />\n            </Route>\n            <Route path=\"/leaderboard\">\n              <Leaderboard />\n            </Route>\n            <Route path=\"/user/:userName\" children={<PersonalPage />} />\n            <Route path=\"/play\">\n              <Play\n                accessToken={accessToken}\n                token={accessToken}\n                currMap={currMap}\n                setAccessTokenHandler={setAccessTokenHandler}\n                setTokenFromCookie={setTokenFromCookie}\n                sendScoreToServer={sendScoreToServer}\n              />\n            </Route>\n            <Route path=\"/error\">\n              <h1>Error! Check console</h1>\n            </Route>\n            <Route path=\"*\">\n              <h1>Not Found!</h1>\n            </Route>\n          </Switch>\n        </UserContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","export default function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}